<%@ Control Language="C#" ClassName="DefectDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
            <col width="34%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtDefectID_lbl" AssociatedControlID="txtDefectID" runat="server" Text="<%$ resources: txtDefectID.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtDefectID" Enabled="false" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklStatus_lbl" AssociatedControlID="pklStatus" runat="server" Text="<%$ resources: pklStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklStatus" PickListName="Defect Status" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkSubmitSearch" CssClass="checkbox "
 Text="<%$ resources: chkSubmitSearch.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklProject_lbl" AssociatedControlID="pklProject" runat="server" Text="<%$ resources: pklProject.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklProject" PickListName="Project" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklSource_lbl" AssociatedControlID="pklSource" runat="server" Text="<%$ resources: pklSource.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklSource" PickListName="Defect Source" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkAddtoSearch" CssClass="checkbox "
 Text="<%$ resources: chkAddtoSearch.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklVerFound_lbl" AssociatedControlID="pklVerFound" runat="server" Text="<%$ resources: pklVerFound.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklVerFound" PickListName="Defect Version Found" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklType_lbl" AssociatedControlID="pklType" runat="server" Text="<%$ resources: pklType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklType" PickListName="Defect Type" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklPublicAccess_lbl" AssociatedControlID="pklPublicAccess" runat="server" Text="<%$ resources: pklPublicAccess.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklPublicAccess" PickListName="Ticket Activity Public Access" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklTargetVer_lbl" AssociatedControlID="pklTargetVer" runat="server" Text="<%$ resources: pklTargetVer.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklTargetVer" PickListName="Defect Target Version" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklPriority_lbl" AssociatedControlID="pklPriority" runat="server" Text="<%$ resources: pklPriority.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklPriority" PickListName="Defect Priority" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklResolution_lbl" AssociatedControlID="pklResolution" runat="server" Text="<%$ resources: pklResolution.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklResolution" PickListName="Defect Resolution" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklSeverity_lbl" AssociatedControlID="pklSeverity" runat="server" Text="<%$ resources: pklSeverity.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklSeverity" PickListName="Defect Severity" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAssignedTo_lbl" AssociatedControlID="lueAssignedTo" runat="server" Text="<%$ resources: lueAssignedTo.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="lueAssignedTo" ButtonToolTip="<%$ resources: lueAssignedTo.ButtonToolTip %>" AutoPostBack="true" Types="$qfcontrol.Types"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklVerFixed_lbl" AssociatedControlID="pklVerFixed" runat="server" Text="<%$ resources: pklVerFixed.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklVerFixed" PickListName="Defect Fixed in Build" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklFrequency_lbl" AssociatedControlID="pklFrequency" runat="server" Text="<%$ resources: pklFrequency.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklFrequency" PickListName="Defect Frequency" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnAssignToPhone_lbl" AssociatedControlID="phnAssignToPhone" runat="server" Text="<%$ resources: phnAssignToPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnAssignToPhone"
ReadOnly="true"  />
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="3"  >
<div class="dependency">
<SalesLogix:DependencyLookupControl runat="server" ID="dplACI"  LabelCssClass="lbl" ButtonToolTip="<%$ resources: dplACI.ButtonToolTip %>"  >
<LookupResultsHeaderStyle BackColor="ActiveCaption" Font-Bold="True" ForeColor="White" />
<LookupDialogStyle BackColor="ButtonFace" />
<LookupResultsStyle CellPadding="4" ForeColor="Black" />
<DependentLookups>
 <SalesLogix:DependentLookup LookupEntityName="IAreaCategoryIssue" LookupEntityTypeName="Sage.Entity.Interfaces.IAreaCategoryIssue, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Area" ParentProperty="" PropertyDisplay="<%$ resources: dplACI.DependentLookups.Area.PropertyDisplay %>" BindingPropertyName="Area">
  </SalesLogix:DependentLookup>
 <SalesLogix:DependentLookup LookupEntityName="IAreaCategoryIssue" LookupEntityTypeName="Sage.Entity.Interfaces.IAreaCategoryIssue, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Category" ParentProperty="Area" PropertyDisplay="<%$ resources: dplACI.DependentLookups.Category.PropertyDisplay %>" BindingPropertyName="Category">
  </SalesLogix:DependentLookup>
 <SalesLogix:DependentLookup LookupEntityName="IAreaCategoryIssue" LookupEntityTypeName="Sage.Entity.Interfaces.IAreaCategoryIssue, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Issue" ParentProperty="Category" PropertyDisplay="<%$ resources: dplACI.DependentLookups.Issue.PropertyDisplay %>" BindingPropertyName="Issue">
  </SalesLogix:DependentLookup>
  </DependentLookups>
  <LookupPreFilters>
        <SalesLogix:LookupPreFilter PropertyName="Defect" PropertyType="System.Boolean" OperatorCode="="   FilterValue="True"></SalesLogix:LookupPreFilter>
      </LookupPreFilters>
</SalesLogix:DependencyLookupControl>
</div>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteAssignedDate_lbl" AssociatedControlID="dteAssignedDate" runat="server" Text="<%$ resources: dteAssignedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteAssignedDate" ButtonToolTip="<%$ resources: dteAssignedDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
                  <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueOwner_lbl" AssociatedControlID="lueOwner" runat="server" Text="<%$ resources: lueOwner.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="lueOwner" ButtonToolTip="<%$ resources: lueOwner.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
      </tr>
<tr>
                  <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="DefectDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="GroupNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="SaveButton"
 AlternateText="<%$ resources: SaveButton.Caption %>"  ToolTip="<%$ resources: SaveButton.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdCopy"
 AlternateText="<%$ resources: cmdCopy.Caption %>"  ToolTip="<%$ resources: cmdCopy.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Copy_16x16"  />
 
    <asp:ImageButton runat="server" ID="DeleteButton"
 AlternateText="<%$ resources: DeleteButton.Caption %>"  ToolTip="<%$ resources: DeleteButton.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="lnkDefectDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="defectdetailview.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IDefect); }
}

 

protected override void OnAddEntityBindings() { 
                    // txtDefectID.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDefectIDTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectNumber", txtDefectID, "Text");
        BindingSource.Bindings.Add(txtDefectIDTextBinding);
                       // pklStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("StatusCode", pklStatus, "PickListValue");
        BindingSource.Bindings.Add(pklStatusPickListValueBinding);
                       // chkSubmitSearch.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkSubmitSearchCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SubmitSearch", chkSubmitSearch, "Checked");
        BindingSource.Bindings.Add(chkSubmitSearchCheckedBinding);
                       // pklProject.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklProjectPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProjectCode", pklProject, "PickListValue");
        BindingSource.Bindings.Add(pklProjectPickListValueBinding);
                       // pklSource.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklSourcePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Source", pklSource, "PickListValue");
        BindingSource.Bindings.Add(pklSourcePickListValueBinding);
                       // chkAddtoSearch.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkAddtoSearchCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AddKnowledge", chkAddtoSearch, "Checked");
        BindingSource.Bindings.Add(chkAddtoSearchCheckedBinding);
                       // pklVerFound.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklVerFoundPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("VersionFound", pklVerFound, "PickListValue");
        BindingSource.Bindings.Add(pklVerFoundPickListValueBinding);
                       // pklType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectType", pklType, "PickListValue");
        BindingSource.Bindings.Add(pklTypePickListValueBinding);
                       // pklPublicAccess.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklPublicAccessPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PublicAccessCode", pklPublicAccess, "PickListValue");
        BindingSource.Bindings.Add(pklPublicAccessPickListValueBinding);
                       // pklTargetVer.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTargetVerPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TargetVersion", pklTargetVer, "PickListValue");
        BindingSource.Bindings.Add(pklTargetVerPickListValueBinding);
                       // pklPriority.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklPriorityPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PriorityCode", pklPriority, "PickListValue");
        BindingSource.Bindings.Add(pklPriorityPickListValueBinding);
                       // pklResolution.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklResolutionPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ResolutionCode", pklResolution, "PickListValue");
        BindingSource.Bindings.Add(pklResolutionPickListValueBinding);
                       // pklSeverity.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklSeverityPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SeverityCode", pklSeverity, "PickListValue");
        BindingSource.Bindings.Add(pklSeverityPickListValueBinding);
                       // lueAssignedTo.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAssignedToLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssignedTo", lueAssignedTo, "LookupResultValue");
        BindingSource.Bindings.Add(lueAssignedToLookupResultValueBinding);
                       // pklVerFixed.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklVerFixedPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("FixedInbuild", pklVerFixed, "PickListValue");
        BindingSource.Bindings.Add(pklVerFixedPickListValueBinding);
                       // pklFrequency.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklFrequencyPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Frequency", pklFrequency, "PickListValue");
        BindingSource.Bindings.Add(pklFrequencyPickListValueBinding);
                       // phnAssignToPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnAssignToPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssignedTo.User.UserInfo.Phone", phnAssignToPhone, "Text");
        BindingSource.Bindings.Add(phnAssignToPhoneTextBinding);
      BindingSource.AddBindingProvider(dplACI as Sage.Platform.EntityBinding.IEntityBindingProvider);
                    // dplACI.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dplACITextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Area", dplACI, "Text");
        BindingSource.Bindings.Add(dplACITextBinding);
                       // dteAssignedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteAssignedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssignedDate", dteAssignedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteAssignedDateDateTimeValueBinding);
                       // lueOwner.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOwnerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", lueOwner, "LookupResultValue");
        BindingSource.Bindings.Add(lueOwnerLookupResultValueBinding);
    
   
                }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void lueAssignedTo_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IDefect>("Defect.OnAssignedToChanged", objarray);
  
}
protected void SaveButton_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IDefect _entity = BindingSource.Current as Sage.Entity.Interfaces.IDefect;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
  
}
protected void cmdCopy_ClickAction(object sender, EventArgs e) {
      Response.Redirect(string.Format("InsertDefect.aspx?modeid=Insert&entityId={0}", (BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
   
}
protected void DeleteButton_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }
          DeleteButton_ClickActionBRC(sender, e);
    
  
}
protected void DeleteButton_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("Defect.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueAssignedTo.LookupResultValueChanged += new EventHandler(lueAssignedTo_ChangeAction);
SaveButton.Click += new ImageClickEventHandler(SaveButton_ClickAction);
SaveButton.Click += new ImageClickEventHandler(DialogService.CloseEventHappened);
cmdCopy.Click += new ImageClickEventHandler(cmdCopy_ClickAction);
DeleteButton.Click += new ImageClickEventHandler(DeleteButton_ClickAction);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(SaveButton);

DeleteButton.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("DeleteButton.ActionConfirmationMessage").ToString()));



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new DefectDetailsAdapter(this)); }
}

public class DefectDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IDefectDetails
{
	public DefectDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ITextBoxControl _txtDefectID;
	public Sage.Platform.Controls.ITextBoxControl txtDefectID
	{
		get { return FindControl(ref _txtDefectID, "txtDefectID"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklProject;
	public Sage.Platform.Controls.IPickListControl pklProject
	{
		get { return FindControl(ref _pklProject, "pklProject"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklVerFound;
	public Sage.Platform.Controls.IPickListControl pklVerFound
	{
		get { return FindControl(ref _pklVerFound, "pklVerFound"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklTargetVer;
	public Sage.Platform.Controls.IPickListControl pklTargetVer
	{
		get { return FindControl(ref _pklTargetVer, "pklTargetVer"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklResolution;
	public Sage.Platform.Controls.IPickListControl pklResolution
	{
		get { return FindControl(ref _pklResolution, "pklResolution"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklVerFixed;
	public Sage.Platform.Controls.IPickListControl pklVerFixed
	{
		get { return FindControl(ref _pklVerFixed, "pklVerFixed"); }
	}
	private Sage.Platform.Controls.IDependencyLookupControl _dplACI;
	public Sage.Platform.Controls.IDependencyLookupControl dplACI
	{
		get { return FindControl(ref _dplACI, "dplACI"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklStatus;
	public Sage.Platform.Controls.IPickListControl pklStatus
	{
		get { return FindControl(ref _pklStatus, "pklStatus"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklSource;
	public Sage.Platform.Controls.IPickListControl pklSource
	{
		get { return FindControl(ref _pklSource, "pklSource"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklType;
	public Sage.Platform.Controls.IPickListControl pklType
	{
		get { return FindControl(ref _pklType, "pklType"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklPriority;
	public Sage.Platform.Controls.IPickListControl pklPriority
	{
		get { return FindControl(ref _pklPriority, "pklPriority"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklSeverity;
	public Sage.Platform.Controls.IPickListControl pklSeverity
	{
		get { return FindControl(ref _pklSeverity, "pklSeverity"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklFrequency;
	public Sage.Platform.Controls.IPickListControl pklFrequency
	{
		get { return FindControl(ref _pklFrequency, "pklFrequency"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkSubmitSearch;
	public Sage.Platform.Controls.ICheckBoxControl chkSubmitSearch
	{
		get { return FindControl(ref _chkSubmitSearch, "chkSubmitSearch"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkAddtoSearch;
	public Sage.Platform.Controls.ICheckBoxControl chkAddtoSearch
	{
		get { return FindControl(ref _chkAddtoSearch, "chkAddtoSearch"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklPublicAccess;
	public Sage.Platform.Controls.IPickListControl pklPublicAccess
	{
		get { return FindControl(ref _pklPublicAccess, "pklPublicAccess"); }
	}
	private Sage.Platform.Controls.IOwnerControl _lueAssignedTo;
	public Sage.Platform.Controls.IOwnerControl lueAssignedTo
	{
		get { return FindControl(ref _lueAssignedTo, "lueAssignedTo"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnAssignToPhone;
	public Sage.Platform.Controls.IPhoneControl phnAssignToPhone
	{
		get { return FindControl(ref _phnAssignToPhone, "phnAssignToPhone"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dteAssignedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dteAssignedDate
	{
		get { return FindControl(ref _dteAssignedDate, "dteAssignedDate"); }
	}
	private Sage.Platform.Controls.IOwnerControl _lueOwner;
	public Sage.Platform.Controls.IOwnerControl lueOwner
	{
		get { return FindControl(ref _lueOwner, "lueOwner"); }
	}
	private Sage.Platform.Controls.IGroupNavigatorControl _GroupNavigator;
	public Sage.Platform.Controls.IGroupNavigatorControl GroupNavigator
	{
		get { return FindControl(ref _GroupNavigator, "GroupNavigator"); }
	}
	private Sage.Platform.Controls.IButtonControl _SaveButton;
	public Sage.Platform.Controls.IButtonControl SaveButton
	{
		get { return FindControl(ref _SaveButton, "SaveButton"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdCopy;
	public Sage.Platform.Controls.IButtonControl cmdCopy
	{
		get { return FindControl(ref _cmdCopy, "cmdCopy"); }
	}
	private Sage.Platform.Controls.IButtonControl _DeleteButton;
	public Sage.Platform.Controls.IButtonControl DeleteButton
	{
		get { return FindControl(ref _DeleteButton, "DeleteButton"); }
	}

}

</script>

<script type="text/javascript">
</script>
