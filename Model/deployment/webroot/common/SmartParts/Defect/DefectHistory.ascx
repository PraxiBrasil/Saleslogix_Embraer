<%@ Control Language="C#" ClassName="DefectHistory" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="20%" />
            <col width="20%" />
            <col width="20%" />
            <col width="20%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueReportedName_lbl" AssociatedControlID="lueReportedName" runat="server" Text="<%$ resources: lueReportedName.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="lueReportedName" ButtonToolTip="<%$ resources: lueReportedName.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteReportedDate" ButtonToolTip="<%$ resources: dteReportedDate.ButtonToolTip %>" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueCreatedName_lbl" AssociatedControlID="lueCreatedName" runat="server" Text="<%$ resources: lueCreatedName.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="lueCreatedName" ReadOnly="true" ButtonToolTip="<%$ resources: lueCreatedName.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpCreatedDate" ReadOnly="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueCompletedName_lbl" AssociatedControlID="lueCompletedName" runat="server" Text="<%$ resources: lueCompletedName.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="lueCompletedName" ButtonToolTip="<%$ resources: lueCompletedName.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteCompletedDate" ButtonToolTip="<%$ resources: dteCompletedDate.ButtonToolTip %>" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueUpdatedName_lbl" AssociatedControlID="lueUpdatedName" runat="server" Text="<%$ resources: lueUpdatedName.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="lueUpdatedName" ReadOnly="true" ButtonToolTip="<%$ resources: lueUpdatedName.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpModifyDate" ReadOnly="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueOwnedBy_lbl" AssociatedControlID="lueOwnedBy" runat="server" Text="<%$ resources: lueOwnedBy.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="lueOwnedBy" ButtonToolTip="<%$ resources: lueOwnedBy.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueDetailName_lbl" AssociatedControlID="lueDetailName" runat="server" Text="<%$ resources: lueDetailName.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="lueDetailName" ReadOnly="true" ButtonToolTip="<%$ resources: lueDetailName.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpDetailDate" ReadOnly="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  colspan="4" >
<div class="mainContentHeader2"><span id="hzsAuditTrail"  >
<asp:Localize runat="server" Text="<%$ resources: hzsAuditTrail.Caption %>"   >Audit Trail</asp:Localize></span></div>


      </td>
                        </tr>
<tr>
            <td  colspan="4" >
<SalesLogix:SlxGridView runat="server" ID="grdJournal" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdJournalpage_changing" EmptyTableRowText="<%$ resources: grdJournal.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdJournal_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdJournal.a0f26035-d737-4fe1-adb1-95c3d5087f21.ColumnHeading %>"       SortExpression="CreateDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdJournalcol1"  DisplayMode="AsText" DateTimeValue='<%#  dtsHistory.getPropertyValue(Container.DataItem, "CreateDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdJournal.0dfbbc5c-b9cf-4fbe-8855-5eacb1ea2d7e.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:SlxUserControl runat="server" ID="grdJournalcol2" DisplayMode="AsText" LookupResultValue='<%#  dtsHistory.getPropertyValue(Container.DataItem, "CreateUser")  %>' CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="FieldName" 
      HeaderText="<%$ resources: grdJournal.8bff987f-93d5-4e05-a254-8c9beec6e4aa.ColumnHeading %>"       SortExpression="FieldName"    >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdJournal.ec1673c5-7bb6-42ee-9122-3ed3e46221ff.ColumnHeading %>"        >
    <itemtemplate>
   <%# FormatOldValue(Eval("FieldName"), Eval("OldValue") ) %>
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdJournal.111da4d8-11ff-4e0d-a674-e922cde28fa5.ColumnHeading %>"        >
    <itemtemplate>
   <%# FormatNewValue(Eval("FieldName"), Eval("NewValue") ) %>
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="Note" 
      HeaderText="<%$ resources: grdJournal.48f86f0f-27b8-46dd-b8e5-fbf15dbb2663.ColumnHeading %>"       SortExpression="Note"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdJournalpage_changing(object sender, GridViewPageEventArgs e)
{
 grdJournal.PageIndex = e.NewPageIndex;
 grdJournal.DataBind();
}
protected void grdJournal_Sorting(object sender, GridViewSortEventArgs e) { }
protected string FormatOldValue(object fieldChanged, object oldValue)
{
    string result = String.Empty;
    if (fieldChanged != null && oldValue != null)
    {
		result = oldValue.ToString();
		if (string.IsNullOrEmpty(result))
        {
            return result;
        }
		switch (fieldChanged.ToString().ToUpper())
        {
            case "STATUSCODE": case "PRIORITYCODE": case "SEVERITYCODE": case "RESOLUTIONCODE":
                Sage.SalesLogix.PickLists.PickList picklist = Sage.SalesLogix.PickLists.PickList.GetPickListByItemId(result);
                if (picklist != null)
                {
                    result = picklist.Text;
                }
                break;
            case "ASSIGNEDTOID": case "CLOSEDBYID": case "ACTIVITY USER":
                Sage.Entity.Interfaces.IOwner assignedTo = Sage.Platform.EntityFactory.GetRepository<Sage.Entity.Interfaces.IOwner>().Get(result);
                if (assignedTo != null)
                {
                    result = assignedTo.ToString();
                }
                break;
        }
    }
    return result;
}
protected string FormatNewValue(object fieldChanged, object oldValue)
{
    string result = String.Empty;
    if (fieldChanged != null && oldValue != null)
    {
		result = oldValue.ToString();
		if (string.IsNullOrEmpty(result))
        {
            return result;
        }
		switch (fieldChanged.ToString().ToUpper())
        {
            case "STATUSCODE": case "PRIORITYCODE": case "SEVERITYCODE": case "RESOLUTIONCODE":
                Sage.SalesLogix.PickLists.PickList picklist = Sage.SalesLogix.PickLists.PickList.GetPickListByItemId(result);
                if (picklist != null)
                {
                    result = picklist.Text;
                }
                break;
            case "ASSIGNEDTOID": case "CLOSEDBYID": case "ACTIVITY USER":
                Sage.Entity.Interfaces.IOwner assignedTo = Sage.Platform.EntityFactory.GetRepository<Sage.Entity.Interfaces.IOwner>().Get(result);
                if (assignedTo != null)
                {
                    result = assignedTo.ToString();
                }
                break;
        }
    }
    return result;
}
</script>

      </td>
                        </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="DefectHistory_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkDefectHistoryHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="defectaudittrailtab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IDefect); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsHistory;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsHistory
{ 
  get 
  {
    if (_dtsHistory == null)
    {
             _dtsHistory = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IDefectHistory), 
	    EntityType              ,"DefectHistory", System.Reflection.MemberTypes.Property);
                   _dtsHistory.UseSmartQuery = true;
      	   	}
 	return _dtsHistory;
  }
}

void dtsHistory_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsHistory.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsHistory);
   }
}

 



 

protected override void OnAddEntityBindings() { 
                    // lueReportedName.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueReportedNameLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RecordedBy", lueReportedName, "LookupResultValue");
        BindingSource.Bindings.Add(lueReportedNameLookupResultValueBinding);
                       // dteReportedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteReportedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RecordedDate", dteReportedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteReportedDateDateTimeValueBinding);
                       // lueCreatedName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueCreatedNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateUser", lueCreatedName, "Text");
        lueCreatedNameTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueCreatedNameTextBinding);
                 // lueCreatedName.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueCreatedNameLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateUser", lueCreatedName, "LookupResultValue");
        BindingSource.Bindings.Add(lueCreatedNameLookupResultValueBinding);
                       // dtpCreatedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpCreatedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", dtpCreatedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpCreatedDateDateTimeValueBinding);
                       // lueCompletedName.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueCompletedNameLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedBy", lueCompletedName, "LookupResultValue");
        BindingSource.Bindings.Add(lueCompletedNameLookupResultValueBinding);
                       // dteCompletedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteCompletedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedDate", dteCompletedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteCompletedDateDateTimeValueBinding);
                       // lueUpdatedName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueUpdatedNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", lueUpdatedName, "Text");
        lueUpdatedNameTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueUpdatedNameTextBinding);
                 // lueUpdatedName.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueUpdatedNameLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", lueUpdatedName, "LookupResultValue");
        BindingSource.Bindings.Add(lueUpdatedNameLookupResultValueBinding);
                       // dtpModifyDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpModifyDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyDate", dtpModifyDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpModifyDateDateTimeValueBinding);
                       // lueOwnedBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOwnedByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", lueOwnedBy, "LookupResultValue");
        BindingSource.Bindings.Add(lueOwnedByLookupResultValueBinding);
                       // lueDetailName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueDetailNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectProblem.ModifyUser", lueDetailName, "Text");
        lueDetailNameTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueDetailNameTextBinding);
                 // lueDetailName.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueDetailNameLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectProblem.ModifyUser", lueDetailName, "LookupResultValue");
        BindingSource.Bindings.Add(lueDetailNameLookupResultValueBinding);
                       // dtpDetailDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpDetailDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectProblem.ModifyDate", dtpDetailDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpDetailDateDateTimeValueBinding);
       
           dtsHistory.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("DefectHistory", grdJournal ));
   dtsHistory.BindFieldNames = new String[] { "Id","CreateDate","CreateUser","FieldName","OldValue","NewValue","Note" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsHistory_OnCurrentEntitySet);
     
}
	   	   	   	   	   	   	   	   	   	   	   	   	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dtsHistory.SourceObject == null) { dtsHistory.SourceObject = BindingSource.Current; }
if (dtsHistory.SourceObject == null) { RegisterBindingsWithClient(dtsHistory); }
dtsHistory.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new DefectHistoryAdapter(this)); }
}

public class DefectHistoryAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IDefectHistory
{
	public DefectHistoryAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IOwnerControl _lueReportedName;
	public Sage.Platform.Controls.IOwnerControl lueReportedName
	{
		get { return FindControl(ref _lueReportedName, "lueReportedName"); }
	}
	private Sage.Platform.Controls.IOwnerControl _lueCompletedName;
	public Sage.Platform.Controls.IOwnerControl lueCompletedName
	{
		get { return FindControl(ref _lueCompletedName, "lueCompletedName"); }
	}
	private Sage.Platform.Controls.IOwnerControl _lueOwnedBy;
	public Sage.Platform.Controls.IOwnerControl lueOwnedBy
	{
		get { return FindControl(ref _lueOwnedBy, "lueOwnedBy"); }
	}
	private Sage.Platform.Controls.IDataGridControl _grdJournal;
	public Sage.Platform.Controls.IDataGridControl grdJournal
	{
		get { return FindControl(ref _grdJournal, "grdJournal"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dteReportedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dteReportedDate
	{
		get { return FindControl(ref _dteReportedDate, "dteReportedDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dteCompletedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dteCompletedDate
	{
		get { return FindControl(ref _dteCompletedDate, "dteCompletedDate"); }
	}
	private Sage.Platform.Controls.IUserControl _lueCreatedName;
	public Sage.Platform.Controls.IUserControl lueCreatedName
	{
		get { return FindControl(ref _lueCreatedName, "lueCreatedName"); }
	}
	private Sage.Platform.Controls.IUserControl _lueUpdatedName;
	public Sage.Platform.Controls.IUserControl lueUpdatedName
	{
		get { return FindControl(ref _lueUpdatedName, "lueUpdatedName"); }
	}
	private Sage.Platform.Controls.IUserControl _lueDetailName;
	public Sage.Platform.Controls.IUserControl lueDetailName
	{
		get { return FindControl(ref _lueDetailName, "lueDetailName"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpCreatedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpCreatedDate
	{
		get { return FindControl(ref _dtpCreatedDate, "dtpCreatedDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpModifyDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpModifyDate
	{
		get { return FindControl(ref _dtpModifyDate, "dtpModifyDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpDetailDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpDetailDate
	{
		get { return FindControl(ref _dtpDetailDate, "dtpDetailDate"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsHistory;
	public Sage.Platform.Controls.IDataSourceControl dtsHistory
	{
		get { return FindControl(ref _dtsHistory, "dtsHistory"); }
	}

}

</script>

<script type="text/javascript">
</script>
