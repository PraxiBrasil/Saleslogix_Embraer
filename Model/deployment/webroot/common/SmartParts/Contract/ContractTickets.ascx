<%@ Control Language="C#" ClassName="ContractTickets" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdTickets" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdTicketspage_changing" EmptyTableRowText="<%$ resources: grdTickets.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdTickets_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdTickets.a36904d9-ffce-443c-b27d-e29c1e772682.ColumnHeading %>"        >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Ticket"
   EntityId='<%# dtsTickets.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# dtsTickets.getPropertyValue(Container.DataItem, "TicketNumber") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:TemplateField   HeaderText="<%$ resources: grdTickets.6a71b801-6a32-4f9a-a526-311c2a332abe.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:PickListControl runat="server" ID="grdTicketscol2" PickListId="" ValueStoredAsText="False" PickListName="Ticket Activity" PickListValue='<%#  dtsTickets.getPropertyValue(Container.DataItem, "ActivityTypeCode")  %>' DisplayMode="AsText" CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdTickets.58f8dc66-5b80-48e7-84ef-f8c4f9e6e3a4.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:SlxUserControl runat="server" ID="grdTicketscol3" DisplayMode="AsText" LookupResultValue='<%#  dtsTickets.getPropertyValue(Container.DataItem, "CreateUser")  %>' CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdTickets.13a38fd3-fb23-464c-bcbb-99e29477d63e.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdTicketscol4"  DisplayMode="AsText" DateTimeValue='<%#  dtsTickets.getPropertyValue(Container.DataItem, "AssignedDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdTickets.4ddc0a55-9aae-4834-9d3f-f4d29f0e934a.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdTicketscol5"  DisplayMode="AsText" DateTimeValue='<%#  dtsTickets.getPropertyValue(Container.DataItem, "CompletedDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:CheckBoxField DataField="FollowUp" ReadOnly="True" 
      HeaderText="<%$ resources: grdTickets.34236734-6e7b-4bae-b100-3069180d8c0b.ColumnHeading %>"    itemstyle-horizontalalign="Center"     >
  	    </asp:CheckBoxField>
    <asp:TemplateField   HeaderText="<%$ resources: grdTickets.f99a4f3b-34e3-4ab5-a5fc-e3b26a12a394.ColumnHeading %>"   itemstyle-horizontalalign="Right"     SortExpression="Dollars"  >
    <itemtemplate>
 <SalesLogix:Currency runat="server" ID="grdTicketscol7" DisplayMode="AsText"  ExchangeRateType="BaseRate"   Text='<%#  dtsTickets.getPropertyValue(Container.DataItem, "Dollars")  %>' CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="Hours" 
  DataFormatString="<%$ resources: grdTickets.c671cf18-1f2d-47cc-88c0-968d6c328f96.FormatString %>" HtmlEncode="false"    HeaderText="<%$ resources: grdTickets.c671cf18-1f2d-47cc-88c0-968d6c328f96.ColumnHeading %>"   itemstyle-horizontalalign="Right"        >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdTickets.9eba63db-6198-486e-bff6-a9539e61ecd6.ColumnHeading %>"   itemstyle-horizontalalign="Right"      >
    <itemtemplate>
 <SalesLogix:Currency runat="server" ID="grdTicketscol9" DisplayMode="AsText"  ExchangeRateType="BaseRate"   Text='<%#  dtsTickets.getPropertyValue(Container.DataItem, "TotalParts")  %>' CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="" 
               >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdTicketspage_changing(object sender, GridViewPageEventArgs e)
{
 grdTickets.PageIndex = e.NewPageIndex;
 grdTickets.DataBind();
}
protected void grdTickets_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContractTickets_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkContractTicketsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="contractticketstab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IContract); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsTickets;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsTickets
{ 
  get 
  {
    if (_dtsTickets == null)
    {
             _dtsTickets = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Platform.ComponentModel.ComponentView), 
	    EntityType                     ,"GetTicketActivities", System.Reflection.MemberTypes.Method);
            	   	}
 	return _dtsTickets;
  }
}

void dtsTickets_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsTickets.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsTickets);
   }
}

 



 

protected override void OnAddEntityBindings() { 
       dtsTickets.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("GetTicketActivities()", grdTickets ));
   dtsTickets.BindFieldNames = new String[] { "Id","TicketNumber","ActivityTypeCode","CreateUser","AssignedDate","CompletedDate","FollowUp","Dollars","Hours","TotalParts" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsTickets_OnCurrentEntitySet);
     
}
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dtsTickets.SourceObject == null) { dtsTickets.SourceObject = BindingSource.Current; }
if (dtsTickets.SourceObject == null) { RegisterBindingsWithClient(dtsTickets); }
dtsTickets.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ContractTicketsAdapter(this)); }
}

public class ContractTicketsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContractTickets
{
	public ContractTicketsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdTickets;
	public Sage.Platform.Controls.IDataGridControl grdTickets
	{
		get { return FindControl(ref _grdTickets, "grdTickets"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsTickets;
	public Sage.Platform.Controls.IDataSourceControl dtsTickets
	{
		get { return FindControl(ref _dtsTickets, "dtsTickets"); }
	}

}

</script>

<script type="text/javascript">
</script>
