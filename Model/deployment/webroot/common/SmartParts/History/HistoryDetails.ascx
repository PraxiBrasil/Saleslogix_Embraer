<%@ Control Language="C#" ClassName="HistoryDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="CompletedDate_lbl" AssociatedControlID="CompletedDate" runat="server" Text="<%$ resources: CompletedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="CompletedDate" ReadOnly="true" AccessKey="s" ToolTip="<%$ resources: CompletedDate.ToolTip %>" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="StartDate_lbl" AssociatedControlID="StartDate" runat="server" Text="<%$ resources: StartDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="StartDate" ReadOnly="true" ToolTip="<%$ resources: StartDate.ToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Duration_lbl" AssociatedControlID="Duration" runat="server" Text="<%$ resources: Duration.Caption %>" ></asp:Label>
 </div>   
   <div class="duration"> 
<SalesLogix:DurationPicker runat="server" ID="Duration" Enabled="false"  Width="55%" AccessKey="d"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="Timeless" CssClass="checkbox "
 Text="<%$ resources: Timeless.Caption %>" Enabled="false" AccessKey="d" AutoPostBack="true"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Result_lbl" AssociatedControlID="Result" runat="server" Text="<%$ resources: Result.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Result" PickListId="kSYST0000019" PickListName="Meeting Result Codes" MustExistInList="false"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="CarryOverNotes" CssClass="checkbox "
 Text="<%$ resources: CarryOverNotes.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="FollowUpActivity_lbl" AssociatedControlID="FollowUpActivity" runat="server" Text="<%$ resources: FollowUpActivity.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="FollowUpActivity"  SelectionMode="Single" Rows="1"  >
<asp:ListItem  Selected="true" Text="<%$ resources: FollowUpActivity_item0.Text %>"
Value="None" />
<asp:ListItem  Text="<%$ resources: FollowUpActivity_item1.Text %>"
Value="atPhoneCall" />
<asp:ListItem  Text="<%$ resources: FollowUpActivity_item2.Text %>"
Value="atMeeting" />
<asp:ListItem  Text="<%$ resources: FollowUpActivity_item3.Text %>"
Value="atToDo" />
</asp:ListBox>
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="CarryOverAttachments" CssClass="checkbox "
 Text="<%$ resources: CarryOverAttachments.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ContactId_lbl" AssociatedControlID="ContactId" runat="server" Text="<%$ resources: ContactId.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="ContactId"  ToolTip="<%$ resources: ContactId.ToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="IContact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String" SeedProperty="Account.Id" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: ContactId.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: ContactId.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: ContactId.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: ContactId.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: ContactId.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="Phone"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: ContactId.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="OpportunityId_lbl" AssociatedControlID="OpportunityId" runat="server" Text="<%$ resources: OpportunityId.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="OpportunityId"  ToolTip="<%$ resources: OpportunityId.ToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="IOpportunity" LookupEntityTypeName="Sage.Entity.Interfaces.IOpportunity, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String" SeedProperty="Account.Id" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: OpportunityId.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="User"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: OpportunityId.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: OpportunityId.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: OpportunityId.LookupProperties.Stage.PropertyHeader %>" PropertyName="Stage" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: OpportunityId.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: OpportunityId.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="AccountId_lbl" AssociatedControlID="AccountId" runat="server" Text="<%$ resources: AccountId.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="AccountId"  ToolTip="<%$ resources: AccountId.ToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="IAccount" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.SubType.PropertyHeader %>" PropertyName="SubType" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="User"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: AccountId.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="TicketId_lbl" AssociatedControlID="TicketId" runat="server" Text="<%$ resources: TicketId.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="TicketId"  ToolTip="<%$ resources: TicketId.ToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="ITicket" LookupEntityTypeName="Sage.Entity.Interfaces.ITicket, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String" SeedProperty="Account.Id" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.TicketNumber.PropertyHeader %>" PropertyName="TicketNumber" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.Contact.NameLF.PropertyHeader %>" PropertyName="Contact.NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.Contact.WorkPhone.PropertyHeader %>" PropertyName="Contact.WorkPhone" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.StatusCode.PropertyHeader %>" PropertyName="StatusCode" PropertyType="SalesLogix.PickList" PropertyFormat="PickList"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.Urgency.Description.PropertyHeader %>" PropertyName="Urgency.Description" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: TicketId.LookupProperties.Area.PropertyHeader %>" PropertyName="Area" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="LeadId_lbl" AssociatedControlID="LeadId" runat="server" Text="<%$ resources: LeadId.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="LeadId"  ToolTip="<%$ resources: LeadId.ToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="ILead" LookupEntityTypeName="Sage.Entity.Interfaces.ILead, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.LastName.PropertyHeader %>" PropertyName="LastName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.FirstName.PropertyHeader %>" PropertyName="FirstName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.Company.PropertyHeader %>" PropertyName="Company" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.Address.PostalCode.PropertyHeader %>" PropertyName="Address.PostalCode" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadId.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Company_lbl" AssociatedControlID="Company" runat="server" Text="<%$ resources: Company.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Company" Rows="1"
 />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Description_lbl" AssociatedControlID="Description" runat="server" Text="<%$ resources: Description.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Description" PickListId="kSYST0000027" PickListName="Note Regarding" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Category_lbl" AssociatedControlID="Category" runat="server" Text="<%$ resources: Category.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Category" PickListId="kSYST0000015" PickListName="Meeting Category Codes" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Priority_lbl" AssociatedControlID="Priority" runat="server" Text="<%$ resources: Priority.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Priority" ReadOnly="true" PickListId="kSYST0000028" PickListName="Priorities" MustExistInList="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="UserId_lbl" AssociatedControlID="UserId" runat="server" Text="<%$ resources: UserId.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="UserId" Enabled="false" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblUser"  Visible="false"  />
</div>
      </td>
      </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="Notes_lbl" AssociatedControlID="Notes" runat="server" Text="<%$ resources: Notes.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="Notes" Rows="6"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <asp:LinkButton runat="server" ID="cmdOpenEmail"
 Text="<%$ resources: cmdOpenEmail.Caption %>" CssClass="slxbutton"  />
 
      </td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="HistoryDetails_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkHistoryDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="histedit.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IHistory); }
}

 

protected override void OnAddEntityBindings() { 
                    // CompletedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CompletedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CompletedDate", CompletedDate, "DateTimeValue");
        BindingSource.Bindings.Add(CompletedDateDateTimeValueBinding);
                 // CompletedDate.DisplayTime Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CompletedDateDisplayTimeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!Timeless", CompletedDate, "DisplayTime");
        CompletedDateDisplayTimeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(CompletedDateDisplayTimeBinding);
                 // CompletedDate.Timeless Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CompletedDateTimelessBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Timeless", CompletedDate, "Timeless");
        CompletedDateTimelessBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(CompletedDateTimelessBinding);
                       // StartDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StartDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("StartDate", StartDate, "DateTimeValue");
        BindingSource.Bindings.Add(StartDateDateTimeValueBinding);
                 // StartDate.DisplayTime Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StartDateDisplayTimeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!Timeless", StartDate, "DisplayTime");
        StartDateDisplayTimeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(StartDateDisplayTimeBinding);
                 // StartDate.Timeless Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StartDateTimelessBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Timeless", StartDate, "Timeless");
        StartDateTimelessBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(StartDateTimelessBinding);
                       // Duration.Value Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DurationValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Duration", Duration, "Value");
        BindingSource.Bindings.Add(DurationValueBinding);
                       // Timeless.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TimelessCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Timeless", Timeless, "Checked");
        BindingSource.Bindings.Add(TimelessCheckedBinding);
                       // Result.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ResultPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Result", Result, "PickListValue");
        BindingSource.Bindings.Add(ResultPickListValueBinding);
       
        
        
        
                        // ContactId.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ContactIdLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ContactId", ContactId, "LookupResultValue");
        BindingSource.Bindings.Add(ContactIdLookupResultValueBinding);
                 // ContactId.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ContactIdSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountId", ContactId, "SeedValue");
        ContactIdSeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(ContactIdSeedValueBinding);
                       // OpportunityId.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OpportunityIdLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunityId", OpportunityId, "LookupResultValue");
        BindingSource.Bindings.Add(OpportunityIdLookupResultValueBinding);
                 // OpportunityId.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OpportunityIdSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountId", OpportunityId, "SeedValue");
        OpportunityIdSeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(OpportunityIdSeedValueBinding);
                       // AccountId.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AccountIdLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountId", AccountId, "LookupResultValue");
        BindingSource.Bindings.Add(AccountIdLookupResultValueBinding);
                       // TicketId.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TicketIdLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TicketId", TicketId, "LookupResultValue");
        BindingSource.Bindings.Add(TicketIdLookupResultValueBinding);
                 // TicketId.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TicketIdSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountID", TicketId, "SeedValue");
        TicketIdSeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(TicketIdSeedValueBinding);
                       // LeadId.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding LeadIdLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadId", LeadId, "LookupResultValue");
        BindingSource.Bindings.Add(LeadIdLookupResultValueBinding);
                       // Company.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CompanyTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountName", Company, "Text");
        BindingSource.Bindings.Add(CompanyTextBinding);
       
                        // Description.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DescriptionPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Description", Description, "PickListValue");
        BindingSource.Bindings.Add(DescriptionPickListValueBinding);
                       // Category.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CategoryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Category", Category, "PickListValue");
        BindingSource.Bindings.Add(CategoryPickListValueBinding);
                       // Priority.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding PriorityPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Priority", Priority, "PickListValue");
        BindingSource.Bindings.Add(PriorityPickListValueBinding);
                       // UserId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding UserIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Username", UserId, "Text");
        BindingSource.Bindings.Add(UserIdTextBinding);
       
        
                        // Notes.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding NotesTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LongNotes", Notes, "Text");
        BindingSource.Bindings.Add(NotesTextBinding);
       
     
   
}
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void Timeless_ChangeAction(object sender, EventArgs e) {
//placeholder so control gets autopostback set to true
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 Timeless.CheckedChanged += new EventHandler(Timeless_ChangeAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.SalesLogix.Activity.History history = this.BindingSource.Current as Sage.SalesLogix.Activity.History;

Sage.Platform.Application.IContextService context = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Application.IContextService>(true);
Sage.Platform.TimeZone tz = context["TimeZone"] as Sage.Platform.TimeZone;

    
string startDate = tz.UTCDateTimeToLocalTime(history.StartDate).Date.ToShortDateString();
string createdate = tz.UTCDateTimeToLocalTime(history.CreateDate).Date.ToShortDateString();
if (history.Timeless)
{
    startDate = history.StartDate.Date.ToShortDateString();
    createdate = history.CreateDate.Date.ToShortDateString();
}
           
string userName = history.CreateUser;
Sage.Entity.Interfaces.IUser createUser = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.IUser>(history.CreateUser);
if (createUser != null)
    userName = createUser.UserInfo.UserName;
else
{
    if (history.CreateUser.ToUpper().Trim() == "PROCESS")
    {
        userName = "Process Manager";
    }
    else
    {
        userName = "Unknown User";
    }
}

switch (history.Type)
{
   case Sage.Entity.Interfaces.HistoryType.atAppointment:
        Category.PickListName = "Meeting Category Codes";
        Description.PickListName = "Meeting Regarding";
        Result.PickListName = "Meeting Result Codes";
        break;
    case Sage.Entity.Interfaces.HistoryType.atPhoneCall:
        Category.PickListName = "Phone Call Category Codes";
        Description.PickListName = "Phone Call Regarding";
        Result.PickListName = "Phone Call Result Codes";
        break;
    case Sage.Entity.Interfaces.HistoryType.atToDo:
        Category.PickListName = "To Do Category Codes";
        Description.PickListName = "To Do Regarding";
        Result.PickListName = "To Do Result Codes";
        break;
    case Sage.Entity.Interfaces.HistoryType.atPersonal:
        Description.PickListName = "Personal Activity Regarding";
        Result.PickListName = "Personal Activity Result Codes";
        break;
    case Sage.Entity.Interfaces.HistoryType.atEMail:
        Category.PickListName = "To Do Category Codes";
        Description.PickListName = "To Do Regarding";
        Result.PickListName = "Meeting Result Codes";
        break;
    case Sage.Entity.Interfaces.HistoryType.atNote:
        Category.PickListName = "Note Category Codes";
        Description.PickListName = "Note Regarding";
        Result.PickListName = "Meeting Result Codes";
        break;
    default:
        Result.PickListName = "Meeting Result Codes";
        break;
}

lblUser.Text = GetLocalResourceObject("rsScheduledOn") + " " + createdate + " " + GetLocalResourceObject("rsBy") + " " + userName + " " + GetLocalResourceObject("rsOriginallyFor") + " " + startDate;

Sage.SalesLogix.Security.SLXUserService slxUserService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IUserService>() as Sage.SalesLogix.Security.SLXUserService;
string currentUserId = slxUserService.GetUser().Id.ToString();

if ((currentUserId == history.UserId) | (currentUserId.ToUpper().Trim() == "ADMIN"))
{
    Result.ReadOnly = false;
    Notes.ReadOnly = false;
    Description.ReadOnly = false;
    Category.ReadOnly = false;
}
else
{
    Notes.ReadOnly = true;
    Category.Enabled = false;
    Description.ReadOnly = true;
    Result.Enabled = false;
}

    bool allowEdit = false;

    var parms = AppContext["ActivityParameters"] as System.Collections.Generic.Dictionary<string, string>;
    if ((parms != null) && parms.ContainsKey("AllowEditHistory"))
    {
        allowEdit = parms["AllowEditHistory"] == "true";
    }
    
    if (allowEdit)
    {
        CompletedDate.ReadOnly = false;
        StartDate.ReadOnly = false;
        Duration.Enabled = true;
        ContactId.ReadOnly = false;
        AccountId.ReadOnly = false;
        OpportunityId.ReadOnly = false;
        TicketId.ReadOnly = false;
        LeadId.ReadOnly = false;
        Company.ReadOnly = false;
        Timeless.Enabled = true;
        Priority.ReadOnly = false;
    }

    ContactId.EnableLookup = allowEdit;
    AccountId.EnableLookup = allowEdit;
    OpportunityId.EnableLookup = allowEdit;
    TicketId.EnableLookup = allowEdit;
    LeadId.EnableLookup = allowEdit;
    Company.Enabled = allowEdit;
    
if (history.LeadId == null || history.LeadId.Trim() == "") 
{
	LeadId.Visible = false;
    LeadId_lbl.Visible = false;
	Company.Visible = false;
    Company_lbl.Visible = false;
}
else
{
	ContactId.Visible = false;
    ContactId_lbl.Visible = false;
	AccountId.Visible = false;
    AccountId_lbl.Visible = false;
    OpportunityId.Visible = false;
    OpportunityId_lbl.Visible = false;
    TicketId.Visible = false;
    TicketId_lbl.Visible = false;
}

Sage.Platform.Application.Services.IUserOptionsService userOption = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Application.Services.IUserOptionsService>();

string carryOverNotes = userOption.GetCommonOption("CarryOverNotes", "ActivityAlarm");
CarryOverNotes.Checked = string.IsNullOrEmpty(carryOverNotes) ? true : (carryOverNotes == "Yes");

string carryOverAttachments = userOption.GetCommonOption("CarryOverAttachments", "ActivityAlarm");
CarryOverAttachments.Checked = string.IsNullOrEmpty(carryOverAttachments) ? true : (carryOverAttachments == "T");

Sage.Entity.Interfaces.IAttachment attachment;
bool bEnableCmd = Sage.SalesLogix.Attachment.Rules.HistoryHasEmailMsgAttachment(EntityContext.EntityID.ToString(), out attachment);
cmdOpenEmail.Enabled = bEnableCmd;
if (bEnableCmd)
{
    string url =
        string.Format(
            "{0}/SmartParts/Attachment/ViewAttachment.aspx?Id={1}&Filename={2}&DataType={3}&Description={4}",
            Page.Request.ApplicationPath, attachment.Id, HttpUtility.UrlEncodeUnicode(attachment.FileName),
            attachment.DataType, HttpUtility.UrlEncodeUnicode(attachment.Description));
    cmdOpenEmail.OnClientClick = string.Format("window.open('{0}', 'open_attachment');", url);
}

// Set Followup based on user options
string defaultActivityValue = UserOptions.GetDefaultFollowUpActivityType();
if(!string.IsNullOrEmpty(defaultActivityValue))    
    FollowUpActivity.SelectedValue = defaultActivityValue;
else
    FollowUpActivity.SelectedValue = "None";
}
protected void quickformload1(object sender, EventArgs e) {
    bool allowEdit = false;
    var parms = AppContext["ActivityParameters"] as System.Collections.Generic.Dictionary<string, string>;
    if ((parms != null) && parms.ContainsKey("AllowEditHistory"))
    {
        allowEdit = parms["AllowEditHistory"] == "true";
    }
    if (allowEdit)
    {
        Sage.SalesLogix.Activity.History history = BindingSource.Current as Sage.SalesLogix.Activity.History; 
        if (history != null)
            Duration.Enabled = !history.Timeless;
        Timeless.Enabled = true;
    }
}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
quickformload1(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new HistoryDetailsAdapter(this)); }
}

public class HistoryDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IHistoryDetails
{
	public HistoryDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDateTimePickerControl _CompletedDate;
	public Sage.Platform.Controls.IDateTimePickerControl CompletedDate
	{
		get { return FindControl(ref _CompletedDate, "CompletedDate"); }
	}
	private Sage.Platform.Controls.IDurationPickerControl _Duration;
	public Sage.Platform.Controls.IDurationPickerControl Duration
	{
		get { return FindControl(ref _Duration, "Duration"); }
	}
	private Sage.Platform.Controls.IPickListControl _Result;
	public Sage.Platform.Controls.IPickListControl Result
	{
		get { return FindControl(ref _Result, "Result"); }
	}
	private Sage.Platform.Controls.IListBoxControl _FollowUpActivity;
	public Sage.Platform.Controls.IListBoxControl FollowUpActivity
	{
		get { return FindControl(ref _FollowUpActivity, "FollowUpActivity"); }
	}
	private Sage.Platform.Controls.ILookupControl _ContactId;
	public Sage.Platform.Controls.ILookupControl ContactId
	{
		get { return FindControl(ref _ContactId, "ContactId"); }
	}
	private Sage.Platform.Controls.ILookupControl _AccountId;
	public Sage.Platform.Controls.ILookupControl AccountId
	{
		get { return FindControl(ref _AccountId, "AccountId"); }
	}
	private Sage.Platform.Controls.ILookupControl _LeadId;
	public Sage.Platform.Controls.ILookupControl LeadId
	{
		get { return FindControl(ref _LeadId, "LeadId"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Company;
	public Sage.Platform.Controls.ITextBoxControl Company
	{
		get { return FindControl(ref _Company, "Company"); }
	}
	private Sage.Platform.Controls.IPickListControl _Description;
	public Sage.Platform.Controls.IPickListControl Description
	{
		get { return FindControl(ref _Description, "Description"); }
	}
	private Sage.Platform.Controls.IPickListControl _Priority;
	public Sage.Platform.Controls.IPickListControl Priority
	{
		get { return FindControl(ref _Priority, "Priority"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Notes;
	public Sage.Platform.Controls.ITextBoxControl Notes
	{
		get { return FindControl(ref _Notes, "Notes"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdOpenEmail;
	public Sage.Platform.Controls.IButtonControl cmdOpenEmail
	{
		get { return FindControl(ref _cmdOpenEmail, "cmdOpenEmail"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _StartDate;
	public Sage.Platform.Controls.IDateTimePickerControl StartDate
	{
		get { return FindControl(ref _StartDate, "StartDate"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _Timeless;
	public Sage.Platform.Controls.ICheckBoxControl Timeless
	{
		get { return FindControl(ref _Timeless, "Timeless"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _CarryOverNotes;
	public Sage.Platform.Controls.ICheckBoxControl CarryOverNotes
	{
		get { return FindControl(ref _CarryOverNotes, "CarryOverNotes"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _CarryOverAttachments;
	public Sage.Platform.Controls.ICheckBoxControl CarryOverAttachments
	{
		get { return FindControl(ref _CarryOverAttachments, "CarryOverAttachments"); }
	}
	private Sage.Platform.Controls.ILookupControl _OpportunityId;
	public Sage.Platform.Controls.ILookupControl OpportunityId
	{
		get { return FindControl(ref _OpportunityId, "OpportunityId"); }
	}
	private Sage.Platform.Controls.ILookupControl _TicketId;
	public Sage.Platform.Controls.ILookupControl TicketId
	{
		get { return FindControl(ref _TicketId, "TicketId"); }
	}
	private Sage.Platform.Controls.IPickListControl _Category;
	public Sage.Platform.Controls.IPickListControl Category
	{
		get { return FindControl(ref _Category, "Category"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _UserId;
	public Sage.Platform.Controls.ITextBoxControl UserId
	{
		get { return FindControl(ref _UserId, "UserId"); }
	}
	private Sage.Platform.Controls.ILabelControl _lblUser;
	public Sage.Platform.Controls.ILabelControl lblUser
	{
		get { return FindControl(ref _lblUser, "lblUser"); }
	}

}

</script>

<script type="text/javascript">
</script>
