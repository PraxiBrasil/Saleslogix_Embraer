<%@ Control Language="C#" ClassName="ProductPackages" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdPackages" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdPackagespage_changing" EmptyTableRowText="<%$ resources: grdPackages.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdPackages_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdPackages.4057cc36-4942-4f1a-8292-58fe1d65fdf3.ColumnHeading %>"       SortExpression="package.Name"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Package"
   EntityId='<%# hqlPackagesDataSource.getPropertyValue(Container.DataItem, "package.Id") %>'     Text='<%# hqlPackagesDataSource.getPropertyValue(Container.DataItem, "package.Name") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:BoundField DataField="package.Description" 
      HeaderText="<%$ resources: grdPackages.68d601d5-2ea7-4b99-9cac-d3334ded558f.ColumnHeading %>"       SortExpression="package.Description"    >
      </asp:BoundField>
    <asp:BoundField DataField="package.Status" 
      HeaderText="<%$ resources: grdPackages.596ea3e3-c523-459e-8524-f14c94d97f19.ColumnHeading %>"       SortExpression="package.Status"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdPackagespage_changing(object sender, GridViewPageEventArgs e)
{
 grdPackages.PageIndex = e.NewPageIndex;
 grdPackages.DataBind();
}
protected void grdPackages_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ProductPackages_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkProductPackagesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="productpackagestab" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IProduct); }
}

 private Sage.Platform.WebPortal.Binding.WebHqlListBindingSource _hqlPackagesDataSource;
public Sage.Platform.WebPortal.Binding.WebHqlListBindingSource hqlPackagesDataSource
{
    get
    {
        if (_hqlPackagesDataSource == null)
        {
            _hqlPackagesDataSource = new Sage.Platform.WebPortal.Binding.WebHqlListBindingSource();
            _hqlPackagesDataSource.Distinct = true;
            var selectFieldList = new System.Collections.Generic.List<Sage.Platform.WebPortal.Binding.HqlSelectField>();
            selectFieldList.Add(new Sage.Platform.WebPortal.Binding.HqlSelectField("package.Name", "package.Name"));
            selectFieldList.Add(new Sage.Platform.WebPortal.Binding.HqlSelectField("package.Description", "package.Description"));
            selectFieldList.Add(new Sage.Platform.WebPortal.Binding.HqlSelectField("package.Status", "package.Status"));
            selectFieldList.Add(new Sage.Platform.WebPortal.Binding.HqlSelectField("package.Id", "package.Id"));
            _hqlPackagesDataSource.Select = selectFieldList;
            var parameterList = new System.Collections.Generic.List<Sage.Platform.WebPortal.Binding.HqlParameter>();
            parameterList.Add(new Sage.Platform.WebPortal.Binding.HqlParameter("productId", "EntityId"));
            _hqlPackagesDataSource.Parameters = parameterList;
            _hqlPackagesDataSource.From = "Package package, PackageProduct packageProduct";
            _hqlPackagesDataSource.Where = "packageProduct.Product.Id = :productId";
            _hqlPackagesDataSource.OrderBy = "package.Name";
        }
        return _hqlPackagesDataSource;
    }
}

void hqlPackagesDataSource_OnCurrentEntitySet(object sender, EventArgs e)
{
    if (Visible)
    {
        if (BindingSource.Current != null)
        {
            hqlPackagesDataSource.SourceObject = BindingSource.Current;
        }
        else
        {
            var entityContextService = PageWorkItem.Services.Get<Sage.Platform.Application.IEntityContextService>();
            if (entityContextService != null)
            {
                hqlPackagesDataSource.SourceObject = entityContextService;
            }
        }
		
		
        _hqlPackagesDataSource.BoundGrid = grdPackages;
    }
}
 

protected override void OnAddEntityBindings() { 
       hqlPackagesDataSource.Bindings.Add(new Sage.Platform.Mashups.Web.WebMashupBinding(grdPackages));
     
     BindingSource.OnCurrentEntitySet += new EventHandler(hqlPackagesDataSource_OnCurrentEntitySet);
     
}
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
 grdPackages.DataBind(); 
 RegisterBindingsWithClient(hqlPackagesDataSource); 



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ProductPackagesAdapter(this)); }
}

public class ProductPackagesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IProductPackages
{
	public ProductPackagesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdPackages;
	public Sage.Platform.Controls.IDataGridControl grdPackages
	{
		get { return FindControl(ref _grdPackages, "grdPackages"); }
	}

}

</script>

<script type="text/javascript">
</script>
