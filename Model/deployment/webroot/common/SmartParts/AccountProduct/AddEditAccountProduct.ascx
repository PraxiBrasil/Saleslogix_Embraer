<%@ Control Language="C#" ClassName="AddEditAccountProduct" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="60%" />
            <col width="40%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueProduct_lbl" AssociatedControlID="lueProduct" runat="server" Text="<%$ resources: lueProduct.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueProduct" ButtonToolTip="<%$ resources: lueProduct.ButtonToolTip %>" LookupEntityName="Product" LookupEntityTypeName="Sage.Entity.Interfaces.IProduct, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueProduct.LookupProperties.ActualId.PropertyHeader %>" PropertyName="ActualId" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueProduct.LookupProperties.Name.PropertyHeader %>" PropertyName="Name" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueProduct.LookupProperties.Vendor.PropertyHeader %>" PropertyName="Vendor" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td rowspan="3"  >
 <div class="lbltop alignleft">
   <asp:Label ID="txtDescription_lbl" AssociatedControlID="txtDescription" runat="server" Text="<%$ resources: txtDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtDescription" Enabled="false" ReadOnly="true" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSKU_lbl" AssociatedControlID="txtSKU" runat="server" Text="<%$ resources: txtSKU.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSKU" Rows="1"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="numQuantity_lbl" AssociatedControlID="numQuantity" runat="server" Text="<%$ resources: numQuantity.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol numeric"  > 
    <SalesLogix:NumericControl runat="server" ID="numQuantity"
FormatType="Decimal" AutoPostBack="true"  />
  </div>

      </td>
            </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="ctrlstSerialNumber" CssClass="controlslist "
>
   <div class=" lbl alignleft" >
   <asp:Label ID="txtSerialNumber_lbl" AssociatedControlID="txtSerialNumber" runat="server" Text="<%$ resources: txtSerialNumber.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSerialNumber" Rows="1"
 />
  </div>

   <asp:LinkButton runat="server" ID="cmdAssignSerialNumber"
 Text="<%$ resources: cmdAssignSerialNumber.Caption %>"  />
 
</asp:Panel>
      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkReturned" CssClass="checkbox "
 Text="<%$ resources: chkReturned.Caption %>" Enabled="false"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="ctrlstSerializeOptions" CssClass="controlslist "
Visible="false" >
   <div class=" lbl alignleft" >
   <asp:Label ID="txtSerializePrefix_lbl" AssociatedControlID="txtSerializePrefix" runat="server" Text="<%$ resources: txtSerializePrefix.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSerializePrefix" Rows="1"
 />
  </div>

   <div class=" lbl alignleft" >
   <asp:Label ID="txtSerializeStart_lbl" AssociatedControlID="txtSerializeStart" runat="server" Text="<%$ resources: txtSerializeStart.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSerializeStart" Rows="1"
 />
  </div>

   <div class=" lbl alignleft" >
   <asp:Label ID="txtSerializeIncrement_lbl" AssociatedControlID="txtSerializeIncrement" runat="server" Text="<%$ resources: txtSerializeIncrement.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSerializeIncrement" Rows="1"
 />
  </div>

   <asp:Button runat="server" ID="cmdAssign"
 Text="<%$ resources: cmdAssign.Caption %>"  ToolTip="<%$ resources: cmdAssign.ToolTip %>" CssClass="slxbutton"  />
 
</asp:Panel>
      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkEvaluation" CssClass="checkbox "
 Text="<%$ resources: chkEvaluation.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAssetContact_lbl" AssociatedControlID="lueAssetContact" runat="server" Text="<%$ resources: lueAssetContact.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueAssetContact" ButtonToolTip="<%$ resources: lueAssetContact.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssetContact.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssetContact.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssetContact.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="" PropertyFormat="Phone"  UseAsResult="True" ExcludeFromFilters="True"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnContactPhone_lbl" AssociatedControlID="phnContactPhone" runat="server" Text="<%$ resources: phnContactPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnContactPhone"
ReadOnly="true" Enabled="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtOpportunity_lbl" AssociatedControlID="txtOpportunity" runat="server" Text="<%$ resources: txtOpportunity.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtOpportunity" Enabled="false" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="emlContactEmail_lbl" AssociatedControlID="emlContactEmail" runat="server" Text="<%$ resources: emlContactEmail.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol email"  > 
<SalesLogix:Email runat="server" ID="emlContactEmail" ReadOnly="true" ButtonToolTip="<%$ resources: emlContactEmail.ButtonToolTip %>" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSalesOrder_lbl" AssociatedControlID="txtSalesOrder" runat="server" Text="<%$ resources: txtSalesOrder.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSalesOrder" Enabled="false" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtLocation_lbl" AssociatedControlID="txtLocation" runat="server" Text="<%$ resources: txtLocation.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtLocation" Rows="1"
 />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAssetCode_lbl" AssociatedControlID="txtAssetCode" runat="server" Text="<%$ resources: txtAssetCode.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAssetCode" Rows="1"
 />
  </div>

      </td>
                <td rowspan="3"  >
<asp:Panel runat="server" ID="ctrlstComments" CssClass="controlslist "
>
   <div class="lbltop alignleft">
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtComments" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

   <asp:ImageButton runat="server" ID="cmdUserTimeStamp"
 ToolTip="<%$ resources: cmdUserTimeStamp.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=User_Date_Stamp_16x16"  />
 
</asp:Panel>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtEnvironment_lbl" AssociatedControlID="txtEnvironment" runat="server" Text="<%$ resources: txtEnvironment.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtEnvironment" Rows="1"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSystem_lbl" AssociatedControlID="txtSystem" runat="server" Text="<%$ resources: txtSystem.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSystem" Rows="1"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtVersion_lbl" AssociatedControlID="txtVersion" runat="server" Text="<%$ resources: txtVersion.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtVersion" Rows="1"
 />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="ctrlstModifyData" CssClass="controlslist "
>
   <div class=" lbl alignleft">
   <asp:Label ID="dteModifyDate_lbl" AssociatedControlID="dteModifyDate" runat="server" Text="<%$ resources: dteModifyDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteModifyDate" ReadOnly="true" Enabled="false" />
  </div>

   <div class=" lbl alignleft">
   <asp:Label ID="usrModifyUser_lbl" AssociatedControlID="usrModifyUser" runat="server" Text="<%$ resources: usrModifyUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrModifyUser" Enabled="false" ReadOnly="true"  />
  </div>

</asp:Panel>
      </td>
                <td  >
<asp:Panel runat="server" ID="ctrlstButtons" CssClass="controlslist qfActionContainer"
>
   <asp:Button runat="server" ID="cmdOK"
 Text="<%$ resources: cmdOK.Caption %>" CssClass="slxbutton"  />
   
   <asp:Button runat="server" ID="cmdCancel"
 Text="<%$ resources: cmdCancel.Caption %>" CssClass="slxbutton"  />
 
</asp:Panel>
      </td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditAccountProduct_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkAddEditAccountProductHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="assetadd.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IAccountProduct); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityBindingSource _dtsAssets;
public Sage.Platform.WebPortal.Binding.WebEntityBindingSource dtsAssets
{ 
  get 
  {
    if (_dtsAssets == null)
    {
             _dtsAssets = new Sage.Platform.WebPortal.Binding.WebEntityBindingSource(typeof(Sage.Entity.Interfaces.IAccountProduct),
	    EntityType              );       	   	}
 	return _dtsAssets;
  }
}

void dtsAssets_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsAssets.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsAssets);
   }
}

 



 

protected override void OnAddEntityBindings() { 
                    // lueProduct.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueProductLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Product", lueProduct, "LookupResultValue");
        BindingSource.Bindings.Add(lueProductLookupResultValueBinding);
                       // txtDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProductDescription", txtDescription, "Text");
        BindingSource.Bindings.Add(txtDescriptionTextBinding);
                       // txtSKU.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSKUTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ActualId", txtSKU, "Text");
        BindingSource.Bindings.Add(txtSKUTextBinding);
                       // numQuantity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding numQuantityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Quantity", numQuantity, "Text");
        BindingSource.Bindings.Add(numQuantityTextBinding);
       
                        // txtSerialNumber.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSerialNumberTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SerialNumber", txtSerialNumber, "Text");
        BindingSource.Bindings.Add(txtSerialNumberTextBinding);
                 // txtSerialNumber.Visible Binding 
        Sage.Platform.EntityBinding.ExpressionBinding txtSerialNumberVisibleBinding = new Sage.Platform.EntityBinding.ExpressionBinding("Quantity <= 1", txtSerialNumber, "Visible");
        txtSerialNumberVisibleBinding.CompileExpression = false;
        txtSerialNumberVisibleBinding.NegateBooleanValue = false;
        txtSerialNumberVisibleBinding.NullValue = "";
        BindingSource.Bindings.Add(txtSerialNumberVisibleBinding);
          // txtSerialNumber_lbl.Visible Binding 
        Sage.Platform.EntityBinding.ExpressionBinding txtSerialNumber_lblVisibleBinding = new Sage.Platform.EntityBinding.ExpressionBinding("Quantity <= 1", txtSerialNumber_lbl, "Visible");
        txtSerialNumber_lblVisibleBinding.CompileExpression = false;
        txtSerialNumber_lblVisibleBinding.NegateBooleanValue = false;
        txtSerialNumber_lblVisibleBinding.NullValue = "";
        BindingSource.Bindings.Add(txtSerialNumber_lblVisibleBinding);
                      // cmdAssignSerialNumber.Visible Binding 
        Sage.Platform.EntityBinding.ExpressionBinding cmdAssignSerialNumberVisibleBinding = new Sage.Platform.EntityBinding.ExpressionBinding("Quantity > 1", cmdAssignSerialNumber, "Visible");
        cmdAssignSerialNumberVisibleBinding.CompileExpression = false;
        cmdAssignSerialNumberVisibleBinding.NegateBooleanValue = false;
        cmdAssignSerialNumberVisibleBinding.NullValue = "";
        BindingSource.Bindings.Add(cmdAssignSerialNumberVisibleBinding);
                       // chkReturned.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkReturnedCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Returned", chkReturned, "Checked");
        BindingSource.Bindings.Add(chkReturnedCheckedBinding);
       
        
        
        
        
                        // chkEvaluation.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkEvaluationCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Evaluation", chkEvaluation, "Checked");
        BindingSource.Bindings.Add(chkEvaluationCheckedBinding);
                       // lueAssetContact.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAssetContactLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact", lueAssetContact, "LookupResultValue");
        BindingSource.Bindings.Add(lueAssetContactLookupResultValueBinding);
                       // phnContactPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnContactPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact.WorkPhone", phnContactPhone, "Text");
        BindingSource.Bindings.Add(phnContactPhoneTextBinding);
                       // txtOpportunity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtOpportunityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Opportunity", txtOpportunity, "Text");
        BindingSource.Bindings.Add(txtOpportunityTextBinding);
                       // emlContactEmail.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding emlContactEmailTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact.Email", emlContactEmail, "Text");
        BindingSource.Bindings.Add(emlContactEmailTextBinding);
                       // txtSalesOrder.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSalesOrderTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesOrder", txtSalesOrder, "Text");
        BindingSource.Bindings.Add(txtSalesOrderTextBinding);
                       // txtLocation.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtLocationTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Location", txtLocation, "Text");
        BindingSource.Bindings.Add(txtLocationTextBinding);
                       // txtAssetCode.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAssetCodeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssetCode", txtAssetCode, "Text");
        BindingSource.Bindings.Add(txtAssetCodeTextBinding);
       
                        // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Notes", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
       
                        // txtEnvironment.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtEnvironmentTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Environment", txtEnvironment, "Text");
        BindingSource.Bindings.Add(txtEnvironmentTextBinding);
                       // txtSystem.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSystemTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssetSystem", txtSystem, "Text");
        BindingSource.Bindings.Add(txtSystemTextBinding);
                       // txtVersion.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtVersionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssetVersion", txtVersion, "Text");
        BindingSource.Bindings.Add(txtVersionTextBinding);
                       // ctrlstModifyData.Visible Binding 
        Sage.Platform.EntityBinding.ExpressionBinding ctrlstModifyDataVisibleBinding = new Sage.Platform.EntityBinding.ExpressionBinding("Id <> null", ctrlstModifyData, "Visible");
        ctrlstModifyDataVisibleBinding.CompileExpression = false;
        ctrlstModifyDataVisibleBinding.NegateBooleanValue = false;
        ctrlstModifyDataVisibleBinding.NullValue = "";
        BindingSource.Bindings.Add(ctrlstModifyDataVisibleBinding);
                       // dteModifyDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteModifyDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyDate", dteModifyDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteModifyDateDateTimeValueBinding);
                       // usrModifyUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrModifyUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", usrModifyUser, "LookupResultValue");
        BindingSource.Bindings.Add(usrModifyUserLookupResultValueBinding);
       
        
        
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsAssets_OnCurrentEntitySet);
     
}
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void lueProduct_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IAccountProduct>("AccountProduct.OnProductChange", objarray);
  
}
protected void numQuantity_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAccountProduct asset = BindingSource.Current as Sage.Entity.Interfaces.IAccountProduct;
if (asset != null && asset.Quantity > 1)
{
	asset.SerialNumber = String.Empty;
}
}
protected void cmdAssignSerialNumber_ClickAction(object sender, EventArgs e) {
ctrlstSerializeOptions.Visible = true;

}
protected void cmdAssign_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAccountProduct asset = (Sage.Entity.Interfaces.IAccountProduct)this.BindingSource.Current;
if (asset != null)
{
    int startPosition = 0;
    if (!String.IsNullOrEmpty(txtSerializeStart.Text))
        startPosition = Convert.ToInt32(txtSerializeStart.Text);
    int incrementBy = 0;
    if (!String.IsNullOrEmpty(txtSerializeIncrement.Text))
        incrementBy = Convert.ToInt32(txtSerializeIncrement.Text);
    asset.AssignSerialNumbers(txtSerializePrefix.Text, startPosition, incrementBy);
    Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null)
    {
        refresher.RefreshAll();
    }
}
}
protected void cmdUserTimeStamp_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IAccountProduct>("AccountProduct.AddAssetCommentsTimeStamp", objarray);
  
}
protected void cmdOK_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IAccountProduct _entity = BindingSource.Current as Sage.Entity.Interfaces.IAccountProduct;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
          cmdOK_ClickActionBRC(sender, e);
    
  
}
protected void cmdOK_ClickActionBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueProduct.LookupResultValueChanged += new EventHandler(lueProduct_ChangeAction);
numQuantity.TextChanged += new EventHandler(numQuantity_ChangeAction);
cmdAssignSerialNumber.Click += new EventHandler(cmdAssignSerialNumber_ClickAction);
cmdAssign.Click += new EventHandler(cmdAssign_ClickAction);
cmdAssign.Click += new EventHandler(DialogService.CloseEventHappened);
cmdUserTimeStamp.Click += new ImageClickEventHandler(cmdUserTimeStamp_ClickAction);
cmdOK.Click += new EventHandler(cmdOK_ClickAction);
cmdOK.Click += new EventHandler(DialogService.CloseEventHappened);
cmdOK.Click += new EventHandler(Refresh);
cmdCancel.Click += new EventHandler(DialogService.CloseEventHappened);


}

protected void quickformload0(object sender, EventArgs e) {
lueProduct.ReadOnly = !EntityContext.EntityID.ToString().ToUpper().Equals("INSERT");
ctrlstSerializeOptions.Visible = false;

Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
ctrlstModifyData.Visible = (page.ModeId.ToUpper() != "INSERT");
}
protected void quickformload1(object sender, EventArgs e) {
lueProduct.ReadOnly = !EntityContext.EntityID.ToString().ToUpper().Equals("INSERT");
ctrlstSerializeOptions.Visible = false;

Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
ctrlstModifyData.Visible = (page.ModeId.ToUpper() != "INSERT");
}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);
quickformload1(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterSaveButton(cmdOK);

ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
if (dtsAssets.SourceObject == null) { dtsAssets.SourceObject = BindingSource.Current; }
if (dtsAssets.SourceObject == null) { RegisterBindingsWithClient(dtsAssets); }
dtsAssets.Bind();

ClientBindingMgr.RegisterDialogCancelButton(cmdCancel);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	if (BindingSource != null)
	{
		if (BindingSource.Current != null)
		{
			tinfo.Description = BindingSource.Current.ToString();
			tinfo.Title = BindingSource.Current.ToString();
		}
	}
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new AddEditAccountProductAdapter(this)); }
}

public class AddEditAccountProductAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditAccountProduct
{
	public AddEditAccountProductAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ILookupControl _lueProduct;
	public Sage.Platform.Controls.ILookupControl lueProduct
	{
		get { return FindControl(ref _lueProduct, "lueProduct"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSKU;
	public Sage.Platform.Controls.ITextBoxControl txtSKU
	{
		get { return FindControl(ref _txtSKU, "txtSKU"); }
	}
	private Sage.Platform.Controls.INumericControl _numQuantity;
	public Sage.Platform.Controls.INumericControl numQuantity
	{
		get { return FindControl(ref _numQuantity, "numQuantity"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlstSerialNumber;
	public Sage.Platform.Controls.IControlsListControl ctrlstSerialNumber
	{
		get { return FindControl(ref _ctrlstSerialNumber, "ctrlstSerialNumber"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSerialNumber;
	public Sage.Platform.Controls.ITextBoxControl txtSerialNumber
	{
		get { return FindControl(ref _txtSerialNumber, "txtSerialNumber"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdAssignSerialNumber;
	public Sage.Platform.Controls.IButtonControl cmdAssignSerialNumber
	{
		get { return FindControl(ref _cmdAssignSerialNumber, "cmdAssignSerialNumber"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlstSerializeOptions;
	public Sage.Platform.Controls.IControlsListControl ctrlstSerializeOptions
	{
		get { return FindControl(ref _ctrlstSerializeOptions, "ctrlstSerializeOptions"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSerializePrefix;
	public Sage.Platform.Controls.ITextBoxControl txtSerializePrefix
	{
		get { return FindControl(ref _txtSerializePrefix, "txtSerializePrefix"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSerializeStart;
	public Sage.Platform.Controls.ITextBoxControl txtSerializeStart
	{
		get { return FindControl(ref _txtSerializeStart, "txtSerializeStart"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSerializeIncrement;
	public Sage.Platform.Controls.ITextBoxControl txtSerializeIncrement
	{
		get { return FindControl(ref _txtSerializeIncrement, "txtSerializeIncrement"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdAssign;
	public Sage.Platform.Controls.IButtonControl cmdAssign
	{
		get { return FindControl(ref _cmdAssign, "cmdAssign"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueAssetContact;
	public Sage.Platform.Controls.ILookupControl lueAssetContact
	{
		get { return FindControl(ref _lueAssetContact, "lueAssetContact"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnContactPhone;
	public Sage.Platform.Controls.IPhoneControl phnContactPhone
	{
		get { return FindControl(ref _phnContactPhone, "phnContactPhone"); }
	}
	private Sage.Platform.Controls.IEmailControl _emlContactEmail;
	public Sage.Platform.Controls.IEmailControl emlContactEmail
	{
		get { return FindControl(ref _emlContactEmail, "emlContactEmail"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtLocation;
	public Sage.Platform.Controls.ITextBoxControl txtLocation
	{
		get { return FindControl(ref _txtLocation, "txtLocation"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtAssetCode;
	public Sage.Platform.Controls.ITextBoxControl txtAssetCode
	{
		get { return FindControl(ref _txtAssetCode, "txtAssetCode"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtEnvironment;
	public Sage.Platform.Controls.ITextBoxControl txtEnvironment
	{
		get { return FindControl(ref _txtEnvironment, "txtEnvironment"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSystem;
	public Sage.Platform.Controls.ITextBoxControl txtSystem
	{
		get { return FindControl(ref _txtSystem, "txtSystem"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtVersion;
	public Sage.Platform.Controls.ITextBoxControl txtVersion
	{
		get { return FindControl(ref _txtVersion, "txtVersion"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlstModifyData;
	public Sage.Platform.Controls.IControlsListControl ctrlstModifyData
	{
		get { return FindControl(ref _ctrlstModifyData, "ctrlstModifyData"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dteModifyDate;
	public Sage.Platform.Controls.IDateTimePickerControl dteModifyDate
	{
		get { return FindControl(ref _dteModifyDate, "dteModifyDate"); }
	}
	private Sage.Platform.Controls.IUserControl _usrModifyUser;
	public Sage.Platform.Controls.IUserControl usrModifyUser
	{
		get { return FindControl(ref _usrModifyUser, "usrModifyUser"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtDescription;
	public Sage.Platform.Controls.ITextBoxControl txtDescription
	{
		get { return FindControl(ref _txtDescription, "txtDescription"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkReturned;
	public Sage.Platform.Controls.ICheckBoxControl chkReturned
	{
		get { return FindControl(ref _chkReturned, "chkReturned"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkEvaluation;
	public Sage.Platform.Controls.ICheckBoxControl chkEvaluation
	{
		get { return FindControl(ref _chkEvaluation, "chkEvaluation"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtOpportunity;
	public Sage.Platform.Controls.ITextBoxControl txtOpportunity
	{
		get { return FindControl(ref _txtOpportunity, "txtOpportunity"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSalesOrder;
	public Sage.Platform.Controls.ITextBoxControl txtSalesOrder
	{
		get { return FindControl(ref _txtSalesOrder, "txtSalesOrder"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlstComments;
	public Sage.Platform.Controls.IControlsListControl ctrlstComments
	{
		get { return FindControl(ref _ctrlstComments, "ctrlstComments"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtComments;
	public Sage.Platform.Controls.ITextBoxControl txtComments
	{
		get { return FindControl(ref _txtComments, "txtComments"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdUserTimeStamp;
	public Sage.Platform.Controls.IButtonControl cmdUserTimeStamp
	{
		get { return FindControl(ref _cmdUserTimeStamp, "cmdUserTimeStamp"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlstButtons;
	public Sage.Platform.Controls.IControlsListControl ctrlstButtons
	{
		get { return FindControl(ref _ctrlstButtons, "ctrlstButtons"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdOK;
	public Sage.Platform.Controls.IButtonControl cmdOK
	{
		get { return FindControl(ref _cmdOK, "cmdOK"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdCancel;
	public Sage.Platform.Controls.IButtonControl cmdCancel
	{
		get { return FindControl(ref _cmdCancel, "cmdCancel"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsAssets;
	public Sage.Platform.Controls.IDataSourceControl dtsAssets
	{
		get { return FindControl(ref _dtsAssets, "dtsAssets"); }
	}

}

</script>

<script type="text/javascript">
</script>
