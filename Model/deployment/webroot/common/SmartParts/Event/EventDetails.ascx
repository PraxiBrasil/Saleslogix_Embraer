<%@ Control Language="C#" ClassName="EventDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
            <col width="100%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="StartDate_lbl" AssociatedControlID="StartDate" runat="server" Text="<%$ resources: StartDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="StartDate" DisplayTime="false" Timeless="true" AutoPostBack="true" />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="EndDate_lbl" AssociatedControlID="EndDate" runat="server" Text="<%$ resources: EndDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="EndDate" DisplayTime="false" Timeless="true" />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Type_lbl" AssociatedControlID="Type" runat="server" Text="<%$ resources: Type.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="Type"  SelectionMode="Single" Rows="1"  >
<asp:ListItem  Text="<%$ resources: Type_item0.Text %>"
Value="" />
<asp:ListItem  Text="<%$ resources: Type_item1.Text %>"
Value="Active" />
<asp:ListItem  Text="<%$ resources: Type_item2.Text %>"
Value="Business Trip" />
<asp:ListItem  Text="<%$ resources: Type_item3.Text %>"
Value="Conference" />
<asp:ListItem  Text="<%$ resources: Type_item4.Text %>"
Value="Holiday" />
<asp:ListItem  Text="<%$ resources: Type_item5.Text %>"
Value="Off" />
<asp:ListItem  Text="<%$ resources: Type_item6.Text %>"
Value="Trade Show" />
<asp:ListItem  Text="<%$ resources: Type_item7.Text %>"
Value="Unavailable" />
<asp:ListItem  Text="<%$ resources: Type_item8.Text %>"
Value="Vacation" />
</asp:ListBox>
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Description_lbl" AssociatedControlID="Description" runat="server" Text="<%$ resources: Description.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Description" Rows="4"
TextMode="MultiLine" Columns="40"
MultiLineMaxLength="128" onkeyup="doTextBoxKeyUp(this);" onpaste="doTextBoxPaste(this);"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="UserId_lbl" AssociatedControlID="UserId" runat="server" Text="<%$ resources: UserId.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="UserId"  SelectionMode="Single" Rows="1"  >
</asp:ListBox>
  </div>

      </td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="EventDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="Save"
 AlternateText="<%$ resources: Save.Caption %>"  ToolTip="<%$ resources: Save.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="Delete"
 AlternateText="<%$ resources: Delete.Caption %>"  ToolTip="<%$ resources: Delete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="lnkEventDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="addevent.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IEvent); }
}

 

protected override void OnAddEntityBindings() { 
                    // StartDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StartDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("StartDate", StartDate, "DateTimeValue");
        BindingSource.Bindings.Add(StartDateDateTimeValueBinding);
                       // EndDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding EndDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EndDate", EndDate, "DateTimeValue");
        BindingSource.Bindings.Add(EndDateDateTimeValueBinding);
                       // Type.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TypeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Type", Type, "Text");
        TypeTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(TypeTextBinding);
                       // Description.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Description", Description, "Text");
        BindingSource.Bindings.Add(DescriptionTextBinding);
                       // UserId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding UserIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserId", UserId, "Text");
        UserIdTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(UserIdTextBinding);
    
   
        }
	   	   	   	   	   
protected void StartDate_ChangeAction(object sender, EventArgs e) {
Sage.SalesLogix.Activity.Event evt = this.BindingSource.Current as Sage.SalesLogix.Activity.Event;
evt.EndDate = StartDate.DateTimeValue;
}
protected void Save_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IEvent _entity = BindingSource.Current as Sage.Entity.Interfaces.IEvent;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
          Save_ClickActionBRC(sender, e);
    
  
}
protected void Save_ClickActionBRC(object sender, EventArgs e) {
   Response.Redirect("Calendar.aspx");
 
}
protected void Delete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }
          Delete_ClickActionBRC(sender, e);
    
  
}
protected void Delete_ClickActionBRC(object sender, EventArgs e) {
foreach (Sage.Platform.Application.EntityHistory hist in EntityContext.EntityHistory)
{
    string entityName = hist.EntityType.Name.Substring(1).ToLower();
    if ((entityName == "account") || (entityName == "contact") || (entityName == "opportunity") || (entityName == "ticket"))
    {
        string typeName = hist.EntityType.Name.Substring(1);
        Response.Redirect("~/" + typeName + ".aspx?entityid=" + hist.EntityId);
        break;
    }
}
Response.Redirect("~/Calendar.aspx");
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 StartDate.DateTimeValueChanged += new EventHandler(StartDate_ChangeAction);
Save.Click += new ImageClickEventHandler(Save_ClickAction);
Delete.Click += new ImageClickEventHandler(Delete_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.SalesLogix.Activity.Event slxEvent = this.BindingSource.Current as Sage.SalesLogix.Activity.Event;
   
if (slxEvent != null)
{
    Delete.Visible = (slxEvent.Id != null);
	
	UserId.Items.Clear();
    foreach (Sage.SalesLogix.Activity.UserCalendar uc in Sage.SalesLogix.Activity.UserCalendar.GetCurrentUserCalendarList())
    {
        if (uc.AllowAdd == true)
        {
            ListItem li = new ListItem(uc.UserName, uc.CalUser.Id.ToString().Trim());
            UserId.Items.Add(li);
        }
    }
    
    	UserId.SelectedValue = slxEvent.UserId;

    DateTime defaultDate;
    if (Request.QueryString["startdate"] != null)
    {
        defaultDate = Convert.ToDateTime(Server.UrlDecode(Request.QueryString["startdate"]));

        if (defaultDate != null)
        {
            DateTime startDate = new DateTime(defaultDate.Year, defaultDate.Month, defaultDate.Day, 0, 0, 5);
            slxEvent.StartDate = startDate;
            slxEvent.EndDate = startDate;
        }
    }
	
    ((Sage.Platform.WebPortal.EntityPage) Page).TitleBar.Text =
        HttpContext.GetLocalResourceObject(Request.CurrentExecutionFilePath, "PageTitle").ToString();
}
}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(Save);

Delete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("Delete.ActionConfirmationMessage").ToString()));



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new EventDetailsAdapter(this)); }
}

public class EventDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IEventDetails
{
	public EventDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDateTimePickerControl _StartDate;
	public Sage.Platform.Controls.IDateTimePickerControl StartDate
	{
		get { return FindControl(ref _StartDate, "StartDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _EndDate;
	public Sage.Platform.Controls.IDateTimePickerControl EndDate
	{
		get { return FindControl(ref _EndDate, "EndDate"); }
	}
	private Sage.Platform.Controls.IListBoxControl _Type;
	public Sage.Platform.Controls.IListBoxControl Type
	{
		get { return FindControl(ref _Type, "Type"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Description;
	public Sage.Platform.Controls.ITextBoxControl Description
	{
		get { return FindControl(ref _Description, "Description"); }
	}
	private Sage.Platform.Controls.IListBoxControl _UserId;
	public Sage.Platform.Controls.IListBoxControl UserId
	{
		get { return FindControl(ref _UserId, "UserId"); }
	}
	private Sage.Platform.Controls.IButtonControl _Save;
	public Sage.Platform.Controls.IButtonControl Save
	{
		get { return FindControl(ref _Save, "Save"); }
	}
	private Sage.Platform.Controls.IButtonControl _Delete;
	public Sage.Platform.Controls.IButtonControl Delete
	{
		get { return FindControl(ref _Delete, "Delete"); }
	}

}

</script>

<script type="text/javascript">
</script>
