<%@ Control Language="C#" ClassName="AccountExtendedDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Region_lbl" AssociatedControlID="Region" runat="server" Text="<%$ resources: Region.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="Region" PickListId="kSYST0000383" PickListName="Region" MustExistInList="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="EntityId_lbl" AssociatedControlID="EntityId" runat="server" Text="<%$ resources: EntityId.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="EntityId" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="AlternatePhone_lbl" AssociatedControlID="AlternatePhone" runat="server" Text="<%$ resources: AlternatePhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="AlternatePhone"
MaxLength="32"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ImportSource_lbl" AssociatedControlID="ImportSource" runat="server" Text="<%$ resources: ImportSource.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ImportSource" ReadOnly="true" Rows="1"
MaxLength="24"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Ticker_lbl" AssociatedControlID="Ticker" runat="server" Text="<%$ resources: Ticker.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Ticker" Rows="1"
MaxLength="16"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="CreateUser_lbl" AssociatedControlID="CreateUser" runat="server" Text="<%$ resources: CreateUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="CreateUser" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: CreateUser.ButtonToolTip %>"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="CreditRating_lbl" AssociatedControlID="CreditRating" runat="server" Text="<%$ resources: CreditRating.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="CreditRating" PickListName="Credit Rating" MustExistInList="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="CreateDate_lbl" AssociatedControlID="CreateDate" runat="server" Text="<%$ resources: CreateDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="CreateDate" ReadOnly="true" ButtonToolTip="<%$ resources: CreateDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="SicCode_lbl" AssociatedControlID="SicCode" runat="server" Text="<%$ resources: SicCode.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="SicCode" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ModifyUser_lbl" AssociatedControlID="ModifyUser" runat="server" Text="<%$ resources: ModifyUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="ModifyUser" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: ModifyUser.ButtonToolTip %>"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Employees_lbl" AssociatedControlID="Employees" runat="server" Text="<%$ resources: Employees.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Employees" Rows="1"
AutoPostBack="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ModifyDate_lbl" AssociatedControlID="ModifyDate" runat="server" Text="<%$ resources: ModifyDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="ModifyDate" ReadOnly="true" ButtonToolTip="<%$ resources: ModifyDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="Revenue_lbl" AssociatedControlID="Revenue" runat="server" Text="<%$ resources: Revenue.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="Revenue" ExchangeRateType="BaseRate"
DisplayCurrencyCode="false"  />
</div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="LastHistoryBy_lbl" AssociatedControlID="LastHistoryBy" runat="server" Text="<%$ resources: LastHistoryBy.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="LastHistoryBy" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: LastHistoryBy.ButtonToolTip %>"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="LeadSource_lbl" AssociatedControlID="LeadSource" runat="server" Text="<%$ resources: LeadSource.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="LeadSource" ButtonToolTip="<%$ resources: LeadSource.ButtonToolTip %>" LookupEntityName="LeadSource" LookupEntityTypeName="Sage.Entity.Interfaces.ILeadSource, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadSource.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadSource.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: LeadSource.LookupProperties.AbbrevDescription.PropertyHeader %>" PropertyName="AbbrevDescription" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
<SalesLogix:LookupPreFilter PropertyName="Status" PropertyType="System.String" OperatorCode="="
 FilterValue="<%$ resources: LeadSource.LUPF.Status %>"
 ></SalesLogix:LookupPreFilter>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="LastHistoryDate_lbl" AssociatedControlID="LastHistoryDate" runat="server" Text="<%$ resources: LastHistoryDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="LastHistoryDate" ReadOnly="true" ButtonToolTip="<%$ resources: LastHistoryDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="LastTouchedInDays_lbl" AssociatedControlID="LastTouchedInDays" runat="server" Text="<%$ resources: LastTouchedInDays.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="LastTouchedInDays" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft">
   <asp:Label ID="TimeZone_lbl" AssociatedControlID="TimeZone" runat="server" Text="<%$ resources: TimeZone.Caption %>" ></asp:Label>
 </div>   
   <div  class="twocoltextcontrol timezone"  > 
    <SalesLogix:TimeZoneControl runat="server" ID="TimeZone" LocalDisplayCssClass="TimeZoneLabel" ButtonCssClass="TimeZoneButton" ListBoxCssClass="TimeZoneList"  />
  </div>

      </td>
            </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountExtendedDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="btnSaveAccDetail"
 AlternateText="<%$ resources: btnSaveAccDetail.Caption %>"  ToolTip="<%$ resources: btnSaveAccDetail.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
 
  <SalesLogix:PageLink ID="lnkAccountExtendedDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="accountdetailstab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 

protected override void OnAddEntityBindings() { 
                    // Region.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding RegionPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Region", Region, "PickListValue");
        BindingSource.Bindings.Add(RegionPickListValueBinding);
                       // EntityId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding EntityIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Id", EntityId, "Text");
        BindingSource.Bindings.Add(EntityIdTextBinding);
                       // AlternatePhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AlternatePhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AlternatePhone", AlternatePhone, "Text");
        BindingSource.Bindings.Add(AlternatePhoneTextBinding);
                       // ImportSource.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ImportSourceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ImportSource", ImportSource, "Text");
        BindingSource.Bindings.Add(ImportSourceTextBinding);
                       // Ticker.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TickerTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Ticker", Ticker, "Text");
        BindingSource.Bindings.Add(TickerTextBinding);
                       // CreateUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CreateUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateUser", CreateUser, "LookupResultValue");
        BindingSource.Bindings.Add(CreateUserLookupResultValueBinding);
                       // CreditRating.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CreditRatingPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreditRating", CreditRating, "PickListValue");
        BindingSource.Bindings.Add(CreditRatingPickListValueBinding);
                       // CreateDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CreateDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", CreateDate, "DateTimeValue", "", null);
        BindingSource.Bindings.Add(CreateDateDateTimeValueBinding);
                       // SicCode.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding SicCodeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SicCode", SicCode, "Text");
        BindingSource.Bindings.Add(SicCodeTextBinding);
                       // ModifyUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ModifyUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", ModifyUser, "LookupResultValue");
        BindingSource.Bindings.Add(ModifyUserLookupResultValueBinding);
                       // Employees.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding EmployeesTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Employees", Employees, "Text");
        BindingSource.Bindings.Add(EmployeesTextBinding);
                       // ModifyDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ModifyDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyDate", ModifyDate, "DateTimeValue", "", null);
        BindingSource.Bindings.Add(ModifyDateDateTimeValueBinding);
                       // Revenue.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding RevenueTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Revenue", Revenue, "Text");
        BindingSource.Bindings.Add(RevenueTextBinding);
                       // LastHistoryBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding LastHistoryByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastHistoryBy", LastHistoryBy, "LookupResultValue");
        BindingSource.Bindings.Add(LastHistoryByLookupResultValueBinding);
                       // LeadSource.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding LeadSourceLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource", LeadSource, "LookupResultValue", "", null);
        BindingSource.Bindings.Add(LeadSourceLookupResultValueBinding);
                       // LastHistoryDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding LastHistoryDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastHistoryDate", LastHistoryDate, "DateTimeValue", "", null);
        BindingSource.Bindings.Add(LastHistoryDateDateTimeValueBinding);
                       // LastTouchedInDays.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding LastTouchedInDaysTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastTouchedInDays", LastTouchedInDays, "Text");
        BindingSource.Bindings.Add(LastTouchedInDaysTextBinding);
       
                        // TimeZone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TimeZoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.TimeZone", TimeZone, "Text");
        BindingSource.Bindings.Add(TimeZoneTextBinding);
    
   
         
      
      
      
    }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void Employees_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAccount entity = (Sage.Entity.Interfaces.IAccount) this.BindingSource.Current;
if (entity.ValidateEmployeeCount()) {
        }
else {
            Employees_ChangeActionF(sender, e);
      
      }
}
protected void Employees_ChangeActionF(object sender, EventArgs e) {
  if (DialogService != null) {
    DialogService.ShowMessage(base.GetLocalResourceObject("03a5a3df-322d-4c19-8876-aefa1e0d788b.Message").ToString(), base.GetLocalResourceObject("03a5a3df-322d-4c19-8876-aefa1e0d788b.Title").ToString());
  }

}
protected void btnSaveAccDetail_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAccount entity = (Sage.Entity.Interfaces.IAccount) this.BindingSource.Current;
if (entity.HasPropagationChanges()) {
            btnSaveAccDetail_ClickActionS(sender, e);
      
      }
else {
            btnSaveAccDetail_ClickActionF(sender, e);
      
      }
}
protected void btnSaveAccDetail_ClickActionS(object sender, EventArgs e) {
if (DialogService != null) {
	// DialogActionItem
	DialogService.SetSpecs(400, 400, "UpdateAccountOptions", string.Empty );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.IAccount); 
    DialogService.ShowDialog();
}
}
protected void btnSaveAccDetail_ClickActionF(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IAccount _entity = BindingSource.Current as Sage.Entity.Interfaces.IAccount;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
          btnSaveAccDetail_ClickActionFBRC(sender, e);
    
  
}
protected void btnSaveAccDetail_ClickActionFBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 Employees.TextChanged += new EventHandler(Employees_ChangeAction);
if (_roleSecurityService != null)
{
if (_roleSecurityService.HasAccess("ENTITIES/ACCOUNT/EDIT"))
{
btnSaveAccDetail.Click += new ImageClickEventHandler(btnSaveAccDetail_ClickAction);
}
}


}

protected override void OnFormBound()
{
if (!_roleSecurityService.HasAccess("ENTITIES/ACCOUNT/EDIT"))
{
btnSaveAccDetail.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new AccountExtendedDetailsAdapter(this)); }
}

public class AccountExtendedDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountExtendedDetails
{
	public AccountExtendedDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IPickListControl _Region;
	public Sage.Platform.Controls.IPickListControl Region
	{
		get { return FindControl(ref _Region, "Region"); }
	}
	private Sage.Platform.Controls.IPhoneControl _AlternatePhone;
	public Sage.Platform.Controls.IPhoneControl AlternatePhone
	{
		get { return FindControl(ref _AlternatePhone, "AlternatePhone"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Ticker;
	public Sage.Platform.Controls.ITextBoxControl Ticker
	{
		get { return FindControl(ref _Ticker, "Ticker"); }
	}
	private Sage.Platform.Controls.IPickListControl _CreditRating;
	public Sage.Platform.Controls.IPickListControl CreditRating
	{
		get { return FindControl(ref _CreditRating, "CreditRating"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _SicCode;
	public Sage.Platform.Controls.ITextBoxControl SicCode
	{
		get { return FindControl(ref _SicCode, "SicCode"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Employees;
	public Sage.Platform.Controls.ITextBoxControl Employees
	{
		get { return FindControl(ref _Employees, "Employees"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _Revenue;
	public Sage.Platform.Controls.ICurrencyControl Revenue
	{
		get { return FindControl(ref _Revenue, "Revenue"); }
	}
	private Sage.Platform.Controls.ILookupControl _LeadSource;
	public Sage.Platform.Controls.ILookupControl LeadSource
	{
		get { return FindControl(ref _LeadSource, "LeadSource"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _TimeZone;
	public Sage.Platform.Controls.ITextBoxControl TimeZone
	{
		get { return FindControl(ref _TimeZone, "TimeZone"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _EntityId;
	public Sage.Platform.Controls.ITextBoxControl EntityId
	{
		get { return FindControl(ref _EntityId, "EntityId"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _ImportSource;
	public Sage.Platform.Controls.ITextBoxControl ImportSource
	{
		get { return FindControl(ref _ImportSource, "ImportSource"); }
	}
	private Sage.Platform.Controls.IUserControl _CreateUser;
	public Sage.Platform.Controls.IUserControl CreateUser
	{
		get { return FindControl(ref _CreateUser, "CreateUser"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _CreateDate;
	public Sage.Platform.Controls.IDateTimePickerControl CreateDate
	{
		get { return FindControl(ref _CreateDate, "CreateDate"); }
	}
	private Sage.Platform.Controls.IUserControl _ModifyUser;
	public Sage.Platform.Controls.IUserControl ModifyUser
	{
		get { return FindControl(ref _ModifyUser, "ModifyUser"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _ModifyDate;
	public Sage.Platform.Controls.IDateTimePickerControl ModifyDate
	{
		get { return FindControl(ref _ModifyDate, "ModifyDate"); }
	}
	private Sage.Platform.Controls.IUserControl _LastHistoryBy;
	public Sage.Platform.Controls.IUserControl LastHistoryBy
	{
		get { return FindControl(ref _LastHistoryBy, "LastHistoryBy"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _LastHistoryDate;
	public Sage.Platform.Controls.IDateTimePickerControl LastHistoryDate
	{
		get { return FindControl(ref _LastHistoryDate, "LastHistoryDate"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _LastTouchedInDays;
	public Sage.Platform.Controls.ITextBoxControl LastTouchedInDays
	{
		get { return FindControl(ref _LastTouchedInDays, "LastTouchedInDays"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnSaveAccDetail;
	public Sage.Platform.Controls.IButtonControl btnSaveAccDetail
	{
		get { return FindControl(ref _btnSaveAccDetail, "btnSaveAccDetail"); }
	}

}

</script>

<script type="text/javascript">
</script>
