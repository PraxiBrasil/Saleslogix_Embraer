<%@ Control Language="C#" ClassName="AccountOpportunities" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="25%" />
            <col width="25%" />
            <col width="25%" />
            <col width="25%" />
     <tr>
            <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblOpen" Text="<%$ resources: lblOpen.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblClosedWon" Text="<%$ resources: lblClosedWon.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblClosedLost" Text="<%$ resources: lblClosedLost.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblInactive" Text="<%$ resources: lblInactive.Text %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="OpenCount_lbl" AssociatedControlID="OpenCount" runat="server" Text="<%$ resources: OpenCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="OpenCount" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ClosedWonCount_lbl" AssociatedControlID="ClosedWonCount" runat="server" Text="<%$ resources: ClosedWonCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ClosedWonCount" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ClosedLostCount_lbl" AssociatedControlID="ClosedLostCount" runat="server" Text="<%$ resources: ClosedLostCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ClosedLostCount" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="InactiveCount_lbl" AssociatedControlID="InactiveCount" runat="server" Text="<%$ resources: InactiveCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="InactiveCount" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="OpenTotal_lbl" AssociatedControlID="OpenTotal" runat="server" Text="<%$ resources: OpenTotal.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="OpenTotal" ExchangeRateType="BaseRate"
ReadOnly="true"  />
</div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ClosedWonTotal_lbl" AssociatedControlID="ClosedWonTotal" runat="server" Text="<%$ resources: ClosedWonTotal.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="ClosedWonTotal" ExchangeRateType="BaseRate"
ReadOnly="true"  />
</div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ClosedLostTotal_lbl" AssociatedControlID="ClosedLostTotal" runat="server" Text="<%$ resources: ClosedLostTotal.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="ClosedLostTotal" ExchangeRateType="BaseRate"
ReadOnly="true"  />
</div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="InactiveTotal_lbl" AssociatedControlID="InactiveTotal" runat="server" Text="<%$ resources: InactiveTotal.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="InactiveTotal" ExchangeRateType="BaseRate"
ReadOnly="true"  />
</div>

      </td>
      </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td  colspan="4" >
<SalesLogix:SlxGridView runat="server" ID="grdOpportunities" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="10" OnPageIndexChanging="grdOpportunitiespage_changing" EmptyTableRowText="<%$ resources: grdOpportunities.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdOpportunities_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.1d2c1bbe-46d7-486e-b93d-fd884d72f44d.ColumnHeading %>"       SortExpression="Description"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Opportunity"
   EntityId='<%# dsGrid1.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# dsGrid1.getPropertyValue(Container.DataItem, "Description") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:BoundField DataField="Status" 
      HeaderText="<%$ resources: grdOpportunities.0a4d95a3-8da6-4afb-97c7-f38bb5a7284a.ColumnHeading %>"       SortExpression="Status"    >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.d0e7dfdd-9cac-4dc8-bf4b-ffdfa181f4ff.ColumnHeading %>"   itemstyle-horizontalalign="Right"     SortExpression="SalesPotential"  >
    <itemtemplate>
 <SalesLogix:Currency runat="server" ID="grdOpportunitiescol3" DisplayMode="AsText"  ExchangeRateType="BaseRate"   Text='<%#  dsGrid1.getPropertyValue(Container.DataItem, "SalesPotential")  %>' CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="CloseProbability" 
  DataFormatString="<%$ resources: grdOpportunities.916df2ec-64c5-4369-9b5b-597b665c2e41.FormatString %>" HtmlEncode="false"    HeaderText="<%$ resources: grdOpportunities.916df2ec-64c5-4369-9b5b-597b665c2e41.ColumnHeading %>"   itemstyle-horizontalalign="Right"     SortExpression="CloseProbability"    >
      </asp:BoundField>
    <asp:BoundField DataField="DaysOpen" 
      HeaderText="<%$ resources: grdOpportunities.8de3a1e0-1983-498f-ad30-bf2216a8c662.ColumnHeading %>"    itemstyle-horizontalalign="Center"       >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdOpportunitiespage_changing(object sender, GridViewPageEventArgs e)
{
 grdOpportunities.PageIndex = e.NewPageIndex;
 grdOpportunities.DataBind();
}
protected void grdOpportunities_Sorting(object sender, GridViewSortEventArgs e) { }
</script>

      </td>
                        </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountOpportunities_RTools" ToolbarLocation="right">
    <asp:HyperLink runat="server" ID="AddOpportunity"   ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16X16"    ToolTip="<%$ resources: AddOpportunity.ToolTip %>"    NavigateUrl="~/InsertOpportunity.aspx?modeid=Insert"     />

  <SalesLogix:PageLink ID="lnkAccountOpportunitiesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="accountopportunitiestab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsGrid1;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsGrid1
{ 
  get 
  {
    if (_dsGrid1 == null)
    {
             _dsGrid1 = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IOpportunity), 
	    EntityType              ,"Opportunities", System.Reflection.MemberTypes.Property);
            	   	}
 	return _dsGrid1;
  }
}

void dsGrid1_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsGrid1.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsGrid1);
   }
}

 



 

protected override void OnAddEntityBindings() { 
    
        
        
        
                        // OpenCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OpenCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesOpenCount", OpenCount, "Text");
        BindingSource.Bindings.Add(OpenCountTextBinding);
                       // ClosedWonCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedWonCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesClosedWonCount", ClosedWonCount, "Text");
        BindingSource.Bindings.Add(ClosedWonCountTextBinding);
                       // ClosedLostCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedLostCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesClosedLostCount", ClosedLostCount, "Text");
        BindingSource.Bindings.Add(ClosedLostCountTextBinding);
                       // InactiveCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding InactiveCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesInactiveCount", InactiveCount, "Text");
        BindingSource.Bindings.Add(InactiveCountTextBinding);
                       // OpenTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OpenTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesOpenTotal", OpenTotal, "Text");
        BindingSource.Bindings.Add(OpenTotalTextBinding);
                       // ClosedWonTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedWonTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesClosedWonTotal", ClosedWonTotal, "Text");
        BindingSource.Bindings.Add(ClosedWonTotalTextBinding);
                       // ClosedLostTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedLostTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesClosedLostTotal", ClosedLostTotal, "Text");
        BindingSource.Bindings.Add(ClosedLostTotalTextBinding);
                       // InactiveTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding InactiveTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpportunitiesInactiveTotal", InactiveTotal, "Text");
        BindingSource.Bindings.Add(InactiveTotalTextBinding);
          dsGrid1.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("Opportunities", grdOpportunities ));
   dsGrid1.BindFieldNames = new String[] { "Id","Description","Status","SalesPotential","CloseProbability","DaysOpen" };
                
     BindingSource.OnCurrentEntitySet += new EventHandler(dsGrid1_OnCurrentEntitySet);
     
    }
	   	   	   	   	   	   	   	   	   	   	   	   	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dsGrid1.SourceObject == null) { dsGrid1.SourceObject = BindingSource.Current; }
if (dsGrid1.SourceObject == null) { RegisterBindingsWithClient(dsGrid1); }
dsGrid1.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new AccountOpportunitiesAdapter(this)); }
}

public class AccountOpportunitiesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountOpportunities
{
	public AccountOpportunitiesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ILabelControl _lblOpen;
	public Sage.Platform.Controls.ILabelControl lblOpen
	{
		get { return FindControl(ref _lblOpen, "lblOpen"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _OpenCount;
	public Sage.Platform.Controls.ITextBoxControl OpenCount
	{
		get { return FindControl(ref _OpenCount, "OpenCount"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _OpenTotal;
	public Sage.Platform.Controls.ICurrencyControl OpenTotal
	{
		get { return FindControl(ref _OpenTotal, "OpenTotal"); }
	}
	private Sage.Platform.Controls.IDataGridControl _grdOpportunities;
	public Sage.Platform.Controls.IDataGridControl grdOpportunities
	{
		get { return FindControl(ref _grdOpportunities, "grdOpportunities"); }
	}
	private Sage.Platform.Controls.ILabelControl _lblClosedWon;
	public Sage.Platform.Controls.ILabelControl lblClosedWon
	{
		get { return FindControl(ref _lblClosedWon, "lblClosedWon"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _ClosedWonCount;
	public Sage.Platform.Controls.ITextBoxControl ClosedWonCount
	{
		get { return FindControl(ref _ClosedWonCount, "ClosedWonCount"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _ClosedWonTotal;
	public Sage.Platform.Controls.ICurrencyControl ClosedWonTotal
	{
		get { return FindControl(ref _ClosedWonTotal, "ClosedWonTotal"); }
	}
	private Sage.Platform.Controls.ILabelControl _lblClosedLost;
	public Sage.Platform.Controls.ILabelControl lblClosedLost
	{
		get { return FindControl(ref _lblClosedLost, "lblClosedLost"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _ClosedLostCount;
	public Sage.Platform.Controls.ITextBoxControl ClosedLostCount
	{
		get { return FindControl(ref _ClosedLostCount, "ClosedLostCount"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _ClosedLostTotal;
	public Sage.Platform.Controls.ICurrencyControl ClosedLostTotal
	{
		get { return FindControl(ref _ClosedLostTotal, "ClosedLostTotal"); }
	}
	private Sage.Platform.Controls.ILabelControl _lblInactive;
	public Sage.Platform.Controls.ILabelControl lblInactive
	{
		get { return FindControl(ref _lblInactive, "lblInactive"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _InactiveCount;
	public Sage.Platform.Controls.ITextBoxControl InactiveCount
	{
		get { return FindControl(ref _InactiveCount, "InactiveCount"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _InactiveTotal;
	public Sage.Platform.Controls.ICurrencyControl InactiveTotal
	{
		get { return FindControl(ref _InactiveTotal, "InactiveTotal"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dsGrid1;
	public Sage.Platform.Controls.IDataSourceControl dsGrid1
	{
		get { return FindControl(ref _dsGrid1, "dsGrid1"); }
	}
	private Sage.Platform.Controls.ILinkControl _AddOpportunity;
	public Sage.Platform.Controls.ILinkControl AddOpportunity
	{
		get { return FindControl(ref _AddOpportunity, "AddOpportunity"); }
	}

}

</script>

<script type="text/javascript">
</script>
