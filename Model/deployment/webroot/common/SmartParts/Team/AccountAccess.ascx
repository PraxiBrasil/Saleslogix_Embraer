<%@ Control Language="C#" ClassName="AccountAccess" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdAccounts" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdAccountspage_changing"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdAccounts_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdAccounts.9f4353d3-6a64-4688-909f-94ca1edf7de3.ColumnHeading %>"       SortExpression="AccountName"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Account"
   EntityId='<%# dsAccounts.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# dsAccounts.getPropertyValue(Container.DataItem, "AccountName") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
   </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdAccountspage_changing(object sender, GridViewPageEventArgs e)
{
 grdAccounts.PageIndex = e.NewPageIndex;
 grdAccounts.DataBind();
}
protected void grdAccounts_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountAccess_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkAccountAccessHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="Teams_Account_Access_Tab" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ITeam); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsAccounts;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsAccounts
{ 
  get 
  {
    if (_dsAccounts == null)
    {
             _dsAccounts = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IAccount), 
	    EntityType                     ,"GetAccountAccess", System.Reflection.MemberTypes.Method);
            	   	}
 	return _dsAccounts;
  }
}

void dsAccounts_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsAccounts.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsAccounts);
   }
}

 



 

protected override void OnAddEntityBindings() { 
       dsAccounts.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("GetAccountAccess()", grdAccounts ));
   dsAccounts.BindFieldNames = new String[] { "Id","AccountName" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsAccounts_OnCurrentEntitySet);
     
}
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dsAccounts.SourceObject == null) { dsAccounts.SourceObject = BindingSource.Current; }
if (dsAccounts.SourceObject == null) { RegisterBindingsWithClient(dsAccounts); }
dsAccounts.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	if (BindingSource != null)
	{
		if (BindingSource.Current != null)
		{
			tinfo.Description = BindingSource.Current.ToString();
			tinfo.Title = BindingSource.Current.ToString();
		}
	}
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new AccountAccessAdapter(this)); }
}

public class AccountAccessAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountAccess
{
	public AccountAccessAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdAccounts;
	public Sage.Platform.Controls.IDataGridControl grdAccounts
	{
		get { return FindControl(ref _grdAccounts, "grdAccounts"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dsAccounts;
	public Sage.Platform.Controls.IDataSourceControl dsAccounts
	{
		get { return FindControl(ref _dsAccounts, "dsAccounts"); }
	}

}

</script>

<script type="text/javascript">
</script>
