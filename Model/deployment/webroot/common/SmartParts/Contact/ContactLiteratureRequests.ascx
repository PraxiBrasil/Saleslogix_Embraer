<%@ Control Language="C#" ClassName="ContactLiteratureRequests" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdContactLiteratureRequests" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="10" OnPageIndexChanging="grdContactLiteratureRequestspage_changing" EmptyTableRowText="<%$ resources: grdContactLiteratureRequests.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdContactLiteratureRequests_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdContactLiteratureRequests.5959db26-e04b-4e19-9eda-0b7897b45078.ColumnHeading %>"       SortExpression="RequestDate"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="LitRequest"
   EntityId='<%# dtsLitRequests.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# string.Format(base.GetLocalResourceObject("grdContactLiteratureRequests.5959db26-e04b-4e19-9eda-0b7897b45078.FormatString").ToString(), dtsLitRequests.getPropertyValue(Container.DataItem, "RequestDate")) %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:BoundField DataField="RequestUser" 
      HeaderText="<%$ resources: grdContactLiteratureRequests.a913ecf4-3310-451f-92f2-5f3c15a444f6.ColumnHeading %>"       SortExpression="RequestUser"    >
      </asp:BoundField>
    <asp:BoundField DataField="Description" 
      HeaderText="<%$ resources: grdContactLiteratureRequests.acc682a1-d737-4fdd-864b-80472dfad151.ColumnHeading %>"       SortExpression="Description"    >
      </asp:BoundField>
    <asp:BoundField DataField="SendVia" 
      HeaderText="<%$ resources: grdContactLiteratureRequests.ad5838cc-b679-4121-b3dc-343573e7888b.ColumnHeading %>"       SortExpression="SendVia"    >
      </asp:BoundField>
    <asp:BoundField DataField="Priority" 
      HeaderText="<%$ resources: grdContactLiteratureRequests.1a32c873-ae5a-406a-9a70-afb918a99a94.ColumnHeading %>"       SortExpression="Priority"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdContactLiteratureRequestspage_changing(object sender, GridViewPageEventArgs e)
{
 grdContactLiteratureRequests.PageIndex = e.NewPageIndex;
 grdContactLiteratureRequests.DataBind();
}
protected void grdContactLiteratureRequests_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContactLiteratureRequests_RTools" ToolbarLocation="right">
    <asp:HyperLink runat="server" ID="cmdAddLitRequest"   ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16X16"    ToolTip="<%$ resources: cmdAddLitRequest.ToolTip %>"    NavigateUrl="~/Literature.aspx"     />

  <SalesLogix:PageLink ID="lnkContactLiteratureRequestsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="litrequesttab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IContact); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsLitRequests;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsLitRequests
{ 
  get 
  {
    if (_dtsLitRequests == null)
    {
             _dtsLitRequests = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.ILitRequest), 
	    EntityType              ,"LitRequests", System.Reflection.MemberTypes.Property);
                   _dtsLitRequests.UseSmartQuery = true;
      	   	}
 	return _dtsLitRequests;
  }
}

void dtsLitRequests_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsLitRequests.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsLitRequests);
   }
}

 



 

protected override void OnAddEntityBindings() { 
       dtsLitRequests.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("LitRequests", grdContactLiteratureRequests ));
   dtsLitRequests.BindFieldNames = new String[] { "Id","RequestDate","RequestUser","Description","SendVia","Priority" };
                
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsLitRequests_OnCurrentEntitySet);
     
    }
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dtsLitRequests.SourceObject == null) { dtsLitRequests.SourceObject = BindingSource.Current; }
if (dtsLitRequests.SourceObject == null) { RegisterBindingsWithClient(dtsLitRequests); }
dtsLitRequests.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ContactLiteratureRequestsAdapter(this)); }
}

public class ContactLiteratureRequestsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContactLiteratureRequests
{
	public ContactLiteratureRequestsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdContactLiteratureRequests;
	public Sage.Platform.Controls.IDataGridControl grdContactLiteratureRequests
	{
		get { return FindControl(ref _grdContactLiteratureRequests, "grdContactLiteratureRequests"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsLitRequests;
	public Sage.Platform.Controls.IDataSourceControl dtsLitRequests
	{
		get { return FindControl(ref _dtsLitRequests, "dtsLitRequests"); }
	}
	private Sage.Platform.Controls.ILinkControl _cmdAddLitRequest;
	public Sage.Platform.Controls.ILinkControl cmdAddLitRequest
	{
		get { return FindControl(ref _cmdAddLitRequest, "cmdAddLitRequest"); }
	}

}

</script>

<script type="text/javascript">
</script>
