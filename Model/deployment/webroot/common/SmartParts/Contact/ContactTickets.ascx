<%@ Control Language="C#" ClassName="ContactTickets" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdContactTickets" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="5" OnPageIndexChanging="grdContactTicketspage_changing" EmptyTableRowText="<%$ resources: grdContactTickets.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdContactTickets_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdContactTickets.fb7eed90-cd3e-4d1c-ab83-bf0f92eba5b6.ColumnHeading %>"       SortExpression="TicketNumber"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Ticket"
   EntityId='<%# dsGrid4.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# dsGrid4.getPropertyValue(Container.DataItem, "TicketNumber") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:TemplateField   HeaderText="<%$ resources: grdContactTickets.cc4f6e05-2f18-4ba3-b701-33f9ec6af32a.ColumnHeading %>"       SortExpression="ReceivedDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdContactTicketscol2" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dsGrid4.getPropertyValue(Container.DataItem, "ReceivedDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdContactTickets.80c41099-f194-4b7e-8cf5-3e40257c0fe0.ColumnHeading %>"       SortExpression="StatusCode"  >
    <itemtemplate>
   <SalesLogix:PickListControl runat="server" ID="grdContactTicketscol3" PickListId="kSYST0000375" ValueStoredAsText="False" PickListName="Ticket Status" PickListValue='<%#  dsGrid4.getPropertyValue(Container.DataItem, "StatusCode")  %>' DisplayMode="AsText" CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="Urgency.Description" 
      HeaderText="<%$ resources: grdContactTickets.cfb47ca5-8e7d-4f4e-8567-30386d605913.ColumnHeading %>"       SortExpression="Urgency.Description"    >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdContactTickets.cbac8c95-77d6-41a0-abb3-c0e0f35f0710.ColumnHeading %>"       SortExpression="NeededByDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdContactTicketscol5" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dsGrid4.getPropertyValue(Container.DataItem, "NeededByDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="TicketProblem.Notes" 
      HeaderText="<%$ resources: grdContactTickets.85b8559e-e352-4e9d-a532-fb70a816b20c.ColumnHeading %>"       SortExpression="TicketProblem.Notes"    >
      </asp:BoundField>
    <asp:BoundField DataField="TicketSolution.Notes" 
      HeaderText="<%$ resources: grdContactTickets.801500ea-bcf7-4f80-805a-c4ae9e8d660f.ColumnHeading %>"       SortExpression="TicketSolution.Notes"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdContactTicketspage_changing(object sender, GridViewPageEventArgs e)
{
 grdContactTickets.PageIndex = e.NewPageIndex;
 grdContactTickets.DataBind();
}
protected void grdContactTickets_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContactTickets_RTools" ToolbarLocation="right">
    <asp:HyperLink runat="server" ID="cmdInsertTicket"   ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16X16"    ToolTip="<%$ resources: cmdInsertTicket.ToolTip %>"    NavigateUrl="~/InsertTicket.aspx?modeid=Insert"     />

  <SalesLogix:PageLink ID="lnkContactTicketsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ticketstab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IContact); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsGrid4;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsGrid4
{ 
  get 
  {
    if (_dsGrid4 == null)
    {
             _dsGrid4 = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.ITicket), 
	    EntityType              ,"Tickets", System.Reflection.MemberTypes.Property);
                   _dsGrid4.UseSmartQuery = true;
      	   	}
 	return _dsGrid4;
  }
}

void dsGrid4_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsGrid4.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsGrid4);
   }
}

 



 

protected override void OnAddEntityBindings() { 
       dsGrid4.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("Tickets", grdContactTickets ));
   dsGrid4.BindFieldNames = new String[] { "Id","TicketNumber","ReceivedDate","StatusCode","Urgency.Description","NeededByDate","TicketProblem.Notes","TicketSolution.Notes" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsGrid4_OnCurrentEntitySet);
     
    }
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dsGrid4.SourceObject == null) { dsGrid4.SourceObject = BindingSource.Current; }
if (dsGrid4.SourceObject == null) { RegisterBindingsWithClient(dsGrid4); }
dsGrid4.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ContactTicketsAdapter(this)); }
}

public class ContactTicketsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContactTickets
{
	public ContactTicketsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdContactTickets;
	public Sage.Platform.Controls.IDataGridControl grdContactTickets
	{
		get { return FindControl(ref _grdContactTickets, "grdContactTickets"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dsGrid4;
	public Sage.Platform.Controls.IDataSourceControl dsGrid4
	{
		get { return FindControl(ref _dsGrid4, "dsGrid4"); }
	}
	private Sage.Platform.Controls.ILinkControl _cmdInsertTicket;
	public Sage.Platform.Controls.ILinkControl cmdInsertTicket
	{
		get { return FindControl(ref _cmdInsertTicket, "cmdInsertTicket"); }
	}

}

</script>

<script type="text/javascript">
</script>
