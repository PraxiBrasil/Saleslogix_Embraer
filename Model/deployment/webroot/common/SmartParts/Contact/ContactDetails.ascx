<%@ Control Language="C#" ClassName="ContactDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.33333%" />
            <col width="33.33333%" />
            <col width="33.33333%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="nmeContactName_lbl" AssociatedControlID="nmeContactName" runat="server" Text="<%$ resources: nmeContactName.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol person"  >
    <SalesLogix:FullName runat="server" ID="nmeContactName" ButtonToolTip="<%$ resources: nmeContactName.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnWorkPhone_lbl" AssociatedControlID="phnWorkPhone" runat="server" Text="<%$ resources: phnWorkPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnWorkPhone"
MaxLength="32"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkIsPrimary" CssClass="checkbox "
 Text="<%$ resources: chkIsPrimary.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lnkAccountName_lbl" AssociatedControlID="lnkAccountName" runat="server" Text="<%$ resources: lnkAccountName.Caption %>" ></asp:Label>
 </div>   
 <table class="slxlinkcontrol "><tr><td> <SalesLogix:PageLink runat="server" ID="lnkAccountName" NavigateUrl="Account"         LinkType="EntityAlias"></SalesLogix:PageLink>
</td></tr></table>
      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnFax_lbl" AssociatedControlID="phnFax" runat="server" Text="<%$ resources: phnFax.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnFax"
MaxLength="32"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkIsServiceAuthorized" CssClass="checkbox "
 Text="<%$ resources: chkIsServiceAuthorized.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklTitle_lbl" AssociatedControlID="pklTitle" runat="server" Text="<%$ resources: pklTitle.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklTitle" PickListId="kSYST0000385" PickListName="Title" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnMobilePhone_lbl" AssociatedControlID="phnMobilePhone" runat="server" Text="<%$ resources: phnMobilePhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnMobilePhone"
MaxLength="32"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAssistant_lbl" AssociatedControlID="txtAssistant" runat="server" Text="<%$ resources: txtAssistant.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAssistant" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnHomePhone_lbl" AssociatedControlID="phnHomePhone" runat="server" Text="<%$ resources: phnHomePhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnHomePhone"
MaxLength="32"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotSolicit" CssClass="checkbox "
 Text="<%$ resources: chkDoNotSolicit.Caption %>" AutoPostBack="true"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSalutation_lbl" AssociatedControlID="txtSalutation" runat="server" Text="<%$ resources: txtSalutation.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSalutation" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnOtherPhone_lbl" AssociatedControlID="phnOtherPhone" runat="server" Text="<%$ resources: phnOtherPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnOtherPhone"
 />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotEmail" CssClass="checkbox "
 Text="<%$ resources: chkDoNotEmail.Caption %>" AutoPostBack="true"  />
</div>
      </td>
      </tr>
<tr>
            <td rowspan="3"  >
 <div class=" lbl alignleft">
   <asp:Label ID="adrContactAddress_lbl" AssociatedControlID="adrContactAddress" runat="server" Text="<%$ resources: adrContactAddress.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol address"  >
    <SalesLogix:AddressControl runat="server" ID="adrContactAddress" AddressDescriptionPickListName="Address Description (Contact)" AddressDescriptionPickListId="kSYST0000013" ButtonToolTip="<%$ resources: adrContactAddress.ButtonToolTip %>" AddressToolTip="<%$ resources: adrContactAddress.AddressToolTip %>" >
<AddressDescStyle Height="80"></AddressDescStyle> </SalesLogix:AddressControl>
</div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="cboPreferredContact_lbl" AssociatedControlID="cboPreferredContact" runat="server" Text="<%$ resources: cboPreferredContact.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="cboPreferredContact"  SelectionMode="Single" Rows="1"  >
<asp:ListItem  Text="<%$ resources: cboPreferredContact_item0.Text %>"
Value="Unknown" />
<asp:ListItem  Text="<%$ resources: cboPreferredContact_item1.Text %>"
Value="E-mail" />
<asp:ListItem  Text="<%$ resources: cboPreferredContact_item2.Text %>"
Value="Phone" />
<asp:ListItem  Text="<%$ resources: cboPreferredContact_item3.Text %>"
Value="Fax" />
<asp:ListItem  Text="<%$ resources: cboPreferredContact_item4.Text %>"
Value="Letter" />
</asp:ListBox>
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotPhone" CssClass="checkbox "
 Text="<%$ resources: chkDoNotPhone.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
                  <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="emlEmailAddress_lbl" AssociatedControlID="emlEmailAddress" runat="server" Text="<%$ resources: emlEmailAddress.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol email"  > 
<SalesLogix:Email runat="server" ID="emlEmailAddress" ButtonToolTip="<%$ resources: emlEmailAddress.ButtonToolTip %>" MaxLength="128" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotMail" CssClass="checkbox "
 Text="<%$ resources: chkDoNotMail.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
                  <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="urlWebAddress_lbl" AssociatedControlID="urlWebAddress" runat="server" Text="<%$ resources: urlWebAddress.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol urlcontrol"  > 
    <SalesLogix:URL runat="server" ID="urlWebAddress" ButtonToolTip="<%$ resources: urlWebAddress.ButtonToolTip %>" URLTextBoxStyle-ForeColor="#000099" URLTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotFax" CssClass="checkbox "
 Text="<%$ resources: chkDoNotFax.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ownContactOwner_lbl" AssociatedControlID="ownContactOwner" runat="server" Text="<%$ resources: ownContactOwner.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="ownContactOwner" ReadOnly="true" ButtonToolTip="<%$ resources: ownContactOwner.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklContactType_lbl" AssociatedControlID="pklContactType" runat="server" Text="<%$ resources: pklContactType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklContactType" PickListId="kSYST0000380" PickListName="Contact Type" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrAcctMgr_lbl" AssociatedControlID="usrAcctMgr" runat="server" Text="<%$ resources: usrAcctMgr.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrAcctMgr" ButtonToolTip="<%$ resources: usrAcctMgr.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklContactStatus_lbl" AssociatedControlID="pklContactStatus" runat="server" Text="<%$ resources: pklContactStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklContactStatus" PickListId="kSYST0000379" PickListName="Contact Status" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContactDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="cmdDetailsNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="cmdSaveContactDetails"
 AlternateText="<%$ resources: cmdSaveContactDetails.Caption %>"  ToolTip="<%$ resources: cmdSaveContactDetails.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdReset"
 AlternateText="<%$ resources: cmdReset.Caption %>"  ToolTip="<%$ resources: cmdReset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Reset_16x16"  />
 
    <asp:ImageButton runat="server" ID="cmdDelete"
 AlternateText="<%$ resources: cmdDelete.Caption %>"  ToolTip="<%$ resources: cmdDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
   <SalesLogix:Copy ID="cmdCopyContact" runat="server" CopyToDestination="Clipboard"
 ContentConfig="~/SummaryConfigData/CopyContact.xml" 
 ToolTip="<%$ resources: cmdCopyContact.ToolTip %>"  ButtonImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=CopyToClipboard_16x16"  DisplayMode="AsControl" 
>
</SalesLogix:Copy>

    <asp:ImageButton runat="server" ID="cmdMoveContact"
 AlternateText="<%$ resources: cmdMoveContact.Caption %>"  ToolTip="<%$ resources: cmdMoveContact.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Move_Contact_16x16"  />
 
  <SalesLogix:PageLink ID="lnkContactDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="contactdetailsview.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IContact); }
}

 

protected override void OnAddEntityBindings() { 
                    // nmeContactName.NamePrefix Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeContactNameNamePrefixBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Prefix", nmeContactName, "NamePrefix");
        nmeContactNameNamePrefixBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeContactNameNamePrefixBinding);
                 // nmeContactName.NameFirst Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeContactNameNameFirstBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("FirstName", nmeContactName, "NameFirst");
        BindingSource.Bindings.Add(nmeContactNameNameFirstBinding);
                 // nmeContactName.NameMiddle Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeContactNameNameMiddleBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("MiddleName", nmeContactName, "NameMiddle");
        nmeContactNameNameMiddleBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeContactNameNameMiddleBinding);
                 // nmeContactName.NameLast Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeContactNameNameLastBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastName", nmeContactName, "NameLast");
        nmeContactNameNameLastBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeContactNameNameLastBinding);
                 // nmeContactName.NameSuffix Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeContactNameNameSuffixBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Suffix", nmeContactName, "NameSuffix");
        nmeContactNameNameSuffixBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeContactNameNameSuffixBinding);
                       // phnWorkPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnWorkPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WorkPhone", phnWorkPhone, "Text");
        BindingSource.Bindings.Add(phnWorkPhoneTextBinding);
                       // chkIsPrimary.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkIsPrimaryCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("IsPrimary", chkIsPrimary, "Checked");
        BindingSource.Bindings.Add(chkIsPrimaryCheckedBinding);
                       // lnkAccountName.EntityId Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lnkAccountNameEntityIdBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lnkAccountName, "EntityId");
        BindingSource.Bindings.Add(lnkAccountNameEntityIdBinding);
                 // lnkAccountName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lnkAccountNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountName", lnkAccountName, "Text");
        lnkAccountNameTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lnkAccountNameTextBinding);
                       // phnFax.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnFaxTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Fax", phnFax, "Text");
        BindingSource.Bindings.Add(phnFaxTextBinding);
                       // chkIsServiceAuthorized.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkIsServiceAuthorizedCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("IsServiceAuthorized", chkIsServiceAuthorized, "Checked");
        BindingSource.Bindings.Add(chkIsServiceAuthorizedCheckedBinding);
                       // pklTitle.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTitlePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Title", pklTitle, "PickListValue");
        BindingSource.Bindings.Add(pklTitlePickListValueBinding);
                       // phnMobilePhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnMobilePhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Mobile", phnMobilePhone, "Text");
        BindingSource.Bindings.Add(phnMobilePhoneTextBinding);
                       // txtAssistant.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAssistantTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Assistant", txtAssistant, "Text");
        BindingSource.Bindings.Add(txtAssistantTextBinding);
                       // phnHomePhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnHomePhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("HomePhone", phnHomePhone, "Text");
        BindingSource.Bindings.Add(phnHomePhoneTextBinding);
                       // chkDoNotSolicit.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotSolicitCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotSolicit", chkDoNotSolicit, "Checked");
        BindingSource.Bindings.Add(chkDoNotSolicitCheckedBinding);
                       // txtSalutation.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSalutationTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Salutation", txtSalutation, "Text");
        BindingSource.Bindings.Add(txtSalutationTextBinding);
                       // phnOtherPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnOtherPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OtherPhone", phnOtherPhone, "Text");
        BindingSource.Bindings.Add(phnOtherPhoneTextBinding);
                       // chkDoNotEmail.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotEmailCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotEmail", chkDoNotEmail, "Checked");
        BindingSource.Bindings.Add(chkDoNotEmailCheckedBinding);
                 // chkDoNotEmail.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotEmailEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotEmail, "Enabled");
        chkDoNotEmailEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotEmailEnabledBinding);
                       // adrContactAddress.AddressCity Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressCityBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.City", adrContactAddress, "AddressCity");
        adrContactAddressAddressCityBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressCityBinding);
                 // adrContactAddress.AddressCountry Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressCountryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Country", adrContactAddress, "AddressCountry");
        adrContactAddressAddressCountryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressCountryBinding);
                 // adrContactAddress.AddressCounty Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressCountyBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.County", adrContactAddress, "AddressCounty");
        adrContactAddressAddressCountyBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressCountyBinding);
                 // adrContactAddress.AddressDesc1 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressDesc1Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address1", adrContactAddress, "AddressDesc1");
        BindingSource.Bindings.Add(adrContactAddressAddressDesc1Binding);
                 // adrContactAddress.AddressDesc2 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressDesc2Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address2", adrContactAddress, "AddressDesc2");
        adrContactAddressAddressDesc2Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressDesc2Binding);
                 // adrContactAddress.AddressDesc3 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressDesc3Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address3", adrContactAddress, "AddressDesc3");
        adrContactAddressAddressDesc3Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressDesc3Binding);
                 // adrContactAddress.AddressDescription Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressDescriptionBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Description", adrContactAddress, "AddressDescription");
        adrContactAddressAddressDescriptionBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressDescriptionBinding);
                 // adrContactAddress.AddressDisplay Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressDisplayBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.FullAddress", adrContactAddress, "AddressDisplay");
        adrContactAddressAddressDisplayBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressDisplayBinding);
                 // adrContactAddress.AddressIsMailing Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressIsMailingBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsMailing", adrContactAddress, "AddressIsMailing");
        adrContactAddressAddressIsMailingBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressIsMailingBinding);
                 // adrContactAddress.AddressIsPrimary Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressIsPrimaryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsPrimary", adrContactAddress, "AddressIsPrimary");
        adrContactAddressAddressIsPrimaryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressIsPrimaryBinding);
                 // adrContactAddress.AddressPostalCode Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressPostalCodeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.PostalCode", adrContactAddress, "AddressPostalCode");
        adrContactAddressAddressPostalCodeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressPostalCodeBinding);
                 // adrContactAddress.AddressSalutation Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressSalutationBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Salutation", adrContactAddress, "AddressSalutation");
        adrContactAddressAddressSalutationBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressSalutationBinding);
                 // adrContactAddress.AddressState Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrContactAddressAddressStateBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.State", adrContactAddress, "AddressState");
        adrContactAddressAddressStateBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrContactAddressAddressStateBinding);
                       // cboPreferredContact.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding cboPreferredContactTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PreferredContact", cboPreferredContact, "Text");
        cboPreferredContactTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(cboPreferredContactTextBinding);
                       // chkDoNotPhone.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotPhoneCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotPhone", chkDoNotPhone, "Checked");
        BindingSource.Bindings.Add(chkDoNotPhoneCheckedBinding);
                 // chkDoNotPhone.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotPhoneEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotPhone, "Enabled");
        chkDoNotPhoneEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotPhoneEnabledBinding);
                       // emlEmailAddress.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding emlEmailAddressTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Email", emlEmailAddress, "Text");
        BindingSource.Bindings.Add(emlEmailAddressTextBinding);
                       // chkDoNotMail.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotMailCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotMail", chkDoNotMail, "Checked");
        BindingSource.Bindings.Add(chkDoNotMailCheckedBinding);
                 // chkDoNotMail.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotMailEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotMail, "Enabled");
        chkDoNotMailEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotMailEnabledBinding);
                       // urlWebAddress.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding urlWebAddressTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WebAddress", urlWebAddress, "Text");
        BindingSource.Bindings.Add(urlWebAddressTextBinding);
                       // chkDoNotFax.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotFaxCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotFax", chkDoNotFax, "Checked");
        BindingSource.Bindings.Add(chkDoNotFaxCheckedBinding);
                 // chkDoNotFax.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotFaxEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotFax, "Enabled");
        chkDoNotFaxEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotFaxEnabledBinding);
       
                        // ownContactOwner.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ownContactOwnerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", ownContactOwner, "LookupResultValue", "", null);
        BindingSource.Bindings.Add(ownContactOwnerLookupResultValueBinding);
                       // pklContactType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklContactTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Type", pklContactType, "PickListValue");
        BindingSource.Bindings.Add(pklContactTypePickListValueBinding);
                       // usrAcctMgr.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrAcctMgrLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", usrAcctMgr, "LookupResultValue", "", null);
        BindingSource.Bindings.Add(usrAcctMgrLookupResultValueBinding);
                       // pklContactStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklContactStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", pklContactStatus, "PickListValue");
        BindingSource.Bindings.Add(pklContactStatusPickListValueBinding);
    
   
             
      
      
      
                 
      
      
      
                 
      
      
      
    }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void chkDoNotSolicit_ChangeAction(object sender, EventArgs e) {
  Sage.Platform.WebPortal.SmartParts.WebActionEventArgs args = e as Sage.Platform.WebPortal.SmartParts.WebActionEventArgs;
  if (args != null && !string.IsNullOrEmpty(args.PassThroughObject.ToString()) && DialogService != null) {
    DialogService.ShowMessage(args.PassThroughObject.ToString());
  } 

}
protected void chkDoNotEmail_ChangeAction(object sender, EventArgs e) {
  Sage.Platform.WebPortal.SmartParts.WebActionEventArgs args = e as Sage.Platform.WebPortal.SmartParts.WebActionEventArgs;
  if (args != null && !string.IsNullOrEmpty(args.PassThroughObject.ToString()) && DialogService != null) {
    DialogService.ShowMessage(args.PassThroughObject.ToString());
  } 

}
protected void cmdSaveContactDetails_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IContact entity = (Sage.Entity.Interfaces.IContact) this.BindingSource.Current;
if (entity.HasPropagationChanges()) {
            cmdSaveContactDetails_ClickActionS(sender, e);
      
      }
else {
            cmdSaveContactDetails_ClickActionF(sender, e);
      
      }
}
protected void cmdSaveContactDetails_ClickActionS(object sender, EventArgs e) {
if (DialogService != null) {
	// DialogActionItem
	DialogService.SetSpecs(400, 400, "UpdateContactOptions", string.Empty );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.IContact); 
    DialogService.ShowDialog();
}
}
protected void cmdSaveContactDetails_ClickActionF(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IContact _entity = BindingSource.Current as Sage.Entity.Interfaces.IContact;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
          cmdSaveContactDetails_ClickActionFBRC(sender, e);
    
  
}
protected void cmdSaveContactDetails_ClickActionFBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void cmdReset_ClickAction(object sender, EventArgs e) {
  
}
protected void cmdDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }
          cmdDelete_ClickActionBRC(sender, e);
    
  
}
protected void cmdDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("Contact.aspx");
  
}
protected void cmdMoveContact_ClickAction(object sender, EventArgs e) {
if (DialogService != null) {
	// DialogActionItem
	DialogService.SetSpecs(500, 600, "MoveContact", string.Empty );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.IContact); 
    DialogService.ShowDialog();
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 chkDoNotSolicit.CheckedChanged += new EventHandler(chkDoNotSolicit_ChangeAction);
chkDoNotEmail.CheckedChanged += new EventHandler(chkDoNotEmail_ChangeAction);
if (_roleSecurityService != null)
{
if (_roleSecurityService.HasAccess("ENTITIES/CONTACT/EDIT"))
{
cmdSaveContactDetails.Click += new ImageClickEventHandler(cmdSaveContactDetails_ClickAction);
}
}
cmdReset.Click += new ImageClickEventHandler(cmdReset_ClickAction);
if (_roleSecurityService != null)
{
if (_roleSecurityService.HasAccess("ENTITIES/CONTACT/DELETE"))
{
cmdDelete.Click += new ImageClickEventHandler(cmdDelete_ClickAction);
}
}
if (_roleSecurityService != null)
{
if (_roleSecurityService.HasAccess("ENTITIES/CONTACT/EDIT"))
{
cmdMoveContact.Click += new ImageClickEventHandler(cmdMoveContact_ClickAction);
}
}


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(cmdSaveContactDetails);

cmdDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("cmdDelete.ActionConfirmationMessage").ToString()));

if (!_roleSecurityService.HasAccess("ENTITIES/CONTACT/EDIT"))
{
cmdSaveContactDetails.Visible = false;
}
if (!_roleSecurityService.HasAccess("ENTITIES/CONTACT/DELETE"))
{
cmdDelete.Visible = false;
}
if (!_roleSecurityService.HasAccess("ENTITIES/CONTACT/EDIT"))
{
cmdMoveContact.Visible = false;
}
if (ClientBindingMgr != null) { ClientBindingMgr.RegisterResetButton(cmdReset); }


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ContactDetailsAdapter(this)); }
}

public class ContactDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContactDetails
{
	public ContactDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IPersonNameControl _nmeContactName;
	public Sage.Platform.Controls.IPersonNameControl nmeContactName
	{
		get { return FindControl(ref _nmeContactName, "nmeContactName"); }
	}
	private Sage.Platform.Controls.ILinkControl _lnkAccountName;
	public Sage.Platform.Controls.ILinkControl lnkAccountName
	{
		get { return FindControl(ref _lnkAccountName, "lnkAccountName"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklTitle;
	public Sage.Platform.Controls.IPickListControl pklTitle
	{
		get { return FindControl(ref _pklTitle, "pklTitle"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtAssistant;
	public Sage.Platform.Controls.ITextBoxControl txtAssistant
	{
		get { return FindControl(ref _txtAssistant, "txtAssistant"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSalutation;
	public Sage.Platform.Controls.ITextBoxControl txtSalutation
	{
		get { return FindControl(ref _txtSalutation, "txtSalutation"); }
	}
	private Sage.Platform.Controls.IAddressControl _adrContactAddress;
	public Sage.Platform.Controls.IAddressControl adrContactAddress
	{
		get { return FindControl(ref _adrContactAddress, "adrContactAddress"); }
	}
	private Sage.Platform.Controls.IOwnerControl _ownContactOwner;
	public Sage.Platform.Controls.IOwnerControl ownContactOwner
	{
		get { return FindControl(ref _ownContactOwner, "ownContactOwner"); }
	}
	private Sage.Platform.Controls.IUserControl _usrAcctMgr;
	public Sage.Platform.Controls.IUserControl usrAcctMgr
	{
		get { return FindControl(ref _usrAcctMgr, "usrAcctMgr"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnWorkPhone;
	public Sage.Platform.Controls.IPhoneControl phnWorkPhone
	{
		get { return FindControl(ref _phnWorkPhone, "phnWorkPhone"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnFax;
	public Sage.Platform.Controls.IPhoneControl phnFax
	{
		get { return FindControl(ref _phnFax, "phnFax"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnMobilePhone;
	public Sage.Platform.Controls.IPhoneControl phnMobilePhone
	{
		get { return FindControl(ref _phnMobilePhone, "phnMobilePhone"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnHomePhone;
	public Sage.Platform.Controls.IPhoneControl phnHomePhone
	{
		get { return FindControl(ref _phnHomePhone, "phnHomePhone"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnOtherPhone;
	public Sage.Platform.Controls.IPhoneControl phnOtherPhone
	{
		get { return FindControl(ref _phnOtherPhone, "phnOtherPhone"); }
	}
	private Sage.Platform.Controls.IListBoxControl _cboPreferredContact;
	public Sage.Platform.Controls.IListBoxControl cboPreferredContact
	{
		get { return FindControl(ref _cboPreferredContact, "cboPreferredContact"); }
	}
	private Sage.Platform.Controls.IEmailControl _emlEmailAddress;
	public Sage.Platform.Controls.IEmailControl emlEmailAddress
	{
		get { return FindControl(ref _emlEmailAddress, "emlEmailAddress"); }
	}
	private Sage.Platform.Controls.IUrlControl _urlWebAddress;
	public Sage.Platform.Controls.IUrlControl urlWebAddress
	{
		get { return FindControl(ref _urlWebAddress, "urlWebAddress"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklContactType;
	public Sage.Platform.Controls.IPickListControl pklContactType
	{
		get { return FindControl(ref _pklContactType, "pklContactType"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklContactStatus;
	public Sage.Platform.Controls.IPickListControl pklContactStatus
	{
		get { return FindControl(ref _pklContactStatus, "pklContactStatus"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkIsPrimary;
	public Sage.Platform.Controls.ICheckBoxControl chkIsPrimary
	{
		get { return FindControl(ref _chkIsPrimary, "chkIsPrimary"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkIsServiceAuthorized;
	public Sage.Platform.Controls.ICheckBoxControl chkIsServiceAuthorized
	{
		get { return FindControl(ref _chkIsServiceAuthorized, "chkIsServiceAuthorized"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotSolicit;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotSolicit
	{
		get { return FindControl(ref _chkDoNotSolicit, "chkDoNotSolicit"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotEmail;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotEmail
	{
		get { return FindControl(ref _chkDoNotEmail, "chkDoNotEmail"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotPhone;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotPhone
	{
		get { return FindControl(ref _chkDoNotPhone, "chkDoNotPhone"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotMail;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotMail
	{
		get { return FindControl(ref _chkDoNotMail, "chkDoNotMail"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotFax;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotFax
	{
		get { return FindControl(ref _chkDoNotFax, "chkDoNotFax"); }
	}
	private Sage.Platform.Controls.IGroupNavigatorControl _cmdDetailsNavigator;
	public Sage.Platform.Controls.IGroupNavigatorControl cmdDetailsNavigator
	{
		get { return FindControl(ref _cmdDetailsNavigator, "cmdDetailsNavigator"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdSaveContactDetails;
	public Sage.Platform.Controls.IButtonControl cmdSaveContactDetails
	{
		get { return FindControl(ref _cmdSaveContactDetails, "cmdSaveContactDetails"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdReset;
	public Sage.Platform.Controls.IButtonControl cmdReset
	{
		get { return FindControl(ref _cmdReset, "cmdReset"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdDelete;
	public Sage.Platform.Controls.IButtonControl cmdDelete
	{
		get { return FindControl(ref _cmdDelete, "cmdDelete"); }
	}
	private Sage.Platform.Controls.ICopyControl _cmdCopyContact;
	public Sage.Platform.Controls.ICopyControl cmdCopyContact
	{
		get { return FindControl(ref _cmdCopyContact, "cmdCopyContact"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdMoveContact;
	public Sage.Platform.Controls.IButtonControl cmdMoveContact
	{
		get { return FindControl(ref _cmdMoveContact, "cmdMoveContact"); }
	}

}

</script>

<script type="text/javascript">
</script>
