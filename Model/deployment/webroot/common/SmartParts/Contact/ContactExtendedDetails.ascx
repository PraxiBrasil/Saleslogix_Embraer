<%@ Control Language="C#" ClassName="ContactExtendedDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.33333%" />
            <col width="33.33333%" />
            <col width="33.33333%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpBirthday_lbl" AssociatedControlID="dtpBirthday" runat="server" Text="<%$ resources: dtpBirthday.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpBirthday" ButtonToolTip="<%$ resources: dtpBirthday.ButtonToolTip %>" DisplayTime="false" Timeless="true" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnPager_lbl" AssociatedControlID="phnPager" runat="server" Text="<%$ resources: phnPager.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnPager"
MaxLength="32"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtEntityId_lbl" AssociatedControlID="txtEntityId" runat="server" Text="<%$ resources: txtEntityId.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtEntityId" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSpouse_lbl" AssociatedControlID="txtSpouse" runat="server" Text="<%$ resources: txtSpouse.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSpouse" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="emlSecondaryEmail_lbl" AssociatedControlID="emlSecondaryEmail" runat="server" Text="<%$ resources: emlSecondaryEmail.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol email"  > 
<SalesLogix:Email runat="server" ID="emlSecondaryEmail" ButtonToolTip="<%$ resources: emlSecondaryEmail.ButtonToolTip %>" MaxLength="128" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtImportSource_lbl" AssociatedControlID="txtImportSource" runat="server" Text="<%$ resources: txtImportSource.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtImportSource" ReadOnly="true" Rows="1"
MaxLength="24"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtChildren_lbl" AssociatedControlID="txtChildren" runat="server" Text="<%$ resources: txtChildren.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtChildren" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="emlEmail3_lbl" AssociatedControlID="emlEmail3" runat="server" Text="<%$ resources: emlEmail3.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol email"  > 
<SalesLogix:Email runat="server" ID="emlEmail3" ButtonToolTip="<%$ resources: emlEmail3.ButtonToolTip %>" MaxLength="128" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrCreateUser_lbl" AssociatedControlID="usrCreateUser" runat="server" Text="<%$ resources: usrCreateUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrCreateUser" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: usrCreateUser.ButtonToolTip %>"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAlumni_lbl" AssociatedControlID="txtAlumni" runat="server" Text="<%$ resources: txtAlumni.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAlumni" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklDepartment_lbl" AssociatedControlID="pklDepartment" runat="server" Text="<%$ resources: pklDepartment.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklDepartment" PickListId="kSYST0000387" PickListName="Department" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpCreateDate_lbl" AssociatedControlID="dtpCreateDate" runat="server" Text="<%$ resources: dtpCreateDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpCreateDate" ReadOnly="true" ButtonToolTip="<%$ resources: dtpCreateDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtPreviousEmployer_lbl" AssociatedControlID="txtPreviousEmployer" runat="server" Text="<%$ resources: txtPreviousEmployer.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtPreviousEmployer" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtReferral_lbl" AssociatedControlID="txtReferral" runat="server" Text="<%$ resources: txtReferral.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtReferral" Rows="1"
MaxLength="64"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrModifyUser_lbl" AssociatedControlID="usrModifyUser" runat="server" Text="<%$ resources: usrModifyUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrModifyUser" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: usrModifyUser.ButtonToolTip %>"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklInterests_lbl" AssociatedControlID="pklInterests" runat="server" Text="<%$ resources: pklInterests.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklInterests" PickListId="kSYST0000349" PickListName="Interests" MustExistInList="false" AllowMultiples="true" AlphaSort="true" MaxLength="128"  />
  </div>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpModifyDate_lbl" AssociatedControlID="dtpModifyDate" runat="server" Text="<%$ resources: dtpModifyDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpModifyDate" ReadOnly="true" ButtonToolTip="<%$ resources: dtpModifyDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklCuisinePreference_lbl" AssociatedControlID="pklCuisinePreference" runat="server" Text="<%$ resources: pklCuisinePreference.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklCuisinePreference" PickListId="kSYST0000335" PickListName="CuisinePrefs" MustExistInList="false" AllowMultiples="true" AlphaSort="true" MaxLength="64"  />
  </div>

      </td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  colspan="3" >
 <div class=" lbl colspan3 alignleft">
   <asp:Label ID="tmzAddressTimeZone_lbl" AssociatedControlID="tmzAddressTimeZone" runat="server" Text="<%$ resources: tmzAddressTimeZone.Caption %>" ></asp:Label>
 </div>   
   <div  class="twocoltextcontrol timezone"  > 
    <SalesLogix:TimeZoneControl runat="server" ID="tmzAddressTimeZone" LocalDisplayCssClass="TimeZoneLabel" ButtonCssClass="TimeZoneButton" ListBoxCssClass="TimeZoneList"  />
  </div>

      </td>
                  </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContactExtendedDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="cmdSaveContactExtendedDetails"
 AlternateText="<%$ resources: cmdSaveContactExtendedDetails.Caption %>"  ToolTip="<%$ resources: cmdSaveContactExtendedDetails.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
 
  <SalesLogix:PageLink ID="lnkContactExtendedDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="contactdetailstab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IContact); }
}

 

protected override void OnAddEntityBindings() { 
                    // dtpBirthday.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpBirthdayDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Birthday", dtpBirthday, "DateTimeValue");
        BindingSource.Bindings.Add(dtpBirthdayDateTimeValueBinding);
                       // phnPager.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnPagerTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Pager", phnPager, "Text");
        BindingSource.Bindings.Add(phnPagerTextBinding);
                       // txtEntityId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtEntityIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.EntityId", txtEntityId, "Text");
        BindingSource.Bindings.Add(txtEntityIdTextBinding);
                       // txtSpouse.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSpouseTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Spouse", txtSpouse, "Text");
        BindingSource.Bindings.Add(txtSpouseTextBinding);
                       // emlSecondaryEmail.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding emlSecondaryEmailTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SecondaryEmail", emlSecondaryEmail, "Text");
        BindingSource.Bindings.Add(emlSecondaryEmailTextBinding);
                       // txtImportSource.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtImportSourceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ImportSource", txtImportSource, "Text");
        BindingSource.Bindings.Add(txtImportSourceTextBinding);
                       // txtChildren.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtChildrenTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Children", txtChildren, "Text");
        BindingSource.Bindings.Add(txtChildrenTextBinding);
                       // emlEmail3.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding emlEmail3TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Email3", emlEmail3, "Text");
        BindingSource.Bindings.Add(emlEmail3TextBinding);
                       // usrCreateUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrCreateUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateUser", usrCreateUser, "LookupResultValue");
        BindingSource.Bindings.Add(usrCreateUserLookupResultValueBinding);
                       // txtAlumni.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAlumniTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Alumni", txtAlumni, "Text");
        BindingSource.Bindings.Add(txtAlumniTextBinding);
                       // pklDepartment.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklDepartmentPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Department", pklDepartment, "PickListValue");
        BindingSource.Bindings.Add(pklDepartmentPickListValueBinding);
                       // dtpCreateDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpCreateDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", dtpCreateDate, "DateTimeValue", "", null);
        BindingSource.Bindings.Add(dtpCreateDateDateTimeValueBinding);
                       // txtPreviousEmployer.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtPreviousEmployerTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PreviousEmployer", txtPreviousEmployer, "Text");
        BindingSource.Bindings.Add(txtPreviousEmployerTextBinding);
                       // txtReferral.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtReferralTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Referral", txtReferral, "Text");
        BindingSource.Bindings.Add(txtReferralTextBinding);
                       // usrModifyUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrModifyUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", usrModifyUser, "LookupResultValue");
        BindingSource.Bindings.Add(usrModifyUserLookupResultValueBinding);
                       // pklInterests.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklInterestsPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Interests", pklInterests, "PickListValue");
        BindingSource.Bindings.Add(pklInterestsPickListValueBinding);
                       // dtpModifyDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpModifyDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyDate", dtpModifyDate, "DateTimeValue", "", null);
        BindingSource.Bindings.Add(dtpModifyDateDateTimeValueBinding);
                       // pklCuisinePreference.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklCuisinePreferencePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CuisinePreference", pklCuisinePreference, "PickListValue");
        BindingSource.Bindings.Add(pklCuisinePreferencePickListValueBinding);
       
                        // tmzAddressTimeZone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding tmzAddressTimeZoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.TimeZone", tmzAddressTimeZone, "Text");
        BindingSource.Bindings.Add(tmzAddressTimeZoneTextBinding);
    
   
         
      
      
      
    }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void cmdSaveContactExtendedDetails_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IContact entity = (Sage.Entity.Interfaces.IContact) this.BindingSource.Current;
if (entity.HasPropagationChanges()) {
            cmdSaveContactExtendedDetails_ClickActionS(sender, e);
      
      }
else {
            cmdSaveContactExtendedDetails_ClickActionF(sender, e);
      
      }
}
protected void cmdSaveContactExtendedDetails_ClickActionS(object sender, EventArgs e) {
if (DialogService != null) {
	// DialogActionItem
	DialogService.SetSpecs(400, 400, "UpdateContactOptions", string.Empty );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.IContact); 
    DialogService.ShowDialog();
}
}
protected void cmdSaveContactExtendedDetails_ClickActionF(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IContact _entity = BindingSource.Current as Sage.Entity.Interfaces.IContact;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
          cmdSaveContactExtendedDetails_ClickActionFBRC(sender, e);
    
  
}
protected void cmdSaveContactExtendedDetails_ClickActionFBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 if (_roleSecurityService != null)
{
if (_roleSecurityService.HasAccess("ENTITIES/CONTACT/EDIT"))
{
cmdSaveContactExtendedDetails.Click += new ImageClickEventHandler(cmdSaveContactExtendedDetails_ClickAction);
}
}


}

protected override void OnFormBound()
{
if (!_roleSecurityService.HasAccess("ENTITIES/CONTACT/EDIT"))
{
cmdSaveContactExtendedDetails.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ContactExtendedDetailsAdapter(this)); }
}

public class ContactExtendedDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContactExtendedDetails
{
	public ContactExtendedDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDateTimePickerControl _dtpBirthday;
	public Sage.Platform.Controls.IDateTimePickerControl dtpBirthday
	{
		get { return FindControl(ref _dtpBirthday, "dtpBirthday"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSpouse;
	public Sage.Platform.Controls.ITextBoxControl txtSpouse
	{
		get { return FindControl(ref _txtSpouse, "txtSpouse"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtChildren;
	public Sage.Platform.Controls.ITextBoxControl txtChildren
	{
		get { return FindControl(ref _txtChildren, "txtChildren"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtAlumni;
	public Sage.Platform.Controls.ITextBoxControl txtAlumni
	{
		get { return FindControl(ref _txtAlumni, "txtAlumni"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtPreviousEmployer;
	public Sage.Platform.Controls.ITextBoxControl txtPreviousEmployer
	{
		get { return FindControl(ref _txtPreviousEmployer, "txtPreviousEmployer"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklInterests;
	public Sage.Platform.Controls.IPickListControl pklInterests
	{
		get { return FindControl(ref _pklInterests, "pklInterests"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklCuisinePreference;
	public Sage.Platform.Controls.IPickListControl pklCuisinePreference
	{
		get { return FindControl(ref _pklCuisinePreference, "pklCuisinePreference"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _tmzAddressTimeZone;
	public Sage.Platform.Controls.ITextBoxControl tmzAddressTimeZone
	{
		get { return FindControl(ref _tmzAddressTimeZone, "tmzAddressTimeZone"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnPager;
	public Sage.Platform.Controls.IPhoneControl phnPager
	{
		get { return FindControl(ref _phnPager, "phnPager"); }
	}
	private Sage.Platform.Controls.IEmailControl _emlSecondaryEmail;
	public Sage.Platform.Controls.IEmailControl emlSecondaryEmail
	{
		get { return FindControl(ref _emlSecondaryEmail, "emlSecondaryEmail"); }
	}
	private Sage.Platform.Controls.IEmailControl _emlEmail3;
	public Sage.Platform.Controls.IEmailControl emlEmail3
	{
		get { return FindControl(ref _emlEmail3, "emlEmail3"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklDepartment;
	public Sage.Platform.Controls.IPickListControl pklDepartment
	{
		get { return FindControl(ref _pklDepartment, "pklDepartment"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtReferral;
	public Sage.Platform.Controls.ITextBoxControl txtReferral
	{
		get { return FindControl(ref _txtReferral, "txtReferral"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtEntityId;
	public Sage.Platform.Controls.ITextBoxControl txtEntityId
	{
		get { return FindControl(ref _txtEntityId, "txtEntityId"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtImportSource;
	public Sage.Platform.Controls.ITextBoxControl txtImportSource
	{
		get { return FindControl(ref _txtImportSource, "txtImportSource"); }
	}
	private Sage.Platform.Controls.IUserControl _usrCreateUser;
	public Sage.Platform.Controls.IUserControl usrCreateUser
	{
		get { return FindControl(ref _usrCreateUser, "usrCreateUser"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpCreateDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpCreateDate
	{
		get { return FindControl(ref _dtpCreateDate, "dtpCreateDate"); }
	}
	private Sage.Platform.Controls.IUserControl _usrModifyUser;
	public Sage.Platform.Controls.IUserControl usrModifyUser
	{
		get { return FindControl(ref _usrModifyUser, "usrModifyUser"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpModifyDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpModifyDate
	{
		get { return FindControl(ref _dtpModifyDate, "dtpModifyDate"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdSaveContactExtendedDetails;
	public Sage.Platform.Controls.IButtonControl cmdSaveContactExtendedDetails
	{
		get { return FindControl(ref _cmdSaveContactExtendedDetails, "cmdSaveContactExtendedDetails"); }
	}

}

</script>

<script type="text/javascript">
</script>
