<%@ Control Language="C#" ClassName="LeadExtendedDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.33333%" />
            <col width="33.33333%" />
            <col width="33.33333%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpLastCallDate_lbl" AssociatedControlID="dtpLastCallDate" runat="server" Text="<%$ resources: dtpLastCallDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpLastCallDate" ButtonToolTip="<%$ resources: dtpLastCallDate.ButtonToolTip %>" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtImportSource_lbl" AssociatedControlID="txtImportSource" runat="server" Text="<%$ resources: txtImportSource.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtImportSource" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrCreateUser_lbl" AssociatedControlID="usrCreateUser" runat="server" Text="<%$ resources: usrCreateUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrCreateUser" ReadOnly="true" LookupBindingMode="String"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpNextCallDate_lbl" AssociatedControlID="dtpNextCallDate" runat="server" Text="<%$ resources: dtpNextCallDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpNextCallDate" ButtonToolTip="<%$ resources: dtpNextCallDate.ButtonToolTip %>" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpAssignedDate_lbl" AssociatedControlID="dtpAssignedDate" runat="server" Text="<%$ resources: dtpAssignedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpAssignedDate" ButtonToolTip="<%$ resources: dtpAssignedDate.ButtonToolTip %>" Timeless="true" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpCreateDate_lbl" AssociatedControlID="dtpCreateDate" runat="server" Text="<%$ resources: dtpCreateDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpCreateDate" ReadOnly="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklStatus_lbl" AssociatedControlID="pklStatus" runat="server" Text="<%$ resources: pklStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklStatus" PickListId="kSYST0000409" PickListName="Lead Status" MustExistInList="false" NoneEditable="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ownOwner_lbl" AssociatedControlID="ownOwner" runat="server" Text="<%$ resources: ownOwner.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="ownOwner" ButtonToolTip="<%$ resources: ownOwner.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrModifyUser_lbl" AssociatedControlID="usrModifyUser" runat="server" Text="<%$ resources: usrModifyUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrModifyUser" ReadOnly="true" LookupBindingMode="String"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklPriority_lbl" AssociatedControlID="pklPriority" runat="server" Text="<%$ resources: pklPriority.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklPriority" PickListId="kSYST0000408" PickListName="Lead Priority" MustExistInList="false" NoneEditable="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrAccountManager_lbl" AssociatedControlID="usrAccountManager" runat="server" Text="<%$ resources: usrAccountManager.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrAccountManager" ButtonToolTip="<%$ resources: usrAccountManager.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpModifyDate_lbl" AssociatedControlID="dtpModifyDate" runat="server" Text="<%$ resources: dtpModifyDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpModifyDate" ReadOnly="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklCreditRating_lbl" AssociatedControlID="pklCreditRating" runat="server" Text="<%$ resources: pklCreditRating.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklCreditRating" PickListId="kSYST0000361" PickListName="Credit Rating" MustExistInList="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklEmployees_lbl" AssociatedControlID="pklEmployees" runat="server" Text="<%$ resources: pklEmployees.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklEmployees" PickListId="kSYST0000407" PickListName="Employees" MustExistInList="false" NoneEditable="true"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtLeadID_lbl" AssociatedControlID="txtLeadID" runat="server" Text="<%$ resources: txtLeadID.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtLeadID" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklYearlyRevenue_lbl" AssociatedControlID="pklYearlyRevenue" runat="server" Text="<%$ resources: pklYearlyRevenue.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklYearlyRevenue" PickListId="kSYST0000406" PickListName="Company Annual Income" MustExistInList="false" NoneEditable="true"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft">
   <asp:Label ID="tzTimeZone_lbl" AssociatedControlID="tzTimeZone" runat="server" Text="<%$ resources: tzTimeZone.Caption %>" ></asp:Label>
 </div>   
   <div  class="twocoltextcontrol timezone"  > 
    <SalesLogix:TimeZoneControl runat="server" ID="tzTimeZone" LocalDisplayCssClass="TimeZoneLabel" ButtonCssClass="TimeZoneButton" ListBoxCssClass="TimeZoneList"  />
  </div>

      </td>
                      <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="LeadExtendedDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="cmdUpdateLeadDetails"
 AlternateText="<%$ resources: cmdUpdateLeadDetails.Caption %>"  ToolTip="<%$ resources: cmdUpdateLeadDetails.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="lnkLeadExtendedDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="leaddetailstab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ILead); }
}

 

protected override void OnAddEntityBindings() { 
                    // dtpLastCallDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpLastCallDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastCallDate", dtpLastCallDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpLastCallDateDateTimeValueBinding);
                       // txtImportSource.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtImportSourceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ImportSource", txtImportSource, "Text");
        BindingSource.Bindings.Add(txtImportSourceTextBinding);
                       // usrCreateUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrCreateUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateUser", usrCreateUser, "LookupResultValue");
        BindingSource.Bindings.Add(usrCreateUserLookupResultValueBinding);
                       // dtpNextCallDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpNextCallDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("NextCallDate", dtpNextCallDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpNextCallDateDateTimeValueBinding);
                       // dtpAssignedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpAssignedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssignDate", dtpAssignedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpAssignedDateDateTimeValueBinding);
                       // dtpCreateDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpCreateDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", dtpCreateDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpCreateDateDateTimeValueBinding);
                       // pklStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", pklStatus, "PickListValue");
        BindingSource.Bindings.Add(pklStatusPickListValueBinding);
                       // ownOwner.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ownOwnerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", ownOwner, "LookupResultValue");
        BindingSource.Bindings.Add(ownOwnerLookupResultValueBinding);
                       // usrModifyUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrModifyUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", usrModifyUser, "LookupResultValue");
        BindingSource.Bindings.Add(usrModifyUserLookupResultValueBinding);
                       // pklPriority.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklPriorityPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Priority", pklPriority, "PickListValue");
        BindingSource.Bindings.Add(pklPriorityPickListValueBinding);
                       // usrAccountManager.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrAccountManagerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", usrAccountManager, "LookupResultValue");
        BindingSource.Bindings.Add(usrAccountManagerLookupResultValueBinding);
                       // dtpModifyDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpModifyDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyDate", dtpModifyDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpModifyDateDateTimeValueBinding);
                       // pklCreditRating.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklCreditRatingPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreditRating", pklCreditRating, "PickListValue");
        BindingSource.Bindings.Add(pklCreditRatingPickListValueBinding);
                       // pklEmployees.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklEmployeesPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Employees", pklEmployees, "PickListValue");
        BindingSource.Bindings.Add(pklEmployeesPickListValueBinding);
                       // txtLeadID.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtLeadIDTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Id", txtLeadID, "Text");
        BindingSource.Bindings.Add(txtLeadIDTextBinding);
                       // pklYearlyRevenue.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklYearlyRevenuePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Revenue", pklYearlyRevenue, "PickListValue");
        BindingSource.Bindings.Add(pklYearlyRevenuePickListValueBinding);
       
                        // tzTimeZone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding tzTimeZoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.TimeZone", tzTimeZone, "Text");
        BindingSource.Bindings.Add(tzTimeZoneTextBinding);
    
   
    }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void cmdUpdateLeadDetails_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.ILead _entity = BindingSource.Current as Sage.Entity.Interfaces.ILead;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 cmdUpdateLeadDetails.Click += new ImageClickEventHandler(cmdUpdateLeadDetails_ClickAction);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(cmdUpdateLeadDetails);



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	if (BindingSource != null)
	{
		if (BindingSource.Current != null)
		{
			tinfo.Description = BindingSource.Current.ToString();
			tinfo.Title = BindingSource.Current.ToString();
		}
	}
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new LeadExtendedDetailsAdapter(this)); }
}

public class LeadExtendedDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ILeadExtendedDetails
{
	public LeadExtendedDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDateTimePickerControl _dtpLastCallDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpLastCallDate
	{
		get { return FindControl(ref _dtpLastCallDate, "dtpLastCallDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpNextCallDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpNextCallDate
	{
		get { return FindControl(ref _dtpNextCallDate, "dtpNextCallDate"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklStatus;
	public Sage.Platform.Controls.IPickListControl pklStatus
	{
		get { return FindControl(ref _pklStatus, "pklStatus"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklPriority;
	public Sage.Platform.Controls.IPickListControl pklPriority
	{
		get { return FindControl(ref _pklPriority, "pklPriority"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklCreditRating;
	public Sage.Platform.Controls.IPickListControl pklCreditRating
	{
		get { return FindControl(ref _pklCreditRating, "pklCreditRating"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtLeadID;
	public Sage.Platform.Controls.ITextBoxControl txtLeadID
	{
		get { return FindControl(ref _txtLeadID, "txtLeadID"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _tzTimeZone;
	public Sage.Platform.Controls.ITextBoxControl tzTimeZone
	{
		get { return FindControl(ref _tzTimeZone, "tzTimeZone"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtImportSource;
	public Sage.Platform.Controls.ITextBoxControl txtImportSource
	{
		get { return FindControl(ref _txtImportSource, "txtImportSource"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpAssignedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpAssignedDate
	{
		get { return FindControl(ref _dtpAssignedDate, "dtpAssignedDate"); }
	}
	private Sage.Platform.Controls.IOwnerControl _ownOwner;
	public Sage.Platform.Controls.IOwnerControl ownOwner
	{
		get { return FindControl(ref _ownOwner, "ownOwner"); }
	}
	private Sage.Platform.Controls.IUserControl _usrAccountManager;
	public Sage.Platform.Controls.IUserControl usrAccountManager
	{
		get { return FindControl(ref _usrAccountManager, "usrAccountManager"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklEmployees;
	public Sage.Platform.Controls.IPickListControl pklEmployees
	{
		get { return FindControl(ref _pklEmployees, "pklEmployees"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklYearlyRevenue;
	public Sage.Platform.Controls.IPickListControl pklYearlyRevenue
	{
		get { return FindControl(ref _pklYearlyRevenue, "pklYearlyRevenue"); }
	}
	private Sage.Platform.Controls.IUserControl _usrCreateUser;
	public Sage.Platform.Controls.IUserControl usrCreateUser
	{
		get { return FindControl(ref _usrCreateUser, "usrCreateUser"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpCreateDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpCreateDate
	{
		get { return FindControl(ref _dtpCreateDate, "dtpCreateDate"); }
	}
	private Sage.Platform.Controls.IUserControl _usrModifyUser;
	public Sage.Platform.Controls.IUserControl usrModifyUser
	{
		get { return FindControl(ref _usrModifyUser, "usrModifyUser"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpModifyDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpModifyDate
	{
		get { return FindControl(ref _dtpModifyDate, "dtpModifyDate"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdUpdateLeadDetails;
	public Sage.Platform.Controls.IButtonControl cmdUpdateLeadDetails
	{
		get { return FindControl(ref _cmdUpdateLeadDetails, "cmdUpdateLeadDetails"); }
	}

}

</script>

<script type="text/javascript">
</script>
