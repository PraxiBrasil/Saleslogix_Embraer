<%@ Control Language="C#" ClassName="LeadDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.33333%" />
            <col width="33.33333%" />
            <col width="33.33333%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="nmeLeadName_lbl" AssociatedControlID="nmeLeadName" runat="server" Text="<%$ resources: nmeLeadName.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol person"  >
    <SalesLogix:FullName runat="server" ID="nmeLeadName" ButtonToolTip="<%$ resources: nmeLeadName.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="emlEmail_lbl" AssociatedControlID="emlEmail" runat="server" Text="<%$ resources: emlEmail.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol email"  > 
<SalesLogix:Email runat="server" ID="emlEmail" ButtonToolTip="<%$ resources: emlEmail.ButtonToolTip %>" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td rowspan="8"  >
<%@ Register tagPrefix="SalesLogix" tagName="wbrQualifications" src="~/SmartParts/Lead/LeadQualifications.ascx" %>
<SalesLogix:wbrQualifications id="wbrQualifications" runat="server" OnInit="setwbrQualificationsContext" ></SalesLogix:wbrQualifications>
<script runat="server" type="text/C#">
	protected void setwbrQualificationsContext(object sender, EventArgs e)
	{
		Sage.Platform.WebPortal.SmartParts.SmartPart sp = wbrQualifications as Sage.Platform.WebPortal.SmartParts.SmartPart;
		if (sp != null)
		{
			sp.InitSmartPart(ParentWorkItem, PageWorkItem.Services.Get<Sage.Platform.Application.UI.Web.IPageWorkItemLocator>());
			sp.DialogService = DialogService;
			Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPart esp = sp as Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPart;
			if (esp != null)
			{
                esp.InitEntityBoundSmartPart(PageWorkItem.Services.Get<Sage.Platform.Application.IEntityContextService>());
			}
		}
	}
</script>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklTitle_lbl" AssociatedControlID="pklTitle" runat="server" Text="<%$ resources: pklTitle.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklTitle" PickListId="kSYST0000387" PickListName="Title" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnWorkPhone_lbl" AssociatedControlID="phnWorkPhone" runat="server" Text="<%$ resources: phnWorkPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnWorkPhone"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCompany_lbl" AssociatedControlID="txtCompany" runat="server" Text="<%$ resources: txtCompany.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCompany" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnTollFree_lbl" AssociatedControlID="phnTollFree" runat="server" Text="<%$ resources: phnTollFree.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnTollFree"
 />
  </div>

      </td>
            </tr>
<tr>
            <td rowspan="3"  >
 <div class=" lbl alignleft">
   <asp:Label ID="adrAddress_lbl" AssociatedControlID="adrAddress" runat="server" Text="<%$ resources: adrAddress.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol address"  >
    <SalesLogix:AddressControl runat="server" ID="adrAddress" AddressDescriptionPickListName="Address Description (Lead)" AddressDescriptionPickListId="kSYST0000403" ButtonToolTip="<%$ resources: adrAddress.ButtonToolTip %>" AddressToolTip="<%$ resources: adrAddress.AddressToolTip %>" >
<AddressDescStyle Height="80"></AddressDescStyle> </SalesLogix:AddressControl>
</div>

      </td>
                <td rowspan="2"  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtBusinessDescription_lbl" AssociatedControlID="txtBusinessDescription" runat="server" Text="<%$ resources: txtBusinessDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtBusinessDescription" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
            </tr>
<tr>
                    </tr>
<tr>
                  <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueLeadSource_lbl" AssociatedControlID="lueLeadSource" runat="server" Text="<%$ resources: lueLeadSource.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueLeadSource" ButtonToolTip="<%$ resources: lueLeadSource.ButtonToolTip %>" LookupEntityName="LeadSource" LookupEntityTypeName="Sage.Entity.Interfaces.ILeadSource, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueLeadSource.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueLeadSource.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueLeadSource.LookupProperties.AbbrevDescription.PropertyHeader %>" PropertyName="AbbrevDescription" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
<SalesLogix:LookupPreFilter PropertyName="Status" PropertyType="System.String" OperatorCode="="
 FilterValue="<%$ resources: lueLeadSource.LUPF.Status %>"
 ></SalesLogix:LookupPreFilter>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="urlWeb_lbl" AssociatedControlID="urlWeb" runat="server" Text="<%$ resources: urlWeb.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol urlcontrol"  > 
    <SalesLogix:URL runat="server" ID="urlWeb" ButtonToolTip="<%$ resources: urlWeb.ButtonToolTip %>" URLTextBoxStyle-ForeColor="#000099" URLTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td rowspan="2"  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtInterests_lbl" AssociatedControlID="txtInterests" runat="server" Text="<%$ resources: txtInterests.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtInterests" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklIndustry_lbl" AssociatedControlID="pklIndustry" runat="server" Text="<%$ resources: pklIndustry.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklIndustry" PickListId="kSYST0000390" PickListName="Industry" MustExistInList="false" NoneEditable="true" AlphaSort="true"  />
  </div>

      </td>
                  </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSICCode_lbl" AssociatedControlID="txtSICCode" runat="server" Text="<%$ resources: txtSICCode.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSICCode" Rows="1"
 />
  </div>

      </td>
                <td></td>
                <td  >
 <asp:Button runat="server" ID="cmdConvertLead"
 Text="<%$ resources: cmdConvertLead.Caption %>" CssClass="slxbutton"  />
 
      </td>
      </tr>
<tr>
            <td rowspan="3"  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtComments" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
                      <td></td>
      </tr>
<tr>
                        <td></td>
      </tr>
<tr>
                        <td></td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotSolicit" CssClass="checkbox "
 Text="<%$ resources: chkDoNotSolicit.Caption %>" AutoPostBack="true"  />
</div>
      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotMail" CssClass="checkbox "
 Text="<%$ resources: chkDoNotMail.Caption %>"  />
</div>
      </td>
                <td></td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotEmail" CssClass="checkbox "
 Text="<%$ resources: chkDoNotEmail.Caption %>" AutoPostBack="true"  />
</div>
      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotFax" CssClass="checkbox "
 Text="<%$ resources: chkDoNotFax.Caption %>"  />
</div>
      </td>
                <td></td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkDoNotCall" CssClass="checkbox "
 Text="<%$ resources: chkDoNotCall.Caption %>"  />
</div>
      </td>
                <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="LeadDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="gpnLeadGroupNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="cmdUpdateLead"
 AlternateText="<%$ resources: cmdUpdateLead.Caption %>"  ToolTip="<%$ resources: cmdUpdateLead.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdDeleteLead"
 AlternateText="<%$ resources: cmdDeleteLead.Caption %>"  ToolTip="<%$ resources: cmdDeleteLead.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="lnkLeadDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="leaddetailview.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ILead); }
}

 

protected override void OnAddEntityBindings() { 
                    // nmeLeadName.NameFirst Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameFirstBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("FirstName", nmeLeadName, "NameFirst");
        BindingSource.Bindings.Add(nmeLeadNameNameFirstBinding);
                 // nmeLeadName.NameLast Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameLastBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastName", nmeLeadName, "NameLast");
        nmeLeadNameNameLastBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNameLastBinding);
                 // nmeLeadName.NameMiddle Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameMiddleBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("MiddleName", nmeLeadName, "NameMiddle");
        nmeLeadNameNameMiddleBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNameMiddleBinding);
                 // nmeLeadName.NamePrefix Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNamePrefixBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Prefix", nmeLeadName, "NamePrefix");
        nmeLeadNameNamePrefixBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNamePrefixBinding);
                 // nmeLeadName.NameSuffix Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameSuffixBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Suffix", nmeLeadName, "NameSuffix");
        nmeLeadNameNameSuffixBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNameSuffixBinding);
                       // emlEmail.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding emlEmailTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Email", emlEmail, "Text");
        BindingSource.Bindings.Add(emlEmailTextBinding);
       
                        // pklTitle.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTitlePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Title", pklTitle, "PickListValue");
        BindingSource.Bindings.Add(pklTitlePickListValueBinding);
                       // phnWorkPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnWorkPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WorkPhone", phnWorkPhone, "Text");
        BindingSource.Bindings.Add(phnWorkPhoneTextBinding);
                       // txtCompany.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCompanyTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Company", txtCompany, "Text");
        BindingSource.Bindings.Add(txtCompanyTextBinding);
                       // phnTollFree.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnTollFreeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TollFree", phnTollFree, "Text");
        BindingSource.Bindings.Add(phnTollFreeTextBinding);
                       // adrAddress.AddressCity Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressCityBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.City", adrAddress, "AddressCity");
        adrAddressAddressCityBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressCityBinding);
                 // adrAddress.AddressCountry Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressCountryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Country", adrAddress, "AddressCountry");
        adrAddressAddressCountryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressCountryBinding);
                 // adrAddress.AddressCounty Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressCountyBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.County", adrAddress, "AddressCounty");
        adrAddressAddressCountyBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressCountyBinding);
                 // adrAddress.AddressDesc1 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDesc1Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address1", adrAddress, "AddressDesc1");
        BindingSource.Bindings.Add(adrAddressAddressDesc1Binding);
                 // adrAddress.AddressDesc2 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDesc2Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address2", adrAddress, "AddressDesc2");
        adrAddressAddressDesc2Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDesc2Binding);
                 // adrAddress.AddressDesc3 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDesc3Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address3", adrAddress, "AddressDesc3");
        adrAddressAddressDesc3Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDesc3Binding);
                 // adrAddress.AddressDescription Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDescriptionBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Description", adrAddress, "AddressDescription");
        adrAddressAddressDescriptionBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDescriptionBinding);
                 // adrAddress.AddressDisplay Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDisplayBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.FullAddress", adrAddress, "AddressDisplay");
        adrAddressAddressDisplayBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDisplayBinding);
                 // adrAddress.AddressIsMailing Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressIsMailingBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsMailing", adrAddress, "AddressIsMailing");
        adrAddressAddressIsMailingBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressIsMailingBinding);
                 // adrAddress.AddressIsPrimary Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressIsPrimaryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsPrimary", adrAddress, "AddressIsPrimary");
        adrAddressAddressIsPrimaryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressIsPrimaryBinding);
                 // adrAddress.AddressPostalCode Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressPostalCodeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.PostalCode", adrAddress, "AddressPostalCode");
        adrAddressAddressPostalCodeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressPostalCodeBinding);
                 // adrAddress.AddressSalutation Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressSalutationBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Salutation", adrAddress, "AddressSalutation");
        adrAddressAddressSalutationBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressSalutationBinding);
                 // adrAddress.AddressState Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressStateBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.State", adrAddress, "AddressState");
        adrAddressAddressStateBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressStateBinding);
                       // txtBusinessDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtBusinessDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BusinessDescription", txtBusinessDescription, "Text");
        BindingSource.Bindings.Add(txtBusinessDescriptionTextBinding);
                       // lueLeadSource.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueLeadSourceLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource", lueLeadSource, "LookupResultValue");
        BindingSource.Bindings.Add(lueLeadSourceLookupResultValueBinding);
                       // urlWeb.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding urlWebTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WebAddress", urlWeb, "Text");
        BindingSource.Bindings.Add(urlWebTextBinding);
                       // txtInterests.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtInterestsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Interests", txtInterests, "Text");
        BindingSource.Bindings.Add(txtInterestsTextBinding);
                       // pklIndustry.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklIndustryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Industry", pklIndustry, "PickListValue");
        BindingSource.Bindings.Add(pklIndustryPickListValueBinding);
                       // txtSICCode.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSICCodeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SICCode", txtSICCode, "Text");
        BindingSource.Bindings.Add(txtSICCodeTextBinding);
       
                        // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Notes", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
       
                        // chkDoNotSolicit.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotSolicitCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotSolicit", chkDoNotSolicit, "Checked");
        BindingSource.Bindings.Add(chkDoNotSolicitCheckedBinding);
                       // chkDoNotMail.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotMailCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotMail", chkDoNotMail, "Checked");
        BindingSource.Bindings.Add(chkDoNotMailCheckedBinding);
                 // chkDoNotMail.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotMailEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotMail, "Enabled");
        chkDoNotMailEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotMailEnabledBinding);
                       // chkDoNotEmail.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotEmailCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotEmail", chkDoNotEmail, "Checked");
        BindingSource.Bindings.Add(chkDoNotEmailCheckedBinding);
                 // chkDoNotEmail.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotEmailEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotEmail, "Enabled");
        chkDoNotEmailEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotEmailEnabledBinding);
                       // chkDoNotFax.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotFaxCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotFAX", chkDoNotFax, "Checked");
        BindingSource.Bindings.Add(chkDoNotFaxCheckedBinding);
                 // chkDoNotFax.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotFaxEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotFax, "Enabled");
        chkDoNotFaxEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotFaxEnabledBinding);
                       // chkDoNotCall.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotCallCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DoNotPhone", chkDoNotCall, "Checked");
        BindingSource.Bindings.Add(chkDoNotCallCheckedBinding);
                 // chkDoNotCall.Enabled Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkDoNotCallEnabledBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("!DoNotSolicit", chkDoNotCall, "Enabled");
        chkDoNotCallEnabledBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(chkDoNotCallEnabledBinding);
    
   
            }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void cmdConvertLead_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.ILead entity = (Sage.Entity.Interfaces.ILead) this.BindingSource.Current;
if (entity.IsCompanyNameAssigned()) {
            cmdConvertLead_ClickActionS(sender, e);
      
      }
else {
            cmdConvertLead_ClickActionF(sender, e);
      
      }
}
protected void cmdConvertLead_ClickActionS(object sender, EventArgs e) {
if (DialogService != null) {
	// DialogActionItem
	DialogService.SetSpecs(775, 830, "LeadSearchAndConvert", GetLocalResourceObject("817595f0-8b8a-42cb-9d7a-4462e0bbcfad.DialogTitleOverride").ToString() );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.ILead); 
    DialogService.ShowDialog();
}
}
protected void cmdConvertLead_ClickActionF(object sender, EventArgs e) {
  if (DialogService != null) {
    DialogService.ShowMessage(base.GetLocalResourceObject("db9a6317-7f1e-4220-bac0-681479bab985.Message").ToString(), base.GetLocalResourceObject("db9a6317-7f1e-4220-bac0-681479bab985.Title").ToString());
  }

}
protected void chkDoNotSolicit_ChangeAction(object sender, EventArgs e) {
  Sage.Platform.WebPortal.SmartParts.WebActionEventArgs args = e as Sage.Platform.WebPortal.SmartParts.WebActionEventArgs;
  if (args != null && !string.IsNullOrEmpty(args.PassThroughObject.ToString()) && DialogService != null) {
    DialogService.ShowMessage(args.PassThroughObject.ToString());
  } 

}
protected void chkDoNotEmail_ChangeAction(object sender, EventArgs e) {
  Sage.Platform.WebPortal.SmartParts.WebActionEventArgs args = e as Sage.Platform.WebPortal.SmartParts.WebActionEventArgs;
  if (args != null && !string.IsNullOrEmpty(args.PassThroughObject.ToString()) && DialogService != null) {
    DialogService.ShowMessage(args.PassThroughObject.ToString());
  } 

}
protected void cmdUpdateLead_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ILead>("Lead.ValidateLead", objarray);
          cmdUpdateLead_ClickActionBRC(sender, e);
    
  
}
protected void cmdUpdateLead_ClickActionBRC(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ILead>("Lead.SaveLead", objarray);
  
}
protected void cmdDeleteLead_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ILead>("Lead.SaveLeadHistory", objarray);
          cmdDeleteLead_ClickActionBRC(sender, e);
    
  
}
protected void cmdDeleteLead_ClickActionBRC(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }
          cmdDeleteLead_ClickActionBRCBRC(sender, e);
    
  
}
protected void cmdDeleteLead_ClickActionBRCBRC(object sender, EventArgs e) {
      Response.Redirect("Lead.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 cmdConvertLead.Click += new EventHandler(cmdConvertLead_ClickAction);
chkDoNotSolicit.CheckedChanged += new EventHandler(chkDoNotSolicit_ChangeAction);
chkDoNotEmail.CheckedChanged += new EventHandler(chkDoNotEmail_ChangeAction);
cmdUpdateLead.Click += new ImageClickEventHandler(cmdUpdateLead_ClickAction);
cmdDeleteLead.Click += new ImageClickEventHandler(cmdDeleteLead_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.ILead lead = this.BindingSource.Current as Sage.Entity.Interfaces.ILead;
if (lead != null)
{
	//needed because binding expression do not work on null values.
	if (!lead.DoNotSolicit.HasValue)
    {
        chkDoNotEmail.Enabled = true;
        chkDoNotFax.Enabled = true;
        chkDoNotMail.Enabled = true;
        chkDoNotCall.Enabled = true;    
    }
	
	bool doNotSolicit = System.Convert.ToBoolean(lead.DoNotSolicit);
    bool doNotEmail = System.Convert.ToBoolean(lead.DoNotEmail);
    emlEmail.Enabled = (!doNotSolicit && !doNotEmail);
		
}
}
protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(cmdUpdateLead);

cmdDeleteLead.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("QFButton2.ActionConfirmationMessage").ToString()));

quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new LeadDetailsAdapter(this)); }
}

public class LeadDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ILeadDetails
{
	public LeadDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IPersonNameControl _nmeLeadName;
	public Sage.Platform.Controls.IPersonNameControl nmeLeadName
	{
		get { return FindControl(ref _nmeLeadName, "nmeLeadName"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklTitle;
	public Sage.Platform.Controls.IPickListControl pklTitle
	{
		get { return FindControl(ref _pklTitle, "pklTitle"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtCompany;
	public Sage.Platform.Controls.ITextBoxControl txtCompany
	{
		get { return FindControl(ref _txtCompany, "txtCompany"); }
	}
	private Sage.Platform.Controls.IAddressControl _adrAddress;
	public Sage.Platform.Controls.IAddressControl adrAddress
	{
		get { return FindControl(ref _adrAddress, "adrAddress"); }
	}
	private Sage.Platform.Controls.IUrlControl _urlWeb;
	public Sage.Platform.Controls.IUrlControl urlWeb
	{
		get { return FindControl(ref _urlWeb, "urlWeb"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklIndustry;
	public Sage.Platform.Controls.IPickListControl pklIndustry
	{
		get { return FindControl(ref _pklIndustry, "pklIndustry"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSICCode;
	public Sage.Platform.Controls.ITextBoxControl txtSICCode
	{
		get { return FindControl(ref _txtSICCode, "txtSICCode"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtComments;
	public Sage.Platform.Controls.ITextBoxControl txtComments
	{
		get { return FindControl(ref _txtComments, "txtComments"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotSolicit;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotSolicit
	{
		get { return FindControl(ref _chkDoNotSolicit, "chkDoNotSolicit"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotEmail;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotEmail
	{
		get { return FindControl(ref _chkDoNotEmail, "chkDoNotEmail"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotCall;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotCall
	{
		get { return FindControl(ref _chkDoNotCall, "chkDoNotCall"); }
	}
	private Sage.Platform.Controls.IEmailControl _emlEmail;
	public Sage.Platform.Controls.IEmailControl emlEmail
	{
		get { return FindControl(ref _emlEmail, "emlEmail"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnWorkPhone;
	public Sage.Platform.Controls.IPhoneControl phnWorkPhone
	{
		get { return FindControl(ref _phnWorkPhone, "phnWorkPhone"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnTollFree;
	public Sage.Platform.Controls.IPhoneControl phnTollFree
	{
		get { return FindControl(ref _phnTollFree, "phnTollFree"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtBusinessDescription;
	public Sage.Platform.Controls.ITextBoxControl txtBusinessDescription
	{
		get { return FindControl(ref _txtBusinessDescription, "txtBusinessDescription"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueLeadSource;
	public Sage.Platform.Controls.ILookupControl lueLeadSource
	{
		get { return FindControl(ref _lueLeadSource, "lueLeadSource"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtInterests;
	public Sage.Platform.Controls.ITextBoxControl txtInterests
	{
		get { return FindControl(ref _txtInterests, "txtInterests"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotMail;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotMail
	{
		get { return FindControl(ref _chkDoNotMail, "chkDoNotMail"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkDoNotFax;
	public Sage.Platform.Controls.ICheckBoxControl chkDoNotFax
	{
		get { return FindControl(ref _chkDoNotFax, "chkDoNotFax"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdConvertLead;
	public Sage.Platform.Controls.IButtonControl cmdConvertLead
	{
		get { return FindControl(ref _cmdConvertLead, "cmdConvertLead"); }
	}
	private Sage.Platform.Controls.IGroupNavigatorControl _gpnLeadGroupNavigator;
	public Sage.Platform.Controls.IGroupNavigatorControl gpnLeadGroupNavigator
	{
		get { return FindControl(ref _gpnLeadGroupNavigator, "gpnLeadGroupNavigator"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdUpdateLead;
	public Sage.Platform.Controls.IButtonControl cmdUpdateLead
	{
		get { return FindControl(ref _cmdUpdateLead, "cmdUpdateLead"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdDeleteLead;
	public Sage.Platform.Controls.IButtonControl cmdDeleteLead
	{
		get { return FindControl(ref _cmdDeleteLead, "cmdDeleteLead"); }
	}

}

</script>

<script type="text/javascript">
</script>
