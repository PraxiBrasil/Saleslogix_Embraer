<%@ Control Language="C#" ClassName="InsertLead" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.33333%" />
            <col width="33.33333%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="nmeLeadName_lbl" AssociatedControlID="nmeLeadName" runat="server" Text="<%$ resources: nmeLeadName.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol person"  >
    <SalesLogix:FullName runat="server" ID="nmeLeadName" ButtonToolTip="<%$ resources: nmeLeadName.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="emlEmail_lbl" AssociatedControlID="emlEmail" runat="server" Text="<%$ resources: emlEmail.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol email"  > 
<SalesLogix:Email runat="server" ID="emlEmail" ButtonToolTip="<%$ resources: emlEmail.ButtonToolTip %>" EmailTextBoxStyle-ForeColor="#000099" EmailTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCompany_lbl" AssociatedControlID="txtCompany" runat="server" Text="<%$ resources: txtCompany.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCompany" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnWorkPhone_lbl" AssociatedControlID="phnWorkPhone" runat="server" Text="<%$ resources: phnWorkPhone.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnWorkPhone"
AutoPostBack="true"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="urlWebAddress_lbl" AssociatedControlID="urlWebAddress" runat="server" Text="<%$ resources: urlWebAddress.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol urlcontrol"  > 
    <SalesLogix:URL runat="server" ID="urlWebAddress" ButtonToolTip="<%$ resources: urlWebAddress.ButtonToolTip %>" URLTextBoxStyle-ForeColor="#000099" URLTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="phnTollFree_lbl" AssociatedControlID="phnTollFree" runat="server" Text="<%$ resources: phnTollFree.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol phone"  > 
    <SalesLogix:Phone runat="server" ID="phnTollFree"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <asp:Button runat="server" ID="cmdMatchingRecords"
 Text="<%$ resources: cmdMatchingRecords.Caption %>" CssClass="slxbutton"  />
 
      </td>
                <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkAutoSearch" CssClass="checkbox "
 Text="<%$ resources: chkAutoSearch.Caption %>" AutoPostBack="true"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklTitle_lbl" AssociatedControlID="pklTitle" runat="server" Text="<%$ resources: pklTitle.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklTitle" PickListId="kSYST0000387" PickListName="Title" MustExistInList="false" AlphaSort="true"  />
  </div>

      </td>
                <td rowspan="2"  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtBusinessDescription_lbl" AssociatedControlID="txtBusinessDescription" runat="server" Text="<%$ resources: txtBusinessDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtBusinessDescription" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="3"  >
 <div class=" lbl alignleft">
   <asp:Label ID="adrAddress_lbl" AssociatedControlID="adrAddress" runat="server" Text="<%$ resources: adrAddress.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol address"  >
    <SalesLogix:AddressControl runat="server" ID="adrAddress" AddressDescriptionPickListName="Address Description (Account)" AddressDescriptionPickListId="kSYST0000014" ButtonToolTip="<%$ resources: adrAddress.ButtonToolTip %>" AddressToolTip="<%$ resources: adrAddress.AddressToolTip %>" >
<AddressDescStyle Height="80"></AddressDescStyle> </SalesLogix:AddressControl>
</div>

      </td>
            </tr>
<tr>
                  <td rowspan="2"  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtInterests_lbl" AssociatedControlID="txtInterests" runat="server" Text="<%$ resources: txtInterests.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtInterests" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
      </tr>
<tr>
              </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklIndustry_lbl" AssociatedControlID="pklIndustry" runat="server" Text="<%$ resources: pklIndustry.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklIndustry" PickListId="kSYST0000390" PickListName="Industry" MustExistInList="false" NoneEditable="true" AlphaSort="true"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueLeadSource_lbl" AssociatedControlID="lueLeadSource" runat="server" Text="<%$ resources: lueLeadSource.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueLeadSource" ButtonToolTip="<%$ resources: lueLeadSource.ButtonToolTip %>" LookupEntityName="LeadSource" LookupEntityTypeName="Sage.Entity.Interfaces.ILeadSource, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueLeadSource.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueLeadSource.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueLeadSource.LookupProperties.AbbrevDescription.PropertyHeader %>" PropertyName="AbbrevDescription" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
<SalesLogix:LookupPreFilter PropertyName="Status" PropertyType="System.String" OperatorCode="="
 FilterValue="<%$ resources: lueLeadSource.LUPF.Status %>"
 ></SalesLogix:LookupPreFilter>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSICCode_lbl" AssociatedControlID="txtSICCode" runat="server" Text="<%$ resources: txtSICCode.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSICCode" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ownOwner_lbl" AssociatedControlID="ownOwner" runat="server" Text="<%$ resources: ownOwner.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="ownOwner" ButtonToolTip="<%$ resources: ownOwner.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="3"  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtComments" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
            </tr>
<tr>
              </tr>
<tr>
              </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="InsertLead_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="cmdSave"
 AlternateText="<%$ resources: cmdSave.Caption %>"  ToolTip="<%$ resources: cmdSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdSaveNew"
 AlternateText="<%$ resources: cmdSaveNew.Caption %>"  ToolTip="<%$ resources: cmdSaveNew.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_New16x16"  />
   
  <SalesLogix:PageLink ID="lnkInsertLeadHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="leadadd.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ILead); }
}

 

protected override void OnAddEntityBindings() { 
                    // nmeLeadName.NameFirst Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameFirstBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("FirstName", nmeLeadName, "NameFirst");
        BindingSource.Bindings.Add(nmeLeadNameNameFirstBinding);
                 // nmeLeadName.NameLast Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameLastBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LastName", nmeLeadName, "NameLast");
        nmeLeadNameNameLastBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNameLastBinding);
                 // nmeLeadName.NameMiddle Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameMiddleBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("MiddleName", nmeLeadName, "NameMiddle");
        nmeLeadNameNameMiddleBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNameMiddleBinding);
                 // nmeLeadName.NamePrefix Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNamePrefixBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Prefix", nmeLeadName, "NamePrefix");
        nmeLeadNameNamePrefixBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNamePrefixBinding);
                 // nmeLeadName.NameSuffix Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding nmeLeadNameNameSuffixBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Suffix", nmeLeadName, "NameSuffix");
        nmeLeadNameNameSuffixBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(nmeLeadNameNameSuffixBinding);
                       // emlEmail.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding emlEmailTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Email", emlEmail, "Text");
        BindingSource.Bindings.Add(emlEmailTextBinding);
                       // txtCompany.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCompanyTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Company", txtCompany, "Text");
        BindingSource.Bindings.Add(txtCompanyTextBinding);
                       // phnWorkPhone.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnWorkPhoneTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WorkPhone", phnWorkPhone, "Text");
        BindingSource.Bindings.Add(phnWorkPhoneTextBinding);
                       // urlWebAddress.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding urlWebAddressTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("WebAddress", urlWebAddress, "Text");
        BindingSource.Bindings.Add(urlWebAddressTextBinding);
                       // phnTollFree.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding phnTollFreeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TollFree", phnTollFree, "Text");
        BindingSource.Bindings.Add(phnTollFreeTextBinding);
       
        
                        // pklTitle.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTitlePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Title", pklTitle, "PickListValue");
        BindingSource.Bindings.Add(pklTitlePickListValueBinding);
                       // txtBusinessDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtBusinessDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BusinessDescription", txtBusinessDescription, "Text");
        BindingSource.Bindings.Add(txtBusinessDescriptionTextBinding);
                       // adrAddress.AddressCity Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressCityBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.City", adrAddress, "AddressCity");
        adrAddressAddressCityBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressCityBinding);
                 // adrAddress.AddressCountry Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressCountryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Country", adrAddress, "AddressCountry");
        adrAddressAddressCountryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressCountryBinding);
                 // adrAddress.AddressCounty Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressCountyBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.County", adrAddress, "AddressCounty");
        adrAddressAddressCountyBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressCountyBinding);
                 // adrAddress.AddressDesc1 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDesc1Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address1", adrAddress, "AddressDesc1");
        BindingSource.Bindings.Add(adrAddressAddressDesc1Binding);
                 // adrAddress.AddressDesc2 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDesc2Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address2", adrAddress, "AddressDesc2");
        adrAddressAddressDesc2Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDesc2Binding);
                 // adrAddress.AddressDesc3 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDesc3Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Address3", adrAddress, "AddressDesc3");
        adrAddressAddressDesc3Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDesc3Binding);
                 // adrAddress.AddressDescription Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDescriptionBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Description", adrAddress, "AddressDescription");
        adrAddressAddressDescriptionBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDescriptionBinding);
                 // adrAddress.AddressDisplay Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressDisplayBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.FullAddress", adrAddress, "AddressDisplay");
        adrAddressAddressDisplayBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressDisplayBinding);
                 // adrAddress.AddressIsMailing Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressIsMailingBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsMailing", adrAddress, "AddressIsMailing");
        adrAddressAddressIsMailingBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressIsMailingBinding);
                 // adrAddress.AddressIsPrimary Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressIsPrimaryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.IsPrimary", adrAddress, "AddressIsPrimary");
        adrAddressAddressIsPrimaryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressIsPrimaryBinding);
                 // adrAddress.AddressPostalCode Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressPostalCodeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.PostalCode", adrAddress, "AddressPostalCode");
        adrAddressAddressPostalCodeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressPostalCodeBinding);
                 // adrAddress.AddressSalutation Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressSalutationBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.Salutation", adrAddress, "AddressSalutation");
        adrAddressAddressSalutationBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressSalutationBinding);
                 // adrAddress.AddressState Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding adrAddressAddressStateBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Address.State", adrAddress, "AddressState");
        adrAddressAddressStateBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(adrAddressAddressStateBinding);
                       // txtInterests.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtInterestsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Interests", txtInterests, "Text");
        BindingSource.Bindings.Add(txtInterestsTextBinding);
                       // pklIndustry.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklIndustryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Industry", pklIndustry, "PickListValue");
        BindingSource.Bindings.Add(pklIndustryPickListValueBinding);
                       // lueLeadSource.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueLeadSourceLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource", lueLeadSource, "LookupResultValue");
        BindingSource.Bindings.Add(lueLeadSourceLookupResultValueBinding);
                       // txtSICCode.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSICCodeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SICCode", txtSICCode, "Text");
        BindingSource.Bindings.Add(txtSICCodeTextBinding);
                       // ownOwner.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ownOwnerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", ownOwner, "LookupResultValue");
        BindingSource.Bindings.Add(ownOwnerLookupResultValueBinding);
                       // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Notes", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
    
   
        }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void phnWorkPhone_ChangeAction(object sender, EventArgs e) {
if (chkAutoSearch.Checked)
{
    if (DialogService != null)
    {
        DialogService.SetSpecs(150, 150, 680, 810, "LeadSearchForDuplicates", GetLocalResourceObject("88210646-7333-4492-b080-6227e297ba66.DialogTitleOverride").ToString(), true);
        DialogService.EntityType = typeof (Sage.Entity.Interfaces.ILead);
        DialogService.ShowDialog();
    }
}
}
protected void cmdMatchingRecords_ClickAction(object sender, EventArgs e) {
if (DialogService != null) {
	// DialogActionItem
	DialogService.SetSpecs(775, 830, "LeadSearchForDuplicates", GetLocalResourceObject("88210646-7333-4492-b080-6227e297ba66.DialogTitleOverride").ToString() );
    DialogService.EntityType = typeof(Sage.Entity.Interfaces.ILead); 
    DialogService.ShowDialog();
}
}
protected void chkAutoSearch_ChangeAction(object sender, EventArgs e) {
Sage.SalesLogix.Security.SLXUserService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IUserService>() as Sage.SalesLogix.Security.SLXUserService;
Sage.Platform.Application.Services.IUserOptionsService userOption = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Application.Services.IUserOptionsService>();
userOption.SetCommonOption("AutoSearch", "General", chkAutoSearch.Checked.ToString(), true);
}
protected void cmdSave_ClickAction(object sender, EventArgs e) {
	object leadId = null;
	object[] objarray = new object[] {  this.BindingSource.Current };
	leadId = Sage.Platform.EntityFactory.Execute<Sage.SalesLogix.Entities.Lead>("Lead.SaveLead", objarray);
	if (leadId != null)
	{
		Response.Redirect(string.Format("Lead.aspx?entityId={0}", (leadId.ToString())));
	}
}
protected void cmdSaveNew_ClickAction(object sender, EventArgs e) {
	object[] objarray = new object[] {  this.BindingSource.Current };
	Sage.Platform.EntityFactory.Execute<Sage.SalesLogix.Entities.Lead>("Lead.SaveLead", objarray);
	Response.Redirect("InsertLead.aspx?modeid=Insert");
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 phnWorkPhone.TextChanged += new EventHandler(phnWorkPhone_ChangeAction);
cmdMatchingRecords.Click += new EventHandler(cmdMatchingRecords_ClickAction);
chkAutoSearch.CheckedChanged += new EventHandler(chkAutoSearch_ChangeAction);
cmdSave.Click += new ImageClickEventHandler(cmdSave_ClickAction);
cmdSaveNew.Click += new ImageClickEventHandler(cmdSaveNew_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.SalesLogix.Security.SLXUserService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IUserService>() as Sage.SalesLogix.Security.SLXUserService;
Sage.Platform.Application.Services.IUserOptionsService userOption = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Application.Services.IUserOptionsService>();
string val = userOption.GetCommonOption("AutoSearch", "General");
if ((val == "True") || (val == "T"))
    chkAutoSearch.Checked = true;
else
    chkAutoSearch.Checked = false;


}
protected void quickformload1(object sender, EventArgs e) {
Sage.SalesLogix.Security.SLXUserService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IUserService>() as Sage.SalesLogix.Security.SLXUserService;
Sage.Platform.Application.Services.IUserOptionsService userOption = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Application.Services.IUserOptionsService>();
string val = userOption.GetCommonOption("AutoSearch", "General");
if ((val == "True") || (val == "T"))
    chkAutoSearch.Checked = true;
else
    chkAutoSearch.Checked = false;


}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);
quickformload1(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(cmdSave);

ClientBindingMgr.RegisterSaveButton(cmdSaveNew);



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new InsertLeadAdapter(this)); }
}

public class InsertLeadAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IInsertLead
{
	public InsertLeadAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IPersonNameControl _nmeLeadName;
	public Sage.Platform.Controls.IPersonNameControl nmeLeadName
	{
		get { return FindControl(ref _nmeLeadName, "nmeLeadName"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtCompany;
	public Sage.Platform.Controls.ITextBoxControl txtCompany
	{
		get { return FindControl(ref _txtCompany, "txtCompany"); }
	}
	private Sage.Platform.Controls.IUrlControl _urlWebAddress;
	public Sage.Platform.Controls.IUrlControl urlWebAddress
	{
		get { return FindControl(ref _urlWebAddress, "urlWebAddress"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdMatchingRecords;
	public Sage.Platform.Controls.IButtonControl cmdMatchingRecords
	{
		get { return FindControl(ref _cmdMatchingRecords, "cmdMatchingRecords"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklTitle;
	public Sage.Platform.Controls.IPickListControl pklTitle
	{
		get { return FindControl(ref _pklTitle, "pklTitle"); }
	}
	private Sage.Platform.Controls.IAddressControl _adrAddress;
	public Sage.Platform.Controls.IAddressControl adrAddress
	{
		get { return FindControl(ref _adrAddress, "adrAddress"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklIndustry;
	public Sage.Platform.Controls.IPickListControl pklIndustry
	{
		get { return FindControl(ref _pklIndustry, "pklIndustry"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtSICCode;
	public Sage.Platform.Controls.ITextBoxControl txtSICCode
	{
		get { return FindControl(ref _txtSICCode, "txtSICCode"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtComments;
	public Sage.Platform.Controls.ITextBoxControl txtComments
	{
		get { return FindControl(ref _txtComments, "txtComments"); }
	}
	private Sage.Platform.Controls.IEmailControl _emlEmail;
	public Sage.Platform.Controls.IEmailControl emlEmail
	{
		get { return FindControl(ref _emlEmail, "emlEmail"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnWorkPhone;
	public Sage.Platform.Controls.IPhoneControl phnWorkPhone
	{
		get { return FindControl(ref _phnWorkPhone, "phnWorkPhone"); }
	}
	private Sage.Platform.Controls.IPhoneControl _phnTollFree;
	public Sage.Platform.Controls.IPhoneControl phnTollFree
	{
		get { return FindControl(ref _phnTollFree, "phnTollFree"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkAutoSearch;
	public Sage.Platform.Controls.ICheckBoxControl chkAutoSearch
	{
		get { return FindControl(ref _chkAutoSearch, "chkAutoSearch"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtBusinessDescription;
	public Sage.Platform.Controls.ITextBoxControl txtBusinessDescription
	{
		get { return FindControl(ref _txtBusinessDescription, "txtBusinessDescription"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtInterests;
	public Sage.Platform.Controls.ITextBoxControl txtInterests
	{
		get { return FindControl(ref _txtInterests, "txtInterests"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueLeadSource;
	public Sage.Platform.Controls.ILookupControl lueLeadSource
	{
		get { return FindControl(ref _lueLeadSource, "lueLeadSource"); }
	}
	private Sage.Platform.Controls.IOwnerControl _ownOwner;
	public Sage.Platform.Controls.IOwnerControl ownOwner
	{
		get { return FindControl(ref _ownOwner, "ownOwner"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdSave;
	public Sage.Platform.Controls.IButtonControl cmdSave
	{
		get { return FindControl(ref _cmdSave, "cmdSave"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdSaveNew;
	public Sage.Platform.Controls.IButtonControl cmdSaveNew
	{
		get { return FindControl(ref _cmdSaveNew, "cmdSaveNew"); }
	}

}

</script>

<script type="text/javascript">
</script>
