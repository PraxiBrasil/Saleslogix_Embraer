<%@ Control Language="C#" ClassName="AddEditDefectTask" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="20%" />
            <col width="20%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklActivity_lbl" AssociatedControlID="pklActivity" runat="server" Text="<%$ resources: pklActivity.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklActivity" PickListName="Defect Activity" MustExistInList="false" StorageMode="ID"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtUnits_lbl" AssociatedControlID="txtUnits" runat="server" Text="<%$ resources: txtUnits.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtUnits" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueUser_lbl" AssociatedControlID="lueUser" runat="server" Text="<%$ resources: lueUser.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="lueUser" ButtonToolTip="<%$ resources: lueUser.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtElapsedHours_lbl" AssociatedControlID="txtElapsedHours" runat="server" Text="<%$ resources: txtElapsedHours.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtElapsedHours" ToolTip="<%$ resources: txtElapsedHours.ToolTip %>" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueRateType_lbl" AssociatedControlID="lueRateType" runat="server" Text="<%$ resources: lueRateType.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueRateType" ButtonToolTip="<%$ resources: lueRateType.ButtonToolTip %>" LookupEntityName="DefectActivityRate" LookupEntityTypeName="Sage.Entity.Interfaces.IDefectActivityRate, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRateType.LookupProperties.RateTypeCode.PropertyHeader %>" PropertyName="RateTypeCode" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRateType.LookupProperties.RateTypeDescription.PropertyHeader %>" PropertyName="RateTypeDescription" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRateType.LookupProperties.RateAmount.PropertyHeader %>" PropertyName="RateAmount" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="True"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="curRate_lbl" AssociatedControlID="curRate" runat="server" Text="<%$ resources: curRate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="curRate" ExchangeRateType="BaseRate"
ReadOnly="true"  />
</div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteReceivedDate_lbl" AssociatedControlID="dteReceivedDate" runat="server" Text="<%$ resources: dteReceivedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteReceivedDate" ButtonToolTip="<%$ resources: dteReceivedDate.ButtonToolTip %>" AutoPostBack="true" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="curTotal_lbl" AssociatedControlID="curTotal" runat="server" Text="<%$ resources: curTotal.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol currency"  >
    <SalesLogix:Currency runat="server" ID="curTotal" ExchangeRateType="BaseRate"
ReadOnly="true"  />
</div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteCompletedDate_lbl" AssociatedControlID="dteCompletedDate" runat="server" Text="<%$ resources: dteCompletedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteCompletedDate" ButtonToolTip="<%$ resources: dteCompletedDate.ButtonToolTip %>" AutoPostBack="true" />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  colspan="2" >
<asp:Panel runat="server" ID="ctrlComments" CssClass="controlslist "
>
   <div class="twocollbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtComments" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

   <asp:ImageButton runat="server" ID="cmdDateStampComments"
 ToolTip="<%$ resources: cmdDateStampComments.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=User_Date_Stamp_16x16"  />
 
</asp:Panel>
      </td>
            </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td></td>
                <td  >
<asp:Panel runat="server" ID="ctrlButtons" CssClass="controlslist qfActionContainer"
>
   <asp:Button runat="server" ID="cmdOK"
 Text="<%$ resources: cmdOK.Caption %>" CssClass="slxbutton"  />
   
   <asp:Button runat="server" ID="cmdCancel"
 Text="<%$ resources: cmdCancel.Caption %>" CssClass="slxbutton"  />
 
</asp:Panel>
      </td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditDefectTask_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkAddEditDefectTaskHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="defecttaskinfoboxes.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IDefectActivityItem); }
}

 

protected override void OnAddEntityBindings() { 
                    // pklActivity.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklActivityPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectActivityCode", pklActivity, "PickListValue");
        BindingSource.Bindings.Add(pklActivityPickListValueBinding);
                       // txtUnits.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtUnitsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Units", txtUnits, "Text");
        BindingSource.Bindings.Add(txtUnitsTextBinding);
                       // lueUser.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueUserLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("User", lueUser, "LookupResultValue");
        BindingSource.Bindings.Add(lueUserLookupResultValueBinding);
                       // txtElapsedHours.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtElapsedHoursTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ElapsedUnits", txtElapsedHours, "Text", "{0:f}", "");
        BindingSource.Bindings.Add(txtElapsedHoursTextBinding);
                       // lueRateType.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueRateTypeLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DefectActivityRate", lueRateType, "LookupResultValue");
        BindingSource.Bindings.Add(lueRateTypeLookupResultValueBinding);
                       // curRate.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curRateTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Rate", curRate, "Text");
        BindingSource.Bindings.Add(curRateTextBinding);
                       // dteReceivedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteReceivedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PerformedDate", dteReceivedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteReceivedDateDateTimeValueBinding);
                       // curTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TotalRate", curTotal, "Text");
        BindingSource.Bindings.Add(curTotalTextBinding);
                       // dteCompletedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteCompletedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CompletedDate", dteCompletedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteCompletedDateDateTimeValueBinding);
       
        
                        // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Notes", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
       
        
        
        
        
     
   
}
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void lueRateType_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IDefectActivityItem>("DefectActivityItem.DoDefectActivityCalculations", objarray);
  
}
protected void dteReceivedDate_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IDefectActivityItem>("DefectActivityItem.DoDefectActivityCalculations", objarray);
  
}
protected void dteCompletedDate_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IDefectActivityItem>("DefectActivityItem.DoDefectActivityCalculations", objarray);
  
}
protected void cmdDateStampComments_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IDefectActivityItem>("DefectActivityItem.AddDefectActivityNotesTimeStamp", objarray);
  
}
protected void cmdOK_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IDefectActivityItem _entity = BindingSource.Current as Sage.Entity.Interfaces.IDefectActivityItem;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueRateType.LookupResultValueChanged += new EventHandler(lueRateType_ChangeAction);
dteReceivedDate.DateTimeValueChanged += new EventHandler(dteReceivedDate_ChangeAction);
dteCompletedDate.DateTimeValueChanged += new EventHandler(dteCompletedDate_ChangeAction);
cmdDateStampComments.Click += new ImageClickEventHandler(cmdDateStampComments_ClickAction);
cmdOK.Click += new EventHandler(cmdOK_ClickAction);
cmdOK.Click += new EventHandler(DialogService.CloseEventHappened);
cmdOK.Click += new EventHandler(Refresh);
cmdCancel.Click += new EventHandler(DialogService.CloseEventHappened);


}

protected override void OnFormBound()
{
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterSaveButton(cmdOK);

ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new AddEditDefectTaskAdapter(this)); }
}

public class AddEditDefectTaskAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditDefectTask
{
	public AddEditDefectTaskAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IPickListControl _pklActivity;
	public Sage.Platform.Controls.IPickListControl pklActivity
	{
		get { return FindControl(ref _pklActivity, "pklActivity"); }
	}
	private Sage.Platform.Controls.IUserControl _lueUser;
	public Sage.Platform.Controls.IUserControl lueUser
	{
		get { return FindControl(ref _lueUser, "lueUser"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueRateType;
	public Sage.Platform.Controls.ILookupControl lueRateType
	{
		get { return FindControl(ref _lueRateType, "lueRateType"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dteReceivedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dteReceivedDate
	{
		get { return FindControl(ref _dteReceivedDate, "dteReceivedDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dteCompletedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dteCompletedDate
	{
		get { return FindControl(ref _dteCompletedDate, "dteCompletedDate"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlComments;
	public Sage.Platform.Controls.IControlsListControl ctrlComments
	{
		get { return FindControl(ref _ctrlComments, "ctrlComments"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtComments;
	public Sage.Platform.Controls.ITextBoxControl txtComments
	{
		get { return FindControl(ref _txtComments, "txtComments"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdDateStampComments;
	public Sage.Platform.Controls.IButtonControl cmdDateStampComments
	{
		get { return FindControl(ref _cmdDateStampComments, "cmdDateStampComments"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtUnits;
	public Sage.Platform.Controls.ITextBoxControl txtUnits
	{
		get { return FindControl(ref _txtUnits, "txtUnits"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtElapsedHours;
	public Sage.Platform.Controls.ITextBoxControl txtElapsedHours
	{
		get { return FindControl(ref _txtElapsedHours, "txtElapsedHours"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _curRate;
	public Sage.Platform.Controls.ICurrencyControl curRate
	{
		get { return FindControl(ref _curRate, "curRate"); }
	}
	private Sage.Platform.Controls.ICurrencyControl _curTotal;
	public Sage.Platform.Controls.ICurrencyControl curTotal
	{
		get { return FindControl(ref _curTotal, "curTotal"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlButtons;
	public Sage.Platform.Controls.IControlsListControl ctrlButtons
	{
		get { return FindControl(ref _ctrlButtons, "ctrlButtons"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdOK;
	public Sage.Platform.Controls.IButtonControl cmdOK
	{
		get { return FindControl(ref _cmdOK, "cmdOK"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdCancel;
	public Sage.Platform.Controls.IButtonControl cmdCancel
	{
		get { return FindControl(ref _cmdCancel, "cmdCancel"); }
	}

}

</script>

<script type="text/javascript">
</script>
