<%@ Control Language="C#" ClassName="ReturnDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.3%" />
            <col width="33.3%" />
            <col width="33.3%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtReturnId_lbl" AssociatedControlID="txtReturnId" runat="server" Text="<%$ resources: txtReturnId.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtReturnId" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklStatus_lbl" AssociatedControlID="pklStatus" runat="server" Text="<%$ resources: pklStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklStatus" PickListName="Return Status" AutoPostBack="true" MustExistInList="false"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="luTicketId_lbl" AssociatedControlID="luTicketId" runat="server" Text="<%$ resources: luTicketId.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="luTicketId" ButtonToolTip="<%$ resources: luTicketId.ButtonToolTip %>" LookupEntityName="Ticket" LookupEntityTypeName="Sage.Entity.Interfaces.ITicket, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" EnableHyperLinking="true" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.TicketNumber.PropertyHeader %>" PropertyName="TicketNumber" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.Contact.NameLF.PropertyHeader %>" PropertyName="Contact.NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.Contact.WorkPhone.PropertyHeader %>" PropertyName="Contact.WorkPhone" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.StatusCode.PropertyHeader %>" PropertyName="StatusCode" PropertyType="SalesLogix.PickList" PropertyFormat="PickList"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.Urgency.Description.PropertyHeader %>" PropertyName="Urgency.Description" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luTicketId.LookupProperties.Area.PropertyHeader %>" PropertyName="Area" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklType_lbl" AssociatedControlID="pklType" runat="server" Text="<%$ resources: pklType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklType" PickListName="Return Type" MustExistInList="false"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="luAccount_lbl" AssociatedControlID="luAccount" runat="server" Text="<%$ resources: luAccount.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="luAccount" ButtonToolTip="<%$ resources: luAccount.ButtonToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="Account" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" EnableHyperLinking="true"  >
<LookupProperties>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklPriority_lbl" AssociatedControlID="pklPriority" runat="server" Text="<%$ resources: pklPriority.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklPriority" PickListName="Return Priority" MustExistInList="false"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="luContact_lbl" AssociatedControlID="luContact" runat="server" Text="<%$ resources: luContact.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="luContact" ButtonToolTip="<%$ resources: luContact.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luContact.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luContact.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luContact.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luContact.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luContact.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luContact.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpExpectedBy_lbl" AssociatedControlID="dtpExpectedBy" runat="server" Text="<%$ resources: dtpExpectedBy.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpExpectedBy" ButtonToolTip="<%$ resources: dtpExpectedBy.ButtonToolTip %>" DisplayTime="false" Timeless="true" />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtReason_lbl" AssociatedControlID="txtReason" runat="server" Text="<%$ resources: txtReason.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtReason" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ownAssignedTo_lbl" AssociatedControlID="ownAssignedTo" runat="server" Text="<%$ resources: ownAssignedTo.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="ownAssignedTo" ButtonToolTip="<%$ resources: ownAssignedTo.ButtonToolTip %>" AutoPostBack="true" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpAssignedTo" ButtonToolTip="<%$ resources: dtpAssignedTo.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtPO_lbl" AssociatedControlID="txtPO" runat="server" Text="<%$ resources: txtPO.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtPO" Rows="1"
 />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="userCreatedBy_lbl" AssociatedControlID="userCreatedBy" runat="server" Text="<%$ resources: userCreatedBy.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="userCreatedBy" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: userCreatedBy.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpCreateDate" ReadOnly="true" />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ownerClosedBy_lbl" AssociatedControlID="ownerClosedBy" runat="server" Text="<%$ resources: ownerClosedBy.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol owner"  > 
<SalesLogix:OwnerControl runat="server" ID="ownerClosedBy" ButtonToolTip="<%$ resources: ownerClosedBy.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpCloseDate" ButtonToolTip="<%$ resources: dtpCloseDate.ButtonToolTip %>" />
  </div>

      </td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="ReturnDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="QFSLXGroupNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSave"
 AlternateText="<%$ resources: btnSave.Caption %>"  ToolTip="<%$ resources: btnSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="btnDelete"
 AlternateText="<%$ resources: btnDelete.Caption %>"  ToolTip="<%$ resources: btnDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="lnkReturnDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="returndetailview.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IReturn); }
}

 

protected override void OnAddEntityBindings() { 
                    // txtReturnId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtReturnIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ReturnNumber", txtReturnId, "Text");
        BindingSource.Bindings.Add(txtReturnIdTextBinding);
                       // pklStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", pklStatus, "PickListValue");
        BindingSource.Bindings.Add(pklStatusPickListValueBinding);
                       // luTicketId.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luTicketIdLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Ticket", luTicketId, "LookupResultValue");
        BindingSource.Bindings.Add(luTicketIdLookupResultValueBinding);
                       // pklType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ReturnType", pklType, "PickListValue");
        BindingSource.Bindings.Add(pklTypePickListValueBinding);
                       // luAccount.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luAccountLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account", luAccount, "LookupResultValue");
        BindingSource.Bindings.Add(luAccountLookupResultValueBinding);
                       // pklPriority.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklPriorityPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Priority", pklPriority, "PickListValue");
        BindingSource.Bindings.Add(pklPriorityPickListValueBinding);
                       // luContact.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luContactLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ReturnedBy", luContact, "LookupResultValue");
        BindingSource.Bindings.Add(luContactLookupResultValueBinding);
                 // luContact.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luContactSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", luContact, "SeedValue");
        luContactSeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(luContactSeedValueBinding);
                       // dtpExpectedBy.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpExpectedByDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ExpectedDate", dtpExpectedBy, "DateTimeValue");
        BindingSource.Bindings.Add(dtpExpectedByDateTimeValueBinding);
                       // txtReason.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtReasonTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Reason", txtReason, "Text");
        BindingSource.Bindings.Add(txtReasonTextBinding);
                       // ownAssignedTo.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ownAssignedToLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssignedTo", ownAssignedTo, "LookupResultValue");
        BindingSource.Bindings.Add(ownAssignedToLookupResultValueBinding);
                       // dtpAssignedTo.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpAssignedToDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AssignedDate", dtpAssignedTo, "DateTimeValue");
        BindingSource.Bindings.Add(dtpAssignedToDateTimeValueBinding);
                       // txtPO.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtPOTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CustomerPO", txtPO, "Text");
        BindingSource.Bindings.Add(txtPOTextBinding);
                       // userCreatedBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding userCreatedByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateUser", userCreatedBy, "LookupResultValue");
        BindingSource.Bindings.Add(userCreatedByLookupResultValueBinding);
                       // dtpCreateDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpCreateDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", dtpCreateDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpCreateDateDateTimeValueBinding);
                       // ownerClosedBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ownerClosedByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedBy", ownerClosedBy, "LookupResultValue");
        BindingSource.Bindings.Add(ownerClosedByLookupResultValueBinding);
                       // dtpCloseDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpCloseDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedDate", dtpCloseDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpCloseDateDateTimeValueBinding);
    
   
            }
	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   	   
protected void pklStatus_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IReturn>("Return.OnSetStatus", objarray);
  
}
protected void luTicketId_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IReturn>("Return.OnAssociateTicket", objarray);
  
}
protected void ownAssignedTo_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IReturn>("Return.OnSetAssignedTo", objarray);
  
}
protected void btnSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IReturn _entity = BindingSource.Current as Sage.Entity.Interfaces.IReturn;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
  
}
protected void btnDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }
          btnDelete_ClickActionBRC(sender, e);
    
  
}
protected void btnDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("Return.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 pklStatus.PickListValueChanged += new EventHandler(pklStatus_ChangeAction);
luTicketId.LookupResultValueChanged += new EventHandler(luTicketId_ChangeAction);
ownAssignedTo.LookupResultValueChanged += new EventHandler(ownAssignedTo_ChangeAction);
btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
btnDelete.Click += new ImageClickEventHandler(btnDelete_ClickAction);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSave);

btnDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("btnDelete.ActionConfirmationMessage").ToString()));



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new ReturnDetailsAdapter(this)); }
}

public class ReturnDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IReturnDetails
{
	public ReturnDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ITextBoxControl _txtReturnId;
	public Sage.Platform.Controls.ITextBoxControl txtReturnId
	{
		get { return FindControl(ref _txtReturnId, "txtReturnId"); }
	}
	private Sage.Platform.Controls.ILookupControl _luTicketId;
	public Sage.Platform.Controls.ILookupControl luTicketId
	{
		get { return FindControl(ref _luTicketId, "luTicketId"); }
	}
	private Sage.Platform.Controls.ILookupControl _luAccount;
	public Sage.Platform.Controls.ILookupControl luAccount
	{
		get { return FindControl(ref _luAccount, "luAccount"); }
	}
	private Sage.Platform.Controls.ILookupControl _luContact;
	public Sage.Platform.Controls.ILookupControl luContact
	{
		get { return FindControl(ref _luContact, "luContact"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtReason;
	public Sage.Platform.Controls.ITextBoxControl txtReason
	{
		get { return FindControl(ref _txtReason, "txtReason"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtPO;
	public Sage.Platform.Controls.ITextBoxControl txtPO
	{
		get { return FindControl(ref _txtPO, "txtPO"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklStatus;
	public Sage.Platform.Controls.IPickListControl pklStatus
	{
		get { return FindControl(ref _pklStatus, "pklStatus"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklType;
	public Sage.Platform.Controls.IPickListControl pklType
	{
		get { return FindControl(ref _pklType, "pklType"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklPriority;
	public Sage.Platform.Controls.IPickListControl pklPriority
	{
		get { return FindControl(ref _pklPriority, "pklPriority"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpExpectedBy;
	public Sage.Platform.Controls.IDateTimePickerControl dtpExpectedBy
	{
		get { return FindControl(ref _dtpExpectedBy, "dtpExpectedBy"); }
	}
	private Sage.Platform.Controls.IOwnerControl _ownAssignedTo;
	public Sage.Platform.Controls.IOwnerControl ownAssignedTo
	{
		get { return FindControl(ref _ownAssignedTo, "ownAssignedTo"); }
	}
	private Sage.Platform.Controls.IUserControl _userCreatedBy;
	public Sage.Platform.Controls.IUserControl userCreatedBy
	{
		get { return FindControl(ref _userCreatedBy, "userCreatedBy"); }
	}
	private Sage.Platform.Controls.IOwnerControl _ownerClosedBy;
	public Sage.Platform.Controls.IOwnerControl ownerClosedBy
	{
		get { return FindControl(ref _ownerClosedBy, "ownerClosedBy"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpAssignedTo;
	public Sage.Platform.Controls.IDateTimePickerControl dtpAssignedTo
	{
		get { return FindControl(ref _dtpAssignedTo, "dtpAssignedTo"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpCreateDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpCreateDate
	{
		get { return FindControl(ref _dtpCreateDate, "dtpCreateDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpCloseDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpCloseDate
	{
		get { return FindControl(ref _dtpCloseDate, "dtpCloseDate"); }
	}
	private Sage.Platform.Controls.IGroupNavigatorControl _QFSLXGroupNavigator;
	public Sage.Platform.Controls.IGroupNavigatorControl QFSLXGroupNavigator
	{
		get { return FindControl(ref _QFSLXGroupNavigator, "QFSLXGroupNavigator"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnSave;
	public Sage.Platform.Controls.IButtonControl btnSave
	{
		get { return FindControl(ref _btnSave, "btnSave"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnDelete;
	public Sage.Platform.Controls.IButtonControl btnDelete
	{
		get { return FindControl(ref _btnDelete, "btnDelete"); }
	}

}

</script>

<script type="text/javascript">
</script>
