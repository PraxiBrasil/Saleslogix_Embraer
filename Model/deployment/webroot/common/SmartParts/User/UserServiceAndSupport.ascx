<%@ Control Language="C#" ClassName="UserServiceAndSupport" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
     <tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkbxAvailableCalls" CssClass="checkbox "
 Text="<%$ resources: chkbxAvailableCalls.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkbxNotifyNewTicket" CssClass="checkbox "
 Text="<%$ resources: chkbxNotifyNewTicket.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkbxPortalAccess" CssClass="checkbox "
 Text="<%$ resources: chkbxPortalAccess.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkbxApproveSpeedSearch" CssClass="checkbox "
 Text="<%$ resources: chkbxApproveSpeedSearch.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkbxSpeedSearchSubmissions" CssClass="checkbox "
 Text="<%$ resources: chkbxSpeedSearchSubmissions.Caption %>" Enabled="false"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkbox">
  <SalesLogix:SLXCheckBox runat="server" ID="chkbxNotifyNewDefect" CssClass="checkbox "
 Text="<%$ resources: chkbxNotifyNewDefect.Caption %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="ctrlstTicketPrefix" CssClass="controlslist "
>
   <div class=" lbl alignleft" >
   <asp:Label ID="txtTicketPrefix_lbl" AssociatedControlID="txtTicketPrefix" runat="server" Text="<%$ resources: txtTicketPrefix.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtTicketPrefix" Enabled="false" ReadOnly="true" Rows="1"
 />
  </div>

</asp:Panel>
      </td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="UserServiceAndSupport_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="btnSave"
 ToolTip="<%$ resources: btnSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="lnkUserServiceAndSupportHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="User_Detail_View_Service_Support_Tab" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IUser); }
}

 

protected override void OnAddEntityBindings() { 
                    // chkbxAvailableCalls.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxAvailableCallsCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserInfo.Available", chkbxAvailableCalls, "Checked");
        BindingSource.Bindings.Add(chkbxAvailableCallsCheckedBinding);
                       // chkbxNotifyNewTicket.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxNotifyNewTicketCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserInfo.TicketNotify", chkbxNotifyNewTicket, "Checked");
        BindingSource.Bindings.Add(chkbxNotifyNewTicketCheckedBinding);
                       // chkbxPortalAccess.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxPortalAccessCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("IsWebAdmin", chkbxPortalAccess, "Checked");
        BindingSource.Bindings.Add(chkbxPortalAccessCheckedBinding);
                       // chkbxApproveSpeedSearch.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxApproveSpeedSearchCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserInfo.DefaultAddKnowledge", chkbxApproveSpeedSearch, "Checked");
        BindingSource.Bindings.Add(chkbxApproveSpeedSearchCheckedBinding);
                       // chkbxSpeedSearchSubmissions.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxSpeedSearchSubmissionsCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserInfo.SpeedSearchApproval", chkbxSpeedSearchSubmissions, "Checked");
        BindingSource.Bindings.Add(chkbxSpeedSearchSubmissionsCheckedBinding);
                       // chkbxNotifyNewDefect.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxNotifyNewDefectCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserInfo.DefectNotify", chkbxNotifyNewDefect, "Checked");
        BindingSource.Bindings.Add(chkbxNotifyNewDefectCheckedBinding);
       
        
     
   
    }
	   	   	   	   	   	   	   	   
protected void btnSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IUser _entity = BindingSource.Current as Sage.Entity.Interfaces.IUser;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("UserServiceAndSupport.OnLoad", methodArgs);
}
protected override void OnFormBound()
{
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterSaveButton(btnSave);

quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	if (BindingSource != null)
	{
		if (BindingSource.Current != null)
		{
			tinfo.Description = BindingSource.Current.ToString();
			tinfo.Title = BindingSource.Current.ToString();
		}
	}
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new UserServiceAndSupportAdapter(this)); }
}

public class UserServiceAndSupportAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IUserServiceAndSupport
{
	public UserServiceAndSupportAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ICheckBoxControl _chkbxAvailableCalls;
	public Sage.Platform.Controls.ICheckBoxControl chkbxAvailableCalls
	{
		get { return FindControl(ref _chkbxAvailableCalls, "chkbxAvailableCalls"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkbxNotifyNewTicket;
	public Sage.Platform.Controls.ICheckBoxControl chkbxNotifyNewTicket
	{
		get { return FindControl(ref _chkbxNotifyNewTicket, "chkbxNotifyNewTicket"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkbxPortalAccess;
	public Sage.Platform.Controls.ICheckBoxControl chkbxPortalAccess
	{
		get { return FindControl(ref _chkbxPortalAccess, "chkbxPortalAccess"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkbxApproveSpeedSearch;
	public Sage.Platform.Controls.ICheckBoxControl chkbxApproveSpeedSearch
	{
		get { return FindControl(ref _chkbxApproveSpeedSearch, "chkbxApproveSpeedSearch"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkbxSpeedSearchSubmissions;
	public Sage.Platform.Controls.ICheckBoxControl chkbxSpeedSearchSubmissions
	{
		get { return FindControl(ref _chkbxSpeedSearchSubmissions, "chkbxSpeedSearchSubmissions"); }
	}
	private Sage.Platform.Controls.ICheckBoxControl _chkbxNotifyNewDefect;
	public Sage.Platform.Controls.ICheckBoxControl chkbxNotifyNewDefect
	{
		get { return FindControl(ref _chkbxNotifyNewDefect, "chkbxNotifyNewDefect"); }
	}
	private Sage.Platform.Controls.IControlsListControl _ctrlstTicketPrefix;
	public Sage.Platform.Controls.IControlsListControl ctrlstTicketPrefix
	{
		get { return FindControl(ref _ctrlstTicketPrefix, "ctrlstTicketPrefix"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtTicketPrefix;
	public Sage.Platform.Controls.ITextBoxControl txtTicketPrefix
	{
		get { return FindControl(ref _txtTicketPrefix, "txtTicketPrefix"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnSave;
	public Sage.Platform.Controls.IButtonControl btnSave
	{
		get { return FindControl(ref _btnSave, "btnSave"); }
	}

	public void OnLoad(System.EventArgs e)
	{
		Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
		Object[] methodArgs = new Object[] { this, e };
		lib.Execute("UserServiceAndSupport.OnLoad", methodArgs);
	}
}

</script>

<script type="text/javascript">
</script>
