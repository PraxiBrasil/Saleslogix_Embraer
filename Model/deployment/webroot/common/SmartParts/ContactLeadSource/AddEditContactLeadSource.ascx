<%@ Control Language="C#" ClassName="AddEditContactLeadSource" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33.33333%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueDescription_lbl" AssociatedControlID="lueDescription" runat="server" Text="<%$ resources: lueDescription.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueDescription" ButtonToolTip="<%$ resources: lueDescription.ButtonToolTip %>" LookupEntityName="LeadSource" LookupEntityTypeName="Sage.Entity.Interfaces.ILeadSource, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueDescription.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueDescription.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueDescription.LookupProperties.AbbrevDescription.PropertyHeader %>" PropertyName="AbbrevDescription" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
<SalesLogix:LookupPreFilter PropertyName="Status" PropertyType="System.String" OperatorCode="="
 FilterValue="<%$ resources: lueDescription.LUPF.Status %>"
 ></SalesLogix:LookupPreFilter>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="LeadDate_lbl" AssociatedControlID="LeadDate" runat="server" Text="<%$ resources: LeadDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="LeadDate" ButtonToolTip="<%$ resources: LeadDate.ButtonToolTip %>" DisplayTime="false" Timeless="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="AbbrevDescription_lbl" AssociatedControlID="AbbrevDescription" runat="server" Text="<%$ resources: AbbrevDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="AbbrevDescription" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="SourceDate_lbl" AssociatedControlID="SourceDate" runat="server" Text="<%$ resources: SourceDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="SourceDate" ReadOnly="true" ButtonToolTip="<%$ resources: SourceDate.ButtonToolTip %>" DisplayTime="false" Timeless="true" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Type_lbl" AssociatedControlID="Type" runat="server" Text="<%$ resources: Type.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Type" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Status_lbl" AssociatedControlID="Status" runat="server" Text="<%$ resources: Status.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Status" ReadOnly="true" Rows="1"
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="actionContainer" CssClass="controlslist qfActionContainer"
>
   <asp:Button runat="server" ID="okButton"
 Text="<%$ resources: okButton.Caption %>" CssClass="slxbutton"  />
 
   <asp:Button runat="server" ID="cancelButton"
 Text="<%$ resources: cancelButton.Caption %>" CssClass="slxbutton"  />
 
</asp:Panel>
      </td>
      </tr>
<tr>
            <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditContactLeadSource_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkAddEditContactLeadSourceHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="leadsourceinfo.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IContactLeadSource); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityBindingSource _contactDataSource;
public Sage.Platform.WebPortal.Binding.WebEntityBindingSource contactDataSource
{ 
  get 
  {
    if (_contactDataSource == null)
    {
             _contactDataSource = new Sage.Platform.WebPortal.Binding.WebEntityBindingSource(typeof(Sage.Entity.Interfaces.IContact),
	    EntityType              );       	   	}
 	return _contactDataSource;
  }
}

void contactDataSource_OnCurrentEntitySet(object sender, EventArgs e) 
{
    Sage.Entity.Interfaces.IContact _entity = GetParentEntity() as Sage.Entity.Interfaces.IContact;
    if (_entity != null) {
        contactDataSource.Current = _entity;
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(contactDataSource);
   }
}

 



 

protected override void OnAddEntityBindings() { 
                    // lueDescription.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueDescriptionLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource", lueDescription, "LookupResultValue");
        BindingSource.Bindings.Add(lueDescriptionLookupResultValueBinding);
                       // LeadDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding LeadDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadDate", LeadDate, "DateTimeValue");
        BindingSource.Bindings.Add(LeadDateDateTimeValueBinding);
                       // AbbrevDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding AbbrevDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource.AbbrevDescription", AbbrevDescription, "Text");
        BindingSource.Bindings.Add(AbbrevDescriptionTextBinding);
                       // SourceDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding SourceDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource.SourceDate", SourceDate, "DateTimeValue");
        BindingSource.Bindings.Add(SourceDateDateTimeValueBinding);
                       // Type.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TypeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource.Type", Type, "Text");
        BindingSource.Bindings.Add(TypeTextBinding);
                       // Status.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StatusTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LeadSource.Status", Status, "Text");
        BindingSource.Bindings.Add(StatusTextBinding);
       
        
        
     
     BindingSource.OnCurrentEntitySet += new EventHandler(contactDataSource_OnCurrentEntitySet);
     
}
	   	   	   	   	   	   	   	   	   
protected void okButton_ClickAction(object sender, EventArgs e) {
                                        object[] objarray = new object[] {   contactDataSource.Current, this.BindingSource.Current };
         Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContactLeadSource>("Contact.SaveContactLeadSource", objarray);
          okButton_ClickActionBRC(sender, e);
    
  
}
protected void okButton_ClickActionBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 okButton.Click += new EventHandler(okButton_ClickAction);
okButton.Click += new EventHandler(DialogService.CloseEventHappened);
okButton.Click += new EventHandler(Refresh);
cancelButton.Click += new EventHandler(DialogService.CloseEventHappened);


}

protected void quickformload0(object sender, EventArgs e) {
lueDescription.Enabled = EntityContext.EntityID.ToString().ToUpper().Equals("INSERT");
}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
contactDataSource.Bind();

ClientBindingMgr.RegisterDialogCancelButton(cancelButton);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new AddEditContactLeadSourceAdapter(this)); }
}

public class AddEditContactLeadSourceAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditContactLeadSource
{
	public AddEditContactLeadSourceAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ILookupControl _lueDescription;
	public Sage.Platform.Controls.ILookupControl lueDescription
	{
		get { return FindControl(ref _lueDescription, "lueDescription"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _LeadDate;
	public Sage.Platform.Controls.IDateTimePickerControl LeadDate
	{
		get { return FindControl(ref _LeadDate, "LeadDate"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _AbbrevDescription;
	public Sage.Platform.Controls.ITextBoxControl AbbrevDescription
	{
		get { return FindControl(ref _AbbrevDescription, "AbbrevDescription"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _SourceDate;
	public Sage.Platform.Controls.IDateTimePickerControl SourceDate
	{
		get { return FindControl(ref _SourceDate, "SourceDate"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Type;
	public Sage.Platform.Controls.ITextBoxControl Type
	{
		get { return FindControl(ref _Type, "Type"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _Status;
	public Sage.Platform.Controls.ITextBoxControl Status
	{
		get { return FindControl(ref _Status, "Status"); }
	}
	private Sage.Platform.Controls.IControlsListControl _actionContainer;
	public Sage.Platform.Controls.IControlsListControl actionContainer
	{
		get { return FindControl(ref _actionContainer, "actionContainer"); }
	}
	private Sage.Platform.Controls.IButtonControl _okButton;
	public Sage.Platform.Controls.IButtonControl okButton
	{
		get { return FindControl(ref _okButton, "okButton"); }
	}
	private Sage.Platform.Controls.IButtonControl _cancelButton;
	public Sage.Platform.Controls.IButtonControl cancelButton
	{
		get { return FindControl(ref _cancelButton, "cancelButton"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _contactDataSource;
	public Sage.Platform.Controls.IDataSourceControl contactDataSource
	{
		get { return FindControl(ref _contactDataSource, "contactDataSource"); }
	}

}

</script>

<script type="text/javascript">
</script>
