<%@ Control Language="C#" ClassName="CampaignOpportunities" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdOpportunities" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdOpportunitiespage_changing" EmptyTableRowText="<%$ resources: grdOpportunities.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  OnRowCommand="grdOpportunities_RowCommand" 
 DataKeyNames="InstanceId,Id" 
 AllowSorting="true" OnSorting="grdOpportunities_Sorting"  OnRowDeleting="grdOpportunities_RowDeleting" OnRowDataBound="grdOpportunities_RowDataBound"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.595f2258-87ad-4822-b7a9-fd38db907be3.ColumnHeading %>"       SortExpression="Opportunity.Description"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Opportunity"
   EntityId='<%# dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.Id") %>'     Text='<%# dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.Description") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.b76981af-e49f-4e35-9268-f712a7fbd845.ColumnHeading %>"       SortExpression="Opportunity.Account.AccountName"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Account"
   EntityId='<%# dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.Account.Id") %>'     Text='<%# dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.Account.AccountName") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.e067e559-5bf8-4fec-81ed-b6988f8588ae.ColumnHeading %>"       SortExpression="Opportunity.EstimatedClose"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdOpportunitiescol3" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.EstimatedClose")  %>' Timeless="true"  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.d507af09-d4f7-4893-9005-fc0a0abdb2cb.ColumnHeading %>"       SortExpression="Opportunity.SalesPotential"  >
    <itemtemplate>
 <SalesLogix:Currency runat="server" ID="grdOpportunitiescol4" DisplayMode="AsText"  ExchangeRateType="BaseRate"   Text='<%#  dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.SalesPotential")  %>' CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="Opportunity.CloseProbability" 
      HeaderText="<%$ resources: grdOpportunities.f3d51175-0a63-4dab-90fa-1e189e2bdb38.ColumnHeading %>"       SortExpression="Opportunity.CloseProbability"    >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.7c6159d0-d0f6-4762-9747-45545be780fe.ColumnHeading %>"       SortExpression="Opportunity.Weighted"  >
    <itemtemplate>
 <SalesLogix:Currency runat="server" ID="grdOpportunitiescol6" DisplayMode="AsText"  ExchangeRateType="BaseRate"   Text='<%#  dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.Weighted")  %>' CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="Opportunity.Status" 
      HeaderText="<%$ resources: grdOpportunities.bdc8c722-33f0-4ac2-8af9-d7cf67f679f4.ColumnHeading %>"       SortExpression="Opportunity.Status"    >
      </asp:BoundField>
    <asp:BoundField DataField="Opportunity.AccountManager.UserInfo.UserName" 
      HeaderText="<%$ resources: grdOpportunities.5cd4c330-0f9f-4aec-b2d5-691a1a4a410b.ColumnHeading %>"       SortExpression="Opportunity.AccountManager.UserInfo.UserName"    >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdOpportunities.e31d83ec-9d47-47ea-91d4-d6889000120c.ColumnHeading %>"       SortExpression="Opportunity.ModifyDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdOpportunitiescol9" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dtsOpportunities.getPropertyValue(Container.DataItem, "Opportunity.ModifyDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
   <asp:ButtonField CommandName="Delete" 
  Text="<%$ resources: grdOpportunities.abd48f2a-c43a-4369-a863-aa4963e4be44.Text %>"                >
  	    </asp:ButtonField>
   </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">

                              private int _grdOpportunitiesdeleteColumnIndex = -2;
protected int grdOpportunitiesDeleteColumnIndex
{
	get
	{
		if (_grdOpportunitiesdeleteColumnIndex == -2)
		{
			int bias = (grdOpportunities.ExpandableRows) ? 1 : 0;
			_grdOpportunitiesdeleteColumnIndex = -1;
			int colcount = 0;
			foreach (DataControlField col in grdOpportunities.Columns)
			{
				ButtonField btn = col as ButtonField;
				if (btn != null)
				{
					if (btn.CommandName == "Delete")
					{
						_grdOpportunitiesdeleteColumnIndex = colcount + bias;
						break;
					}
				}
				colcount++;
			}
		}
		return _grdOpportunitiesdeleteColumnIndex;
	}
}

protected void grdOpportunities_RowDataBound(object sender, GridViewRowEventArgs e)
{
	if (e.Row.RowType == DataControlRowType.DataRow)
	{
		if ((grdOpportunitiesDeleteColumnIndex >= 0) && (grdOpportunitiesDeleteColumnIndex < e.Row.Cells.Count))
		{
			TableCell cell = e.Row.Cells[grdOpportunitiesDeleteColumnIndex];
			foreach (Control c in cell.Controls)
			{
				LinkButton btn = c as LinkButton;
				if (btn != null)
				{
					btn.Attributes.Add("onclick", "javascript: return confirm('" + Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("grdOpportunities.abd48f2a-c43a-4369-a863-aa4963e4be44.ConfirmationMessage").ToString()) + "');");
					return;
				}
			}
		}
	}
}
   
protected void grdOpportunitiespage_changing(object sender, GridViewPageEventArgs e)
{
 grdOpportunities.PageIndex = e.NewPageIndex;
 grdOpportunities.DataBind();
}
protected void grdOpportunities_Sorting(object sender, GridViewSortEventArgs e) { }
protected void grdOpportunities_RowCommand(object sender, GridViewCommandEventArgs e)
{
    if (e.CommandName == "Page")
        return;
    int rowIndex;
    if (Int32.TryParse(e.CommandArgument.ToString(), out rowIndex))
    {
        dtsOpportunities.SelectedIndex = rowIndex;
		object currentEntity = dtsOpportunities.Current;
        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
		string id = String.Empty;
        //Check if this is an unpersisted entity and use its InstanceId
        if (Sage.Platform.WebPortal.PortalUtil.ObjectIsNewEntity(currentEntity))
        {
		    if (grdOpportunities.DataKeys[0].Values.Count > 1) {
                foreach (DictionaryEntry val in grdOpportunities.DataKeys[rowIndex].Values)
                {
                    if (val.Key.ToString() == "InstanceId")
                    {
                        Guid instanceId = (Guid)val.Value;
                        dtsOpportunities.SetCurrentEntityByInstanceId(instanceId);
                        id = instanceId.ToString();
		                currentEntity = dtsOpportunities.Current;
                        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
                            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
                    }
                }                 
            }
        }
        else
        {
            foreach (DictionaryEntry val in grdOpportunities.DataKeys[rowIndex].Values)
            {
                if (val.Key.ToString() != "InstanceId")
                {
                    id = val.Value.ToString();
                }
            }
        }		
		if (e.CommandName.Equals("Delete"))
		{
            Sage.Entity.Interfaces.ICampaign mainentity = this.BindingSource.Current as Sage.Entity.Interfaces.ICampaign;
			if (mainentity != null)
			{
			    Sage.Entity.Interfaces.IOpportunityCampaign childEntity = null;
			    if((currentEntity != null) && (currentEntity is Sage.Entity.Interfaces.IOpportunityCampaign))
			    {
			        childEntity = (Sage.Entity.Interfaces.IOpportunityCampaign)currentEntity;    
			    }
			    else if (id != null)
			    {
                    childEntity = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.IOpportunityCampaign>(id);
            }
				if(childEntity != null)
				{
			         mainentity.Opportunities.Remove(childEntity);
					 mainentity.Save();
					 if((childEntity.PersistentState & Sage.Platform.Orm.Interfaces.PersistentState.New) <= 0)
					 {
					     childEntity.Delete();
					 }
					 dtsOpportunities.SelectedIndex = -1;
			    }
		    }
		}
	}
    grdOpportunities_refresh();
}
	
	protected void grdOpportunities_refresh()
	{
		if (PageWorkItem != null) {
			Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
			if (refresher != null)
			{
				refresher.RefreshAll();
			}
			else
			{
				Response.Redirect(Request.Url.ToString());
			}
		}
	}
	
            protected void grdOpportunities_RowDeleting(object sender, GridViewDeleteEventArgs e)
	{
		grdOpportunities.SelectedIndex = -1;
	}
	</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="CampaignOpportunities_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkCampaignOpportunitiesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="campaignopptab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ICampaign); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsOpportunities;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsOpportunities
{ 
  get 
  {
    if (_dtsOpportunities == null)
    {
             _dtsOpportunities = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IOpportunityCampaign), 
	    EntityType              ,"Opportunities", System.Reflection.MemberTypes.Property);
            	   	}
 	return _dtsOpportunities;
  }
}

void dtsOpportunities_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsOpportunities.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsOpportunities);
   }
}

 



 

protected override void OnAddEntityBindings() { 
       dtsOpportunities.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("Opportunities", grdOpportunities ));
   dtsOpportunities.BindFieldNames = new String[] { "Id","Opportunity.Description","Opportunity.Id","Opportunity.Account.AccountName","Opportunity.Account.Id","Opportunity.EstimatedClose","Opportunity.SalesPotential","Opportunity.CloseProbability","Opportunity.Weighted","Opportunity.Status","Opportunity.AccountManager.UserInfo.UserName","Opportunity.ModifyDate" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsOpportunities_OnCurrentEntitySet);
     
}
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dtsOpportunities.SourceObject == null) { dtsOpportunities.SourceObject = BindingSource.Current; }
if (dtsOpportunities.SourceObject == null) { RegisterBindingsWithClient(dtsOpportunities); }
dtsOpportunities.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new CampaignOpportunitiesAdapter(this)); }
}

public class CampaignOpportunitiesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ICampaignOpportunities
{
	public CampaignOpportunitiesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdOpportunities;
	public Sage.Platform.Controls.IDataGridControl grdOpportunities
	{
		get { return FindControl(ref _grdOpportunities, "grdOpportunities"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsOpportunities;
	public Sage.Platform.Controls.IDataSourceControl dtsOpportunities
	{
		get { return FindControl(ref _dtsOpportunities, "dtsOpportunities"); }
	}

}

</script>

<script type="text/javascript">
</script>
