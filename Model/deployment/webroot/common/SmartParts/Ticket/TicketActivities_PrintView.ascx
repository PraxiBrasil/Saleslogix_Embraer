<%@ Control Language="C#" ClassName="TicketActivities_PrintView" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="10%" />
            <col width="10%" />
            <col width="10%" />
     <tr>
            <td  colspan="2" >
<asp:Panel runat="server" ID="ctrlDescription" CssClass="controlslist "
>
   <div class="twocollbl alignleft" style="margin-top:.5em;">
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"  style="margin-top:.5em;" >
<asp:Label runat="server" ID="txtComments" style="white-space:normal"  />
  </div>

  
</asp:Panel>
      </td>
                      <td  >

      </td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  colspan="3" >
<SalesLogix:SlxGridView runat="server" ID="grdActivities" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdActivitiespage_changing" EmptyTableRowText="<%$ resources: grdActivities.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdActivities_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField          >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="TicketActivity"
   EntityId='<%# dtsActivities.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# base.GetLocalResourceObject("grdActivities.00e5e360-e197-4174-8292-3850c917f7e1.FormatString").ToString() %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:TemplateField   HeaderText="<%$ resources: grdActivities.2ad902ad-6096-4e3a-8393-2acbcc06ef28.ColumnHeading %>"       SortExpression="ActivityTypeCode"  >
    <itemtemplate>
   <SalesLogix:PickListControl runat="server" ID="grdActivitiescol2" PickListId="kSYST0000372" ValueStoredAsText="False" PickListName="Ticket Activity" PickListValue='<%#  dtsActivities.getPropertyValue(Container.DataItem, "ActivityTypeCode")  %>' DisplayMode="AsText" CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdActivities.31671090-9801-4acd-83ab-8987659996ea.ColumnHeading %>"       SortExpression="ModifyUser"  >
    <itemtemplate>
   <SalesLogix:SlxUserControl runat="server" ID="grdActivitiescol3" DisplayMode="AsText" LookupResultValue='<%#  dtsActivities.getPropertyValue(Container.DataItem, "ModifyUser")  %>' CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdActivities.1e663f18-5b37-4d49-bb91-0871d5a85bf5.ColumnHeading %>"       SortExpression="AssignedDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdActivitiescol4"  DisplayMode="AsText" DateTimeValue='<%#  dtsActivities.getPropertyValue(Container.DataItem, "AssignedDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdActivities.54f8b453-e05c-4563-8ae6-19b61665cbfe.ColumnHeading %>"       SortExpression="PublicAccessCode"  >
    <itemtemplate>
   <SalesLogix:PickListControl runat="server" ID="grdActivitiescol5" PickListId="kSYST0000373" ValueStoredAsText="False" PickListName="Ticket Activity Public Access" PickListValue='<%#  dtsActivities.getPropertyValue(Container.DataItem, "PublicAccessCode")  %>' DisplayMode="AsText" CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="ActivityDescription" 
      HeaderText="<%$ resources: grdActivities.30158ae5-18ee-45a3-8b7b-c99c1e90e48d.ColumnHeading %>"          >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdActivitiespage_changing(object sender, GridViewPageEventArgs e)
{
 grdActivities.PageIndex = e.NewPageIndex;
 grdActivities.DataBind();
}
protected void grdActivities_Sorting(object sender, GridViewSortEventArgs e) { }
</script>

      </td>
                  </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="TicketActivities_PrintView_RTools" ToolbarLocation="right">
   
   </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ITicket); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsActivities;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsActivities
{ 
  get 
  {
    if (_dtsActivities == null)
    {
             _dtsActivities = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.ITicketActivity), 
	    EntityType              ,"TicketActivities", System.Reflection.MemberTypes.Property);
                   _dtsActivities.UseSmartQuery = true;
      	   	}
 	return _dtsActivities;
  }
}

void dtsActivities_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsActivities.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsActivities);
   }
}

 



 private Sage.Platform.WebPortal.Binding.WebEntityBindingSource _dtsTicketActivityDataSource;
public Sage.Platform.WebPortal.Binding.WebEntityBindingSource dtsTicketActivityDataSource
{ 
  get 
  {
    if (_dtsTicketActivityDataSource == null)
    {
             _dtsTicketActivityDataSource = new Sage.Platform.WebPortal.Binding.WebEntityBindingSource(typeof(Sage.Entity.Interfaces.ITicketActivity),
	    EntityType              );       	   	}
 	return _dtsTicketActivityDataSource;
  }
}

void dtsTicketActivityDataSource_OnCurrentEntitySet(object sender, EventArgs e) 
{
    string changeKey = GetChangeStateKey(typeof(Sage.Entity.Interfaces.ITicketActivity), Sage.Platform.Orm.Entities.EntityViewMode.Insert);
    object current = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.ITicketActivity>();
    RestoreEntityChanges(changeKey, current);
    dtsTicketActivityDataSource.Current = current;
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsTicketActivityDataSource);
   }
}

 

protected override void OnUnload(EventArgs e)
{
    base.OnUnload(e);
    string changeKey = GetChangeStateKey(typeof(Sage.Entity.Interfaces.ITicketActivity), Sage.Platform.Orm.Entities.EntityViewMode.Insert);
    SaveEntityChanges(changeKey, dtsTicketActivityDataSource.Current);
}


 

protected override void OnAddEntityBindings() { 
    
                        // txtComments.Text Binding 
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ActivityDescription", txtComments, "Text");
        dtsTicketActivityDataSource.Bindings.Add(txtCommentsTextBinding);
       
        
        
           dtsActivities.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("TicketActivities", grdActivities ));
   dtsActivities.BindFieldNames = new String[] { "Id","ActivityTypeCode","ModifyUser","AssignedDate","PublicAccessCode","ActivityDescription" };
                
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsActivities_OnCurrentEntitySet);
       BindingSource.OnCurrentEntitySet += new EventHandler(dtsTicketActivityDataSource_OnCurrentEntitySet);
     
    }
	   	   	   	   	   	   
protected override void OnFormBound()
{
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
if (dtsActivities.SourceObject == null) { dtsActivities.SourceObject = BindingSource.Current; }
if (dtsActivities.SourceObject == null) { RegisterBindingsWithClient(dtsActivities); }
dtsActivities.Bind();

dtsTicketActivityDataSource.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											if (tool is PageLink)
						{
							PageLink plink = tool as PageLink;
							if (plink.LinkType == enumPageLinkType.HelpFileName)
							{
											tinfo.RightTools.Add(tool);
												}
						}
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new TicketActivitiesAdapter(this)); }
}

public class TicketActivitiesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ITicketActivities
{
	public TicketActivitiesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IControlsListControl _ctrlDescription;
	public Sage.Platform.Controls.IControlsListControl ctrlDescription
	{
		get { return FindControl(ref _ctrlDescription, "ctrlDescription"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtComments;
	public Sage.Platform.Controls.ITextBoxControl txtComments
	{
		get { return FindControl(ref _txtComments, "txtComments"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdCommentsDateStamp;
	public Sage.Platform.Controls.IButtonControl cmdCommentsDateStamp
	{
		get { return FindControl(ref _cmdCommentsDateStamp, "cmdCommentsDateStamp"); }
	}
	private Sage.Platform.Controls.IDataGridControl _grdActivities;
	public Sage.Platform.Controls.IDataGridControl grdActivities
	{
		get { return FindControl(ref _grdActivities, "grdActivities"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdAdvanced;
	public Sage.Platform.Controls.IButtonControl cmdAdvanced
	{
		get { return FindControl(ref _cmdAdvanced, "cmdAdvanced"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsActivities;
	public Sage.Platform.Controls.IDataSourceControl dtsActivities
	{
		get { return FindControl(ref _dtsActivities, "dtsActivities"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsTicketActivityDataSource;
	public Sage.Platform.Controls.IDataSourceControl dtsTicketActivityDataSource
	{
		get { return FindControl(ref _dtsTicketActivityDataSource, "dtsTicketActivityDataSource"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdTicketActivities;
	public Sage.Platform.Controls.IButtonControl cmdTicketActivities
	{
		get { return FindControl(ref _cmdTicketActivities, "cmdTicketActivities"); }
	}

}

</script>

<script type="text/javascript">
</script>
