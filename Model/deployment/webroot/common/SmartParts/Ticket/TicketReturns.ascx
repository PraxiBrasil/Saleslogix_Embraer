<%@ Control Language="C#" ClassName="TicketReturns" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdReturns" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="10" OnPageIndexChanging="grdReturnspage_changing" EmptyTableRowText="<%$ resources: grdReturns.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdReturns_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:TemplateField   HeaderText="<%$ resources: grdReturns.57ff14cc-61cf-48c1-81ec-52cdc537ce2d.ColumnHeading %>"       SortExpression="ReturnNumber"  >
    <itemtemplate>
      <SalesLogix:PageLink runat="server" NavigateUrl="Return"
   EntityId='<%# dtsReturns.getPropertyValue(Container.DataItem, "Id") %>'     Text='<%# dtsReturns.getPropertyValue(Container.DataItem, "ReturnNumber") %>' 
         LinkType="EntityAlias"></SalesLogix:PageLink>
     </itemtemplate></asp:TemplateField>
      <asp:TemplateField   HeaderText="<%$ resources: grdReturns.932ff95b-0bd5-49c8-901a-0f832e62af94.ColumnHeading %>"       SortExpression="CreateDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdReturnscol2" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dtsReturns.getPropertyValue(Container.DataItem, "CreateDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdReturns.a3a93ba9-bc4f-42a5-8c5a-de9b65871384.ColumnHeading %>"       SortExpression="Status"  >
    <itemtemplate>
   <SalesLogix:PickListControl runat="server" ID="grdReturnscol3" PickListId="kSYST0000411" ValueStoredAsText="True" PickListName="Return Status" PickListValue='<%#  dtsReturns.getPropertyValue(Container.DataItem, "Status")  %>' DisplayMode="AsText" CssClass="" />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdReturns.3e710cf3-3e92-42ce-ab03-5edd88a78113.ColumnHeading %>"       SortExpression="ClosedDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdReturnscol4" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dtsReturns.getPropertyValue(Container.DataItem, "ClosedDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="ReturnDetailNotes" 
      HeaderText="<%$ resources: grdReturns.3336f4be-3154-4e56-a6ce-1ed0137dde34.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ShortNotes" 
      HeaderText="<%$ resources: grdReturns.211ca288-bf31-4196-b5ce-0d70e867f023.ColumnHeading %>"       SortExpression="ShortNotes"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdReturnspage_changing(object sender, GridViewPageEventArgs e)
{
 grdReturns.PageIndex = e.NewPageIndex;
 grdReturns.DataBind();
}
protected void grdReturns_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="TicketReturns_RTools" ToolbarLocation="right">
    <asp:HyperLink runat="server" ID="lnkAddReturn"   ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16x16"    ToolTip="<%$ resources: lnkAddReturn.ToolTip %>"    NavigateUrl="~/InsertReturn.aspx?modeid=Insert"     />

  <SalesLogix:PageLink ID="lnkTicketReturnsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="csrticketrma.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ITicket); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsReturns;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsReturns
{ 
  get 
  {
    if (_dtsReturns == null)
    {
             _dtsReturns = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IReturn), 
	    EntityType              ,"Returns", System.Reflection.MemberTypes.Property);
                   _dtsReturns.UseSmartQuery = true;
      	   	}
 	return _dtsReturns;
  }
}

void dtsReturns_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsReturns.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsReturns);
   }
}

 



 

protected override void OnAddEntityBindings() { 
       dtsReturns.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("Returns", grdReturns ));
   dtsReturns.BindFieldNames = new String[] { "Id","ReturnNumber","CreateDate","Status","ClosedDate","ReturnDetailNotes","ShortNotes" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsReturns_OnCurrentEntitySet);
     
    }
	   

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (dtsReturns.SourceObject == null) { dtsReturns.SourceObject = BindingSource.Current; }
if (dtsReturns.SourceObject == null) { RegisterBindingsWithClient(dtsReturns); }
dtsReturns.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new TicketReturnsAdapter(this)); }
}

public class TicketReturnsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ITicketReturns
{
	public TicketReturnsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IDataGridControl _grdReturns;
	public Sage.Platform.Controls.IDataGridControl grdReturns
	{
		get { return FindControl(ref _grdReturns, "grdReturns"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dtsReturns;
	public Sage.Platform.Controls.IDataSourceControl dtsReturns
	{
		get { return FindControl(ref _dtsReturns, "dtsReturns"); }
	}
	private Sage.Platform.Controls.ILinkControl _lnkAddReturn;
	public Sage.Platform.Controls.ILinkControl lnkAddReturn
	{
		get { return FindControl(ref _lnkAddReturn, "lnkAddReturn"); }
	}

}

</script>

<script type="text/javascript">
</script>
