<%@ Control Language="C#" ClassName="BillToShipTo" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="1%" />
            <col width="49%" />
            <col width="1%" />
            <col width="49%" />
     <tr>
            <td  colspan="2" >
 <div class="slxlabel"><asp:Label runat="server" ID="lblBilling" Text="<%$ resources: lblBilling.Text %>"  />
</div>
      </td>
                      <td  colspan="2" >
 <div class="slxlabel"><asp:Label runat="server" ID="lblShipping" Text="<%$ resources: lblShipping.Text %>"  />
</div>
      </td>
            </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueNameBilling_lbl" AssociatedControlID="lueNameBilling" runat="server" Text="<%$ resources: lueNameBilling.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueNameBilling" ButtonToolTip="<%$ resources: lueNameBilling.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AutoPostBack="true" Required="true" OverrideSeedOnSearch="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameBilling.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameBilling.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameBilling.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameBilling.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameBilling.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameBilling.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueNameShipping_lbl" AssociatedControlID="lueNameShipping" runat="server" Text="<%$ resources: lueNameShipping.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueNameShipping" ButtonToolTip="<%$ resources: lueNameShipping.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AutoPostBack="true" Required="true" OverrideSeedOnSearch="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameShipping.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameShipping.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameShipping.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameShipping.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameShipping.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueNameShipping.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lnkBillingAccount_lbl" AssociatedControlID="lnkBillingAccount" runat="server" Text="<%$ resources: lnkBillingAccount.Caption %>" ></asp:Label>
 </div>   
  <SalesLogix:PageLink runat="server" ID="lnkBillingAccount" NavigateUrl="Account"         LinkType="EntityAlias"></SalesLogix:PageLink>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lnkShippingAccount_lbl" AssociatedControlID="lnkShippingAccount" runat="server" Text="<%$ resources: lnkShippingAccount.Caption %>" ></asp:Label>
 </div>   
  <SalesLogix:PageLink runat="server" ID="lnkShippingAccount" NavigateUrl="Account"         LinkType="EntityAlias"></SalesLogix:PageLink>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lstbxBillingAddress_lbl" AssociatedControlID="lstbxBillingAddress" runat="server" Text="<%$ resources: lstbxBillingAddress.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="lstbxBillingAddress"  SelectionMode="Single" Rows="1" AutoPostBack="true"  >
</asp:ListBox>
  </div>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lstbxShippingAddress_lbl" AssociatedControlID="lstbxShippingAddress" runat="server" Text="<%$ resources: lstbxShippingAddress.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="lstbxShippingAddress"  SelectionMode="Single" Rows="1" AutoPostBack="true"  >
</asp:ListBox>
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="addBilling_lbl" AssociatedControlID="addBilling" runat="server" Text="<%$ resources: addBilling.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol address"  >
    <SalesLogix:AddressControl runat="server" ID="addBilling" AddressDescriptionPickListName="Address Description (Contact)" AddressDescriptionPickListId="kSYST0000013" ButtonToolTip="<%$ resources: addBilling.ButtonToolTip %>" AddressToolTip="<%$ resources: addBilling.AddressToolTip %>" IsPrimaryVisible="false" IsMailingVisible="false" >
<AddressDescStyle Height="80"></AddressDescStyle> </SalesLogix:AddressControl>
</div>

      </td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="addShipping_lbl" AssociatedControlID="addShipping" runat="server" Text="<%$ resources: addShipping.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol address"  >
    <SalesLogix:AddressControl runat="server" ID="addShipping" AddressDescriptionPickListName="Address Description (Contact)" AddressDescriptionPickListId="kSYST0000013" ButtonToolTip="<%$ resources: addShipping.ButtonToolTip %>" AddressToolTip="<%$ resources: addShipping.AddressToolTip %>" IsPrimaryVisible="false" IsMailingVisible="false" >
<AddressDescStyle Height="80"></AddressDescStyle> </SalesLogix:AddressControl>
</div>

      </td>
      </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklShipVia_lbl" AssociatedControlID="pklShipVia" runat="server" Text="<%$ resources: pklShipVia.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklShipVia" PickListName="Delivery Methods" MustExistInList="false"  />
  </div>

      </td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="BillToShipTo_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="lnkBillToShipToHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="salesorderbillshiptab.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ISalesOrder); }
}

 

protected override void OnAddEntityBindings() { 
    
        
                        // lueNameBilling.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueNameBillingLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingContact", lueNameBilling, "LookupResultValue");
        BindingSource.Bindings.Add(lueNameBillingLookupResultValueBinding);
                 // lueNameBilling.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueNameBillingSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingContact.Account.Id", lueNameBilling, "SeedValue");
        lueNameBillingSeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueNameBillingSeedValueBinding);
                       // lueNameShipping.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueNameShippingLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingContact", lueNameShipping, "LookupResultValue");
        BindingSource.Bindings.Add(lueNameShippingLookupResultValueBinding);
                 // lueNameShipping.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueNameShippingSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingContact.Account.Id", lueNameShipping, "SeedValue");
        lueNameShippingSeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueNameShippingSeedValueBinding);
                       // lnkBillingAccount.EntityId Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lnkBillingAccountEntityIdBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingContact.Account.Id", lnkBillingAccount, "EntityId");
        BindingSource.Bindings.Add(lnkBillingAccountEntityIdBinding);
                 // lnkBillingAccount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lnkBillingAccountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingContact.AccountName", lnkBillingAccount, "Text");
        lnkBillingAccountTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lnkBillingAccountTextBinding);
                       // lnkShippingAccount.EntityId Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lnkShippingAccountEntityIdBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingContact.Account.Id", lnkShippingAccount, "EntityId");
        BindingSource.Bindings.Add(lnkShippingAccountEntityIdBinding);
                 // lnkShippingAccount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lnkShippingAccountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingContact.AccountName", lnkShippingAccount, "Text");
        lnkShippingAccountTextBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lnkShippingAccountTextBinding);
       
        
                        // addBilling.AddressCity Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressCityBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.City", addBilling, "AddressCity");
        addBillingAddressCityBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressCityBinding);
                 // addBilling.AddressCountry Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressCountryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.Country", addBilling, "AddressCountry");
        addBillingAddressCountryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressCountryBinding);
                 // addBilling.AddressCounty Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressCountyBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.County", addBilling, "AddressCounty");
        addBillingAddressCountyBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressCountyBinding);
                 // addBilling.AddressDesc1 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressDesc1Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.Address1", addBilling, "AddressDesc1");
        BindingSource.Bindings.Add(addBillingAddressDesc1Binding);
                 // addBilling.AddressDesc2 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressDesc2Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.Address2", addBilling, "AddressDesc2");
        addBillingAddressDesc2Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressDesc2Binding);
                 // addBilling.AddressDesc3 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressDesc3Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.Address3", addBilling, "AddressDesc3");
        addBillingAddressDesc3Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressDesc3Binding);
                 // addBilling.AddressDescription Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressDescriptionBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.Description", addBilling, "AddressDescription");
        addBillingAddressDescriptionBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressDescriptionBinding);
                 // addBilling.AddressDisplay Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressDisplayBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.FullAddress", addBilling, "AddressDisplay");
        addBillingAddressDisplayBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressDisplayBinding);
                 // addBilling.AddressPostalCode Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressPostalCodeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.PostalCode", addBilling, "AddressPostalCode");
        addBillingAddressPostalCodeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressPostalCodeBinding);
                 // addBilling.AddressState Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addBillingAddressStateBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BillingAddress.State", addBilling, "AddressState");
        addBillingAddressStateBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addBillingAddressStateBinding);
                       // addShipping.AddressCity Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressCityBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.City", addShipping, "AddressCity");
        addShippingAddressCityBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressCityBinding);
                 // addShipping.AddressCountry Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressCountryBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.Country", addShipping, "AddressCountry");
        addShippingAddressCountryBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressCountryBinding);
                 // addShipping.AddressCounty Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressCountyBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.County", addShipping, "AddressCounty");
        addShippingAddressCountyBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressCountyBinding);
                 // addShipping.AddressDesc1 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressDesc1Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.Address1", addShipping, "AddressDesc1");
        BindingSource.Bindings.Add(addShippingAddressDesc1Binding);
                 // addShipping.AddressDesc2 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressDesc2Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.Address2", addShipping, "AddressDesc2");
        addShippingAddressDesc2Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressDesc2Binding);
                 // addShipping.AddressDesc3 Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressDesc3Binding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.Address3", addShipping, "AddressDesc3");
        addShippingAddressDesc3Binding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressDesc3Binding);
                 // addShipping.AddressDescription Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressDescriptionBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.Description", addShipping, "AddressDescription");
        addShippingAddressDescriptionBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressDescriptionBinding);
                 // addShipping.AddressDisplay Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressDisplayBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.FullAddress", addShipping, "AddressDisplay");
        addShippingAddressDisplayBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressDisplayBinding);
                 // addShipping.AddressPostalCode Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressPostalCodeBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.PostalCode", addShipping, "AddressPostalCode");
        addShippingAddressPostalCodeBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressPostalCodeBinding);
                 // addShipping.AddressState Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding addShippingAddressStateBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShippingAddress.State", addShipping, "AddressState");
        addShippingAddressStateBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(addShippingAddressStateBinding);
                       // pklShipVia.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklShipViaPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ShipVia", pklShipVia, "PickListValue");
        BindingSource.Bindings.Add(pklShipViaPickListValueBinding);
    
   
}
	   	   	   	   	   	   	   	   	   	   	   
protected void lueNameBilling_ChangeAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("BillToShipTo.lueNameBilling_OnChange", methodArgs);
}
protected void lueNameShipping_ChangeAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("BillToShipTo.lueNameShipping_OnChange", methodArgs);
}
protected void lstbxBillingAddress_ChangeAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("BillToShipTo.lstbxBillingAddress_OnChange", methodArgs);
}
protected void lstbxShippingAddress_ChangeAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("BillToShipTo.lstbxShippingAddress_OnChange", methodArgs);
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueNameBilling.LookupResultValueChanged += new EventHandler(lueNameBilling_ChangeAction);
lueNameShipping.LookupResultValueChanged += new EventHandler(lueNameShipping_ChangeAction);
lstbxBillingAddress.TextChanged += new EventHandler(lstbxBillingAddress_ChangeAction);
lstbxShippingAddress.TextChanged += new EventHandler(lstbxShippingAddress_ChangeAction);


}

protected void quickformload0(object sender, EventArgs e) {
if (BindingSource.Current != null)
{
	Sage.Entity.Interfaces.ISalesOrder salesOrder = BindingSource.Current as Sage.Entity.Interfaces.ISalesOrder;
	if (salesOrder != null)
	{
		System.Web.UI.WebControls.ListItem billingItem;
		lstbxBillingAddress.Items.Clear();
		if (salesOrder.BillingContact != null)
        {
            System.Collections.Generic.IList<Sage.Entity.Interfaces.IAddress> billingAddresses = Sage.Platform.EntityFactory.GetRepository<Sage.Entity.Interfaces.IAddress>().FindByProperty("EntityId", salesOrder.BillingContact.Id.ToString());
            if (billingAddresses != null)
            {
                foreach (Sage.Entity.Interfaces.IAddress address in billingAddresses)
                {
                    billingItem = new System.Web.UI.WebControls.ListItem();
                    billingItem.Text = address.Description;
                    billingItem.Value = address.Id.ToString();
                    billingItem.Selected = address.Description.Equals(salesOrder.BillingAddress.Description);
                    lstbxBillingAddress.Items.Add(billingItem);
                }
            }
        }
		if (salesOrder.ShippingContact != null)
		{
			System.Web.UI.WebControls.ListItem shippingItem;
			System.Collections.Generic.IList<Sage.Entity.Interfaces.IAddress> shippingAddresses = Sage.Platform.EntityFactory.GetRepository<Sage.Entity.Interfaces.IAddress>().FindByProperty("EntityId", salesOrder.ShippingContact.Id.ToString());
			lstbxShippingAddress.Items.Clear();
			foreach (Sage.Entity.Interfaces.IAddress address in shippingAddresses)
			{
				shippingItem = new System.Web.UI.WebControls.ListItem();
				shippingItem.Text = address.Description;
				shippingItem.Value = address.Id.ToString();
				shippingItem.Selected = address.Description.Equals(salesOrder.ShippingAddress.Description);
				lstbxShippingAddress.Items.Add(shippingItem);
			}
		}

        bool closed = salesOrder.Status.Equals(GetLocalResourceObject("SalesOrderStatus_Closed"));
        lueNameBilling.Enabled = !closed;
        lueNameShipping.Enabled = !closed;
        lstbxBillingAddress.Enabled = !closed;
        lstbxShippingAddress.Enabled = !closed;
        addBilling.Enabled = !closed;
        addShipping.Enabled = !closed;
        pklShipVia.Enabled = !closed;
	}
}
}
protected override void OnFormBound()
{
quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	if (BindingSource != null)
	{
		if (BindingSource.Current != null)
		{
			tinfo.Description = BindingSource.Current.ToString();
			tinfo.Title = BindingSource.Current.ToString();
		}
	}
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new BillToShipToAdapter(this)); }
}

public class BillToShipToAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IBillToShipTo
{
	public BillToShipToAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ILabelControl _lblBilling;
	public Sage.Platform.Controls.ILabelControl lblBilling
	{
		get { return FindControl(ref _lblBilling, "lblBilling"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueNameBilling;
	public Sage.Platform.Controls.ILookupControl lueNameBilling
	{
		get { return FindControl(ref _lueNameBilling, "lueNameBilling"); }
	}
	private Sage.Platform.Controls.IListBoxControl _lstbxBillingAddress;
	public Sage.Platform.Controls.IListBoxControl lstbxBillingAddress
	{
		get { return FindControl(ref _lstbxBillingAddress, "lstbxBillingAddress"); }
	}
	private Sage.Platform.Controls.IAddressControl _addBilling;
	public Sage.Platform.Controls.IAddressControl addBilling
	{
		get { return FindControl(ref _addBilling, "addBilling"); }
	}
	private Sage.Platform.Controls.ILabelControl _lblShipping;
	public Sage.Platform.Controls.ILabelControl lblShipping
	{
		get { return FindControl(ref _lblShipping, "lblShipping"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueNameShipping;
	public Sage.Platform.Controls.ILookupControl lueNameShipping
	{
		get { return FindControl(ref _lueNameShipping, "lueNameShipping"); }
	}
	private Sage.Platform.Controls.IListBoxControl _lstbxShippingAddress;
	public Sage.Platform.Controls.IListBoxControl lstbxShippingAddress
	{
		get { return FindControl(ref _lstbxShippingAddress, "lstbxShippingAddress"); }
	}
	private Sage.Platform.Controls.IAddressControl _addShipping;
	public Sage.Platform.Controls.IAddressControl addShipping
	{
		get { return FindControl(ref _addShipping, "addShipping"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklShipVia;
	public Sage.Platform.Controls.IPickListControl pklShipVia
	{
		get { return FindControl(ref _pklShipVia, "pklShipVia"); }
	}

	public void lueNameBilling_OnChange(System.EventArgs e)
	{
		Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
		Object[] methodArgs = new Object[] { this, e };
		lib.Execute("BillToShipTo.lueNameBilling_OnChange", methodArgs);
	}
	public void lstbxBillingAddress_OnChange(System.EventArgs e)
	{
		Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
		Object[] methodArgs = new Object[] { this, e };
		lib.Execute("BillToShipTo.lstbxBillingAddress_OnChange", methodArgs);
	}
	public void lueNameShipping_OnChange(System.EventArgs e)
	{
		Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
		Object[] methodArgs = new Object[] { this, e };
		lib.Execute("BillToShipTo.lueNameShipping_OnChange", methodArgs);
	}
	public void lstbxShippingAddress_OnChange(System.EventArgs e)
	{
		Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
		Object[] methodArgs = new Object[] { this, e };
		lib.Execute("BillToShipTo.lstbxShippingAddress_OnChange", methodArgs);
	}
}

</script>

<script type="text/javascript">
</script>
