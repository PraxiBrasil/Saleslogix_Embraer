<%@ Control Language="C#" ClassName="SalesOrderDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAccount_lbl" AssociatedControlID="lueAccount" runat="server" Text="<%$ resources: lueAccount.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueAccount" ButtonToolTip="<%$ resources: lueAccount.ButtonToolTip %>" LookupEntityName="Account" LookupEntityTypeName="Sage.SalesLogix.Entities.Account, Sage.SalesLogix.Entities" EnableHyperLinking="true" AutoPostBack="true" Required="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.SubType.PropertyHeader %>" PropertyName="SubType" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td rowspan="10"  >
<%@ Register tagPrefix="SalesLogix" tagName="wbrSalesOrder" src="~/SmartParts/SalesOrder/SalesOrderSnapShot.ascx" %>
<SalesLogix:wbrSalesOrder id="wbrSalesOrder" runat="server" OnInit="setwbrSalesOrderContext" ></SalesLogix:wbrSalesOrder>
<script runat="server" type="text/C#">
	protected void setwbrSalesOrderContext(object sender, EventArgs e)
	{
		Sage.Platform.WebPortal.SmartParts.SmartPart sp = wbrSalesOrder as Sage.Platform.WebPortal.SmartParts.SmartPart;
		if (sp != null)
		{
			sp.InitSmartPart(ParentWorkItem, PageWorkItem.Services.Get<Sage.Platform.Application.UI.Web.IPageWorkItemLocator>());
			sp.DialogService = DialogService;
			Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPart esp = sp as Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPart;
			if (esp != null)
			{
                esp.InitEntityBoundSmartPart(PageWorkItem.Services.Get<Sage.Platform.Application.IEntityContextService>());
			}
		}
	}
</script>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrAccountManager_lbl" AssociatedControlID="usrAccountManager" runat="server" Text="<%$ resources: usrAccountManager.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol user"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrAccountManager" ButtonToolTip="<%$ resources: usrAccountManager.ButtonToolTip %>"  />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueOpportunity_lbl" AssociatedControlID="lueOpportunity" runat="server" Text="<%$ resources: lueOpportunity.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueOpportunity" ButtonToolTip="<%$ resources: lueOpportunity.ButtonToolTip %>" LookupEntityName="Opportunity" LookupEntityTypeName="Sage.Entity.Interfaces.IOpportunity, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Stage.PropertyHeader %>" PropertyName="Stage" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueOpportunity.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpDateCreated_lbl" AssociatedControlID="dtpDateCreated" runat="server" Text="<%$ resources: dtpDateCreated.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpDateCreated" ReadOnly="true" Enabled="false" ButtonToolTip="<%$ resources: dtpDateCreated.ButtonToolTip %>" />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueRequestedBy_lbl" AssociatedControlID="lueRequestedBy" runat="server" Text="<%$ resources: lueRequestedBy.Caption %>" ></asp:Label>
 </div>   
  <div  class="textcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lueRequestedBy" ButtonToolTip="<%$ resources: lueRequestedBy.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" InitializeLookup="true" AllowClearingResult="true" OverrideSeedOnSearch="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="Phone"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueRequestedBy.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None"  UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpOrderDate_lbl" AssociatedControlID="dtpOrderDate" runat="server" Text="<%$ resources: dtpOrderDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpOrderDate" ButtonToolTip="<%$ resources: dtpOrderDate.ButtonToolTip %>" DisplayTime="false" />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpPromisedDate_lbl" AssociatedControlID="dtpPromisedDate" runat="server" Text="<%$ resources: dtpPromisedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpPromisedDate" ButtonToolTip="<%$ resources: dtpPromisedDate.ButtonToolTip %>" DisplayTime="false" />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklType_lbl" AssociatedControlID="pklType" runat="server" Text="<%$ resources: pklType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklType" PickListName="Sales Order Type" MustExistInList="false"  />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklStatus_lbl" AssociatedControlID="pklStatus" runat="server" Text="<%$ resources: pklStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklStatus" PickListName="Sales Order Status" MustExistInList="false"  />
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCustPO_lbl" AssociatedControlID="txtCustPO" runat="server" Text="<%$ resources: txtCustPO.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCustPO" Rows="1"
 />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtComments" Rows="4"
TextMode="MultiLine" Columns="40"
 />
  </div>

      </td>
            </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="SalesOrderDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="groupNavigatorSalesOrder" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSaveSalesOrder"
 AlternateText="<%$ resources: btnSaveSalesOrder.Caption %>"  ToolTip="<%$ resources: btnSaveSalesOrder.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="btnCopy"
 AlternateText="<%$ resources: btnCopy.Caption %>"  ToolTip="<%$ resources: btnCopy.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Copy_16x16"  />
 
    <asp:ImageButton runat="server" ID="btnReset"
 AlternateText="<%$ resources: btnReset.Caption %>"  ToolTip="<%$ resources: btnReset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Reset_16x16"  />
 
    <asp:ImageButton runat="server" ID="btnDelete"
 AlternateText="<%$ resources: btnDelete.Caption %>"  ToolTip="<%$ resources: btnDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="lnkSalesOrderDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="salesorderdetailview.htm" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink> </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.ISalesOrder); }
}

 

protected override void OnAddEntityBindings() { 
                    // lueAccount.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAccountLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account", lueAccount, "LookupResultValue");
        BindingSource.Bindings.Add(lueAccountLookupResultValueBinding);
       
                        // usrAccountManager.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrAccountManagerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", usrAccountManager, "LookupResultValue");
        BindingSource.Bindings.Add(usrAccountManagerLookupResultValueBinding);
                       // lueOpportunity.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOpportunityLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Opportunity", lueOpportunity, "LookupResultValue");
        BindingSource.Bindings.Add(lueOpportunityLookupResultValueBinding);
                 // lueOpportunity.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOpportunitySeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lueOpportunity, "SeedValue");
        lueOpportunitySeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueOpportunitySeedValueBinding);
                       // dtpDateCreated.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpDateCreatedDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CreateDate", dtpDateCreated, "DateTimeValue");
        BindingSource.Bindings.Add(dtpDateCreatedDateTimeValueBinding);
                       // lueRequestedBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueRequestedByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RequestedBy", lueRequestedBy, "LookupResultValue");
        BindingSource.Bindings.Add(lueRequestedByLookupResultValueBinding);
                 // lueRequestedBy.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueRequestedBySeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lueRequestedBy, "SeedValue");
        lueRequestedBySeedValueBinding.IgnoreFLSDisabling = true;
        
        BindingSource.Bindings.Add(lueRequestedBySeedValueBinding);
                       // dtpOrderDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpOrderDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OrderDate", dtpOrderDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpOrderDateDateTimeValueBinding);
                       // dtpPromisedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpPromisedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DatePromised", dtpPromisedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpPromisedDateDateTimeValueBinding);
                       // pklType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OrderType", pklType, "PickListValue");
        BindingSource.Bindings.Add(pklTypePickListValueBinding);
                       // pklStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", pklStatus, "PickListValue");
        BindingSource.Bindings.Add(pklStatusPickListValueBinding);
                       // txtCustPO.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCustPOTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CustomerPurchaseOrderNumber", txtCustPO, "Text");
        BindingSource.Bindings.Add(txtCustPOTextBinding);
                       // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Comments", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
    
   
                    }
	   	   	   	   	   	   	   	   	   	   	   	   
protected void lueAccount_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ISalesOrder>("SalesOrder.OnAccountChanged", objarray);
          lueAccount_ChangeActionBRC(sender, e);
    
  
}
protected void lueAccount_ChangeActionBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void btnSaveSalesOrder_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.ISalesOrder _entity = BindingSource.Current as Sage.Entity.Interfaces.ISalesOrder;
  if (_entity != null) 
  {
    object _parent = GetParentEntity(); 
    if (DialogService.ChildInsertInfo != null) 
    {
      if (_parent != null) 
      {
        if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) 
        {
          DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
        }        
      }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
	if (page != null)
	{
       if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
       {
         shouldSave = false;
       }
	}

    if(shouldSave)
    {
       _entity.Save();
    }
    
    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null) 
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }        
  }
          btnSaveSalesOrder_ClickActionBRC(sender, e);
    
  
}
protected void btnSaveSalesOrder_ClickActionBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void btnCopy_ClickAction(object sender, EventArgs e) {
      Response.Redirect(string.Format("InsertSalesOrder.aspx?modeid=Insert&copyorder=true&entityId={0}", (BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
   
}
protected void btnReset_ClickAction(object sender, EventArgs e) {
  
}
protected void btnDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }
          btnDelete_ClickActionBRC(sender, e);
    
  
}
protected void btnDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("SalesOrder.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueAccount.LookupResultValueChanged += new EventHandler(lueAccount_ChangeAction);
btnSaveSalesOrder.Click += new ImageClickEventHandler(btnSaveSalesOrder_ClickAction);
btnCopy.Click += new ImageClickEventHandler(btnCopy_ClickAction);
btnReset.Click += new ImageClickEventHandler(btnReset_ClickAction);
btnDelete.Click += new ImageClickEventHandler(btnDelete_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.ISalesOrder salesOrder = BindingSource.Current as Sage.Entity.Interfaces.ISalesOrder;
if (salesOrder != null)
{
	bool closed = salesOrder.Status.Equals(GetLocalResourceObject("SalesOrderStatus_Closed"));
	lueAccount.Enabled = !closed;
	usrAccountManager.Enabled = !closed;
	lueOpportunity.Enabled = !closed;
	dtpDateCreated.Enabled = !closed;
	lueRequestedBy.Enabled = !closed;
	dtpOrderDate.Enabled = !closed;
	dtpPromisedDate.Enabled = !closed;
	pklType.Enabled = !closed;
	pklStatus.Enabled = !closed;
	txtCustPO.Enabled = !closed;
	btnSaveSalesOrder.Visible = !closed;
	btnReset.Visible = !closed;
	btnDelete.Visible = !closed;
	txtComments.Enabled = !closed;
}
}
protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSaveSalesOrder);

btnDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("btnDelete.ActionConfirmationMessage").ToString()));

if (ClientBindingMgr != null) { ClientBindingMgr.RegisterResetButton(btnReset); }
quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new SalesOrderDetailsAdapter(this)); }
}

public class SalesOrderDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ISalesOrderDetails
{
	public SalesOrderDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.ILookupControl _lueAccount;
	public Sage.Platform.Controls.ILookupControl lueAccount
	{
		get { return FindControl(ref _lueAccount, "lueAccount"); }
	}
	private Sage.Platform.Controls.IUserControl _usrAccountManager;
	public Sage.Platform.Controls.IUserControl usrAccountManager
	{
		get { return FindControl(ref _usrAccountManager, "usrAccountManager"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueOpportunity;
	public Sage.Platform.Controls.ILookupControl lueOpportunity
	{
		get { return FindControl(ref _lueOpportunity, "lueOpportunity"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpDateCreated;
	public Sage.Platform.Controls.IDateTimePickerControl dtpDateCreated
	{
		get { return FindControl(ref _dtpDateCreated, "dtpDateCreated"); }
	}
	private Sage.Platform.Controls.ILookupControl _lueRequestedBy;
	public Sage.Platform.Controls.ILookupControl lueRequestedBy
	{
		get { return FindControl(ref _lueRequestedBy, "lueRequestedBy"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpOrderDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpOrderDate
	{
		get { return FindControl(ref _dtpOrderDate, "dtpOrderDate"); }
	}
	private Sage.Platform.Controls.IDateTimePickerControl _dtpPromisedDate;
	public Sage.Platform.Controls.IDateTimePickerControl dtpPromisedDate
	{
		get { return FindControl(ref _dtpPromisedDate, "dtpPromisedDate"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklType;
	public Sage.Platform.Controls.IPickListControl pklType
	{
		get { return FindControl(ref _pklType, "pklType"); }
	}
	private Sage.Platform.Controls.IPickListControl _pklStatus;
	public Sage.Platform.Controls.IPickListControl pklStatus
	{
		get { return FindControl(ref _pklStatus, "pklStatus"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtCustPO;
	public Sage.Platform.Controls.ITextBoxControl txtCustPO
	{
		get { return FindControl(ref _txtCustPO, "txtCustPO"); }
	}
	private Sage.Platform.Controls.ITextBoxControl _txtComments;
	public Sage.Platform.Controls.ITextBoxControl txtComments
	{
		get { return FindControl(ref _txtComments, "txtComments"); }
	}
	private Sage.Platform.Controls.IGroupNavigatorControl _groupNavigatorSalesOrder;
	public Sage.Platform.Controls.IGroupNavigatorControl groupNavigatorSalesOrder
	{
		get { return FindControl(ref _groupNavigatorSalesOrder, "groupNavigatorSalesOrder"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnSaveSalesOrder;
	public Sage.Platform.Controls.IButtonControl btnSaveSalesOrder
	{
		get { return FindControl(ref _btnSaveSalesOrder, "btnSaveSalesOrder"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnCopy;
	public Sage.Platform.Controls.IButtonControl btnCopy
	{
		get { return FindControl(ref _btnCopy, "btnCopy"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnReset;
	public Sage.Platform.Controls.IButtonControl btnReset
	{
		get { return FindControl(ref _btnReset, "btnReset"); }
	}
	private Sage.Platform.Controls.IButtonControl _btnDelete;
	public Sage.Platform.Controls.IButtonControl btnDelete
	{
		get { return FindControl(ref _btnDelete, "btnDelete"); }
	}

}

</script>

<script type="text/javascript">
</script>
